<?xml version="1.0" encoding="UTF-8" ?>
<testsuites name="vitest tests" tests="371" failures="0" errors="0" time="1.019971054">
    <testsuite name="tests/integration/main-ipc.test.ts" timestamp="2025-07-05T04:27:07.892Z" hostname="DESKTOP-HR2BSFJ" tests="31" failures="0" errors="0" skipped="0" time="0.012815408">
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; Settings IPC Handlers &gt; should handle settings:get" time="0.001293712">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; Settings IPC Handlers &gt; should handle settings:update" time="0.000273504">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; Settings IPC Handlers &gt; should handle settings:reset" time="0.000241229">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; Settings IPC Handlers &gt; should handle settings:export" time="0.000599818">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; Settings IPC Handlers &gt; should handle settings:import" time="0.000464761">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; Settings IPC Handlers &gt; should handle invalid JSON in settings:import" time="0.000612441">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; LLM Provider IPC Handlers &gt; should handle llm:test-provider with healthy provider" time="0.000605063">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; LLM Provider IPC Handlers &gt; should handle llm:test-provider with unhealthy provider" time="0.000261115">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; LLM Provider IPC Handlers &gt; should handle llm:test-provider with missing provider" time="0.000223635">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; LLM Provider IPC Handlers &gt; should handle llm:get-models successfully" time="0.00046084">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; LLM Provider IPC Handlers &gt; should handle llm:get-models with error" time="0.000225383">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; LLM Provider IPC Handlers &gt; should handle llm:send-message successfully" time="0.00023749">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; LLM Provider IPC Handlers &gt; should handle llm:send-message with error" time="0.000231699">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; LLM Provider IPC Handlers &gt; should handle llm:get-status successfully" time="0.000266883">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; MCP Server IPC Handlers &gt; should handle mcp:add-server successfully" time="0.000779656">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; MCP Server IPC Handlers &gt; should handle mcp:add-server with error" time="0.00017674">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; MCP Server IPC Handlers &gt; should handle mcp:remove-server successfully" time="0.000163735">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; MCP Server IPC Handlers &gt; should handle mcp:update-server successfully" time="0.000243131">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; MCP Server IPC Handlers &gt; should handle mcp:get-servers successfully" time="0.000131044">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; Permission IPC Handlers &gt; should handle permissions:get-pending" time="0.000180013">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; Permission IPC Handlers &gt; should handle permissions:respond successfully" time="0.000271096">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; Permission IPC Handlers &gt; should handle permissions:respond with failure" time="0.000162592">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; Permission IPC Handlers &gt; should handle permissions:get-all" time="0.00034498">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; Permission IPC Handlers &gt; should handle permissions:revoke successfully" time="0.000314621">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; Permission IPC Handlers &gt; should handle permissions:clear-session" time="0.000249544">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; Permission IPC Handlers &gt; should handle permissions:update-settings" time="0.000252876">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; Permission IPC Handlers &gt; should handle permissions:get-settings" time="0.000240171">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; Error Handling &gt; should handle unexpected errors in handlers" time="0.000414931">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; Error Handling &gt; should handle non-Error objects thrown" time="0.000193756">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; Cross-Module Integration &gt; should handle full workflow: add provider, test, and send message" time="0.000349525">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; Cross-Module Integration &gt; should handle MCP server and permissions workflow" time="0.000696737">
        </testcase>
    </testsuite>
    <testsuite name="tests/integration/mcp-integration.test.ts" timestamp="2025-07-05T04:27:07.901Z" hostname="DESKTOP-HR2BSFJ" tests="7" failures="0" errors="0" skipped="0" time="0.031947345">
        <testcase classname="tests/integration/mcp-integration.test.ts" name="MCP Integration Tests &gt; Complete Server Lifecycle &gt; should handle complete server lifecycle from creation to destruction" time="0.010146646">
            <system-out>
🔍 Race condition check for startServer on integration-test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mfalse[39m,
  currentState: [1mnull[22m,
  totalServers: [33m0[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server integration-test-server

🚀 Starting MCP server: Integration Test Server (integration-test-server)

MCP server ready: Integration Test Server {
  tools: [
    {
      name: [32m&apos;test-tool&apos;[39m,
      description: [32m&apos;A test tool&apos;[39m,
      inputSchema: [36m[Object][39m
    }
  ]
}

Discovered tools for integration-test-server: [33m1[39m [ [32m&apos;test-tool&apos;[39m ]

Discovered resources for integration-test-server: [33m1[39m

Discovered prompts for integration-test-server: [33m1[39m

✅ Successfully started MCP server: Integration Test Server
🔓 Released operation lock for server integration-test-server

Executing tool test-tool on server integration-test-server { args: { testParam: [32m&apos;value&apos;[39m } }

Tool execution completed for test-tool { result: { result: [32m&apos;Tool executed successfully&apos;[39m } }

Reading resource file://test.txt from server integration-test-server

Resource read completed for file://test.txt

Executing prompt test-prompt on server integration-test-server { args: { context: [32m&apos;test&apos;[39m } }

Prompt execution completed for test-prompt

Subscribed to resource file://test.txt on integration-test-server

🔍 Race condition check for stopServer on integration-test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server integration-test-server

🛑 Stopping MCP server: Integration Test Server (integration-test-server)

✅ Successfully stopped MCP server: Integration Test Server
🔓 Released operation lock for server integration-test-server

            </system-out>
        </testcase>
        <testcase classname="tests/integration/mcp-integration.test.ts" name="MCP Integration Tests &gt; Complete Server Lifecycle &gt; should handle server failure and recovery" time="0.004143604">
            <system-out>
🔍 Race condition check for startServer on integration-test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mfalse[39m,
  currentState: [1mnull[22m,
  totalServers: [33m0[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server integration-test-server

🚀 Starting MCP server: Integration Test Server (integration-test-server)

🔓 Released operation lock for server integration-test-server

🔍 Race condition check for stopServer on integration-test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;failed&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server integration-test-server

🛑 Stopping MCP server: Integration Test Server (integration-test-server)
✅ Successfully stopped MCP server: Integration Test Server
🔓 Released operation lock for server integration-test-server

🔍 Race condition check for startServer on integration-test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mfalse[39m,
  currentState: [1mnull[22m,
  totalServers: [33m0[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server integration-test-server

🚀 Starting MCP server: Integration Test Server (integration-test-server)

MCP server ready: Integration Test Server {
  tools: [
    {
      name: [32m&apos;test-tool&apos;[39m,
      description: [32m&apos;A test tool&apos;[39m,
      inputSchema: [36m[Object][39m
    }
  ]
}

Discovered tools for integration-test-server: [33m1[39m [ [32m&apos;test-tool&apos;[39m ]

Discovered resources for integration-test-server: [33m1[39m

Discovered prompts for integration-test-server: [33m1[39m

✅ Successfully started MCP server: Integration Test Server
🔓 Released operation lock for server integration-test-server

🔍 Race condition check for stopServer on integration-test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server integration-test-server

🛑 Stopping MCP server: Integration Test Server (integration-test-server)

✅ Successfully stopped MCP server: Integration Test Server
🔓 Released operation lock for server integration-test-server

            </system-out>
        </testcase>
        <testcase classname="tests/integration/mcp-integration.test.ts" name="MCP Integration Tests &gt; Error Handling and Edge Cases &gt; should handle tool execution errors gracefully" time="0.004033714">
            <system-out>
🔍 Race condition check for startServer on integration-test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mfalse[39m,
  currentState: [1mnull[22m,
  totalServers: [33m0[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server integration-test-server

🚀 Starting MCP server: Integration Test Server (integration-test-server)

MCP server ready: Integration Test Server {
  tools: [
    {
      name: [32m&apos;test-tool&apos;[39m,
      description: [32m&apos;A test tool&apos;[39m,
      inputSchema: [36m[Object][39m
    }
  ]
}

Discovered tools for integration-test-server: [33m1[39m [ [32m&apos;test-tool&apos;[39m ]

Discovered resources for integration-test-server: [33m1[39m

Discovered prompts for integration-test-server: [33m1[39m

✅ Successfully started MCP server: Integration Test Server
🔓 Released operation lock for server integration-test-server

Executing tool test-tool on server integration-test-server { args: {} }

🔍 Race condition check for stopServer on integration-test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server integration-test-server

🛑 Stopping MCP server: Integration Test Server (integration-test-server)

✅ Successfully stopped MCP server: Integration Test Server
🔓 Released operation lock for server integration-test-server

            </system-out>
        </testcase>
        <testcase classname="tests/integration/mcp-integration.test.ts" name="MCP Integration Tests &gt; Error Handling and Edge Cases &gt; should handle resource reading errors" time="0.002629944">
            <system-out>
🔍 Race condition check for startServer on integration-test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mfalse[39m,
  currentState: [1mnull[22m,
  totalServers: [33m0[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server integration-test-server

🚀 Starting MCP server: Integration Test Server (integration-test-server)

MCP server ready: Integration Test Server {
  tools: [
    {
      name: [32m&apos;test-tool&apos;[39m,
      description: [32m&apos;A test tool&apos;[39m,
      inputSchema: [36m[Object][39m
    }
  ]
}

Discovered tools for integration-test-server: [33m1[39m [ [32m&apos;test-tool&apos;[39m ]

Discovered resources for integration-test-server: [33m1[39m

Discovered prompts for integration-test-server: [33m1[39m

✅ Successfully started MCP server: Integration Test Server
🔓 Released operation lock for server integration-test-server

Reading resource file://nonexistent.txt from server integration-test-server

🔍 Race condition check for stopServer on integration-test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server integration-test-server

🛑 Stopping MCP server: Integration Test Server (integration-test-server)

✅ Successfully stopped MCP server: Integration Test Server
🔓 Released operation lock for server integration-test-server

            </system-out>
        </testcase>
        <testcase classname="tests/integration/mcp-integration.test.ts" name="MCP Integration Tests &gt; Error Handling and Edge Cases &gt; should handle server process crashes" time="0.0024419">
            <system-out>
🔍 Race condition check for startServer on integration-test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mfalse[39m,
  currentState: [1mnull[22m,
  totalServers: [33m0[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server integration-test-server

🚀 Starting MCP server: Integration Test Server (integration-test-server)

MCP server ready: Integration Test Server {
  tools: [
    {
      name: [32m&apos;test-tool&apos;[39m,
      description: [32m&apos;A test tool&apos;[39m,
      inputSchema: [36m[Object][39m
    }
  ]
}

Discovered tools for integration-test-server: [33m1[39m [ [32m&apos;test-tool&apos;[39m ]

Discovered resources for integration-test-server: [33m1[39m

Discovered prompts for integration-test-server: [33m1[39m

✅ Successfully started MCP server: Integration Test Server
🔓 Released operation lock for server integration-test-server

🔍 Race condition check for stopServer on integration-test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server integration-test-server

🛑 Stopping MCP server: Integration Test Server (integration-test-server)

✅ Successfully stopped MCP server: Integration Test Server
🔓 Released operation lock for server integration-test-server

            </system-out>
        </testcase>
        <testcase classname="tests/integration/mcp-integration.test.ts" name="MCP Integration Tests &gt; Resource Subscription Management &gt; should handle resource subscription lifecycle" time="0.003185268">
            <system-out>
🔍 Race condition check for startServer on integration-test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mfalse[39m,
  currentState: [1mnull[22m,
  totalServers: [33m0[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server integration-test-server

🚀 Starting MCP server: Integration Test Server (integration-test-server)

MCP server ready: Integration Test Server {
  tools: [
    {
      name: [32m&apos;test-tool&apos;[39m,
      description: [32m&apos;A test tool&apos;[39m,
      inputSchema: [36m[Object][39m
    }
  ]
}

Discovered tools for integration-test-server: [33m1[39m [ [32m&apos;test-tool&apos;[39m ]

Discovered resources for integration-test-server: [33m1[39m

Discovered prompts for integration-test-server: [33m1[39m

✅ Successfully started MCP server: Integration Test Server
🔓 Released operation lock for server integration-test-server

Subscribed to resource file://dynamic-resource.txt on integration-test-server

Unsubscribed from resource file://dynamic-resource.txt on integration-test-server

🔍 Race condition check for stopServer on integration-test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server integration-test-server

🛑 Stopping MCP server: Integration Test Server (integration-test-server)

✅ Successfully stopped MCP server: Integration Test Server
🔓 Released operation lock for server integration-test-server

            </system-out>
        </testcase>
        <testcase classname="tests/integration/mcp-integration.test.ts" name="MCP Integration Tests &gt; Performance and Concurrency &gt; should handle concurrent tool executions" time="0.00380528">
            <system-out>
🔍 Race condition check for startServer on integration-test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mfalse[39m,
  currentState: [1mnull[22m,
  totalServers: [33m0[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server integration-test-server

🚀 Starting MCP server: Integration Test Server (integration-test-server)

MCP server ready: Integration Test Server {
  tools: [
    {
      name: [32m&apos;test-tool&apos;[39m,
      description: [32m&apos;A test tool&apos;[39m,
      inputSchema: [36m[Object][39m
    }
  ]
}

Discovered tools for integration-test-server: [33m1[39m [ [32m&apos;test-tool&apos;[39m ]

Discovered resources for integration-test-server: [33m1[39m

Discovered prompts for integration-test-server: [33m1[39m

✅ Successfully started MCP server: Integration Test Server
🔓 Released operation lock for server integration-test-server

Executing tool test-tool on server integration-test-server { args: { index: [33m0[39m } }

Tool execution completed for test-tool { result: { result: [32m&apos;Tool executed successfully&apos;[39m } }

Executing tool test-tool on server integration-test-server { args: { index: [33m1[39m } }

Tool execution completed for test-tool { result: { result: [32m&apos;Tool executed successfully&apos;[39m } }

Executing tool test-tool on server integration-test-server { args: { index: [33m2[39m } }

Tool execution completed for test-tool { result: { result: [32m&apos;Tool executed successfully&apos;[39m } }

🔍 Race condition check for stopServer on integration-test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server integration-test-server

🛑 Stopping MCP server: Integration Test Server (integration-test-server)

✅ Successfully stopped MCP server: Integration Test Server
🔓 Released operation lock for server integration-test-server

            </system-out>
        </testcase>
    </testsuite>
    <testsuite name="tests/utils/SessionManager.test.ts" timestamp="2025-07-05T04:27:07.910Z" hostname="DESKTOP-HR2BSFJ" tests="4" failures="0" errors="0" skipped="0" time="0.010677422">
        <testcase classname="tests/utils/SessionManager.test.ts" name="SessionManager basics &gt; creates a new session and sets it as current" time="0.003706635">
            <system-out>
SessionManager: No app storage found, checking for legacy chat history...
SessionManager: No legacy data found, creating default storage
SessionManager: Cleared all sessions

SessionManager: Created new session: session_1751689627345_jnlrhmam2

            </system-out>
        </testcase>
        <testcase classname="tests/utils/SessionManager.test.ts" name="SessionManager basics &gt; renames an existing session" time="0.001146338">
            <system-out>
SessionManager: Cleared all sessions

SessionManager: Created new session: session_1751689627347_jgroj4qa5
SessionManager: Updated session: session_1751689627347_jgroj4qa5

            </system-out>
        </testcase>
        <testcase classname="tests/utils/SessionManager.test.ts" name="SessionManager basics &gt; prunes old sessions beyond max cap" time="0.002820994">
            <system-out>
SessionManager: Cleared all sessions

SessionManager: Created new session: session_1751689627348_g33ysirxv
SessionManager: Created new session: session_1751689627349_43xs0vyaf
SessionManager: Created new session: session_1751689627349_6o5ohuama
SessionManager: Created new session: session_1751689627349_qbp2s60vq
SessionManager: Created new session: session_1751689627349_6jrtdqi24
SessionManager: Created new session: session_1751689627349_y00b8vozj
SessionManager: Created new session: session_1751689627350_8ov93sfcf
SessionManager: Created new session: session_1751689627350_4kz34sbra
SessionManager: Created new session: session_1751689627350_c6qhz0584
SessionManager: Created new session: session_1751689627350_tihz0lc33
SessionManager: Deleted session: session_1751689627348_g33ysirxv
SessionManager: Deleted session: session_1751689627349_43xs0vyaf
SessionManager: Deleted session: session_1751689627349_6o5ohuama
SessionManager: Deleted session: session_1751689627349_qbp2s60vq
SessionManager: Deleted session: session_1751689627349_6jrtdqi24

            </system-out>
        </testcase>
        <testcase classname="tests/utils/SessionManager.test.ts" name="SessionManager basics &gt; clears all sessions" time="0.001189143">
            <system-out>
SessionManager: Cleared all sessions

SessionManager: Created new session: session_1751689627352_mh5rzpqve
SessionManager: Created new session: session_1751689627352_e6i3necw0
SessionManager: Created new session: session_1751689627352_963z2s2tx
SessionManager: Cleared all sessions

            </system-out>
        </testcase>
    </testsuite>
    <testsuite name="tests/renderer/components/ErrorBoundary.test.tsx" timestamp="2025-07-05T04:27:07.912Z" hostname="DESKTOP-HR2BSFJ" tests="13" failures="0" errors="0" skipped="0" time="0.110331137">
        <testcase classname="tests/renderer/components/ErrorBoundary.test.tsx" name="ErrorBoundary &gt; should render children when there is no error" time="0.019826948">
        </testcase>
        <testcase classname="tests/renderer/components/ErrorBoundary.test.tsx" name="ErrorBoundary &gt; should catch errors and display error UI" time="0.026077362">
            <system-out>
🚨 React Error Boundary: Test

📤 Reported error to main process: error_1751689627595_9wmxawmqr

            </system-out>
            <system-err>
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m

            </system-err>
        </testcase>
        <testcase classname="tests/renderer/components/ErrorBoundary.test.tsx" name="ErrorBoundary &gt; should display custom fallback when provided" time="0.004190515">
            <system-out>
🚨 React Error Boundary: Test

📤 Reported error to main process: error_1751689627604_lysv059c2

            </system-out>
            <system-err>
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m

            </system-err>
        </testcase>
        <testcase classname="tests/renderer/components/ErrorBoundary.test.tsx" name="ErrorBoundary &gt; should call onError callback when provided" time="0.008984703">
            <system-out>
🚨 React Error Boundary: Test

📤 Reported error to main process: error_1751689627609_pb91b5ojr

            </system-out>
            <system-err>
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m

            </system-err>
        </testcase>
        <testcase classname="tests/renderer/components/ErrorBoundary.test.tsx" name="ErrorBoundary &gt; should generate unique error ID" time="0.010224754">
            <system-out>
🚨 React Error Boundary: Test1
🚨 React Error Boundary: Test2
📤 Reported error to main process: error_1751689627620_kk37zhmfz
📤 Reported error to main process: error_1751689627621_xmyqh9f5r

            </system-out>
            <system-err>
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m

            </system-err>
        </testcase>
        <testcase classname="tests/renderer/components/ErrorBoundary.test.tsx" name="ErrorBoundary &gt; should report error to main process" time="0.005378818">
            <system-out>
🚨 React Error Boundary: Test

📤 Reported error to main process: error_1751689627628_e1lhy4dgv

            </system-out>
            <system-err>
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m

            </system-err>
        </testcase>
        <testcase classname="tests/renderer/components/ErrorBoundary.test.tsx" name="ErrorBoundary &gt; should handle error reporting failure gracefully" time="0.005372112">
            <system-out>
🚨 React Error Boundary: Test

            </system-out>
            <system-err>
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m

            </system-err>
        </testcase>
        <testcase classname="tests/renderer/components/ErrorBoundary.test.tsx" name="ErrorBoundary &gt; should show debug information in development" time="0.004962577">
            <system-out>
🚨 React Error Boundary: Test

📤 Reported error to main process: error_1751689627639_fndk6zhbh

            </system-out>
            <system-err>
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m

            </system-err>
        </testcase>
        <testcase classname="tests/renderer/components/ErrorBoundary.test.tsx" name="ErrorBoundary &gt; should hide debug information in production" time="0.003888686">
            <system-out>
🚨 React Error Boundary: Test

📤 Reported error to main process: error_1751689627643_6n12dfphz

            </system-out>
            <system-err>
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m

            </system-err>
        </testcase>
        <testcase classname="tests/renderer/components/ErrorBoundary.test.tsx" name="ComponentErrorBoundary &gt; should render component-specific error message" time="0.003148903">
            <system-out>
🚨 React Error Boundary: TestComponent

📤 Reported error to main process: error_1751689627647_wunsa1oor

            </system-out>
            <system-err>
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m

            </system-err>
        </testcase>
        <testcase classname="tests/renderer/components/ErrorBoundary.test.tsx" name="ComponentErrorBoundary &gt; should use custom fallback when provided" time="0.002370824">
            <system-out>
🚨 React Error Boundary: TestComponent

📤 Reported error to main process: error_1751689627650_pc1awbnfr

            </system-out>
            <system-err>
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m

            </system-err>
        </testcase>
        <testcase classname="tests/renderer/components/ErrorBoundary.test.tsx" name="LazyErrorBoundary &gt; should render lazy component-specific error message" time="0.009547934">
            <system-out>
🚨 React Error Boundary: Lazy-LazyComponent

📤 Reported error to main process: error_1751689627658_skb39ze8j

            </system-out>
            <system-err>
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m

            </system-err>
        </testcase>
        <testcase classname="tests/renderer/components/ErrorBoundary.test.tsx" name="Error boundary retry functionality &gt; should show retry button when error occurs" time="0.005117193">
            <system-out>
🚨 React Error Boundary: Test

📤 Reported error to main process: error_1751689627663_t1ahmknr5

            </system-out>
            <system-err>
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m

            </system-err>
        </testcase>
    </testsuite>
    <testsuite name="tests/renderer/components/SessionSidebar.test.tsx" timestamp="2025-07-05T04:27:07.921Z" hostname="DESKTOP-HR2BSFJ" tests="1" failures="0" errors="0" skipped="0" time="0.031894966">
        <testcase classname="tests/renderer/components/SessionSidebar.test.tsx" name="SessionSidebar &gt; creates a new chat when clicking + New Chat" time="0.030700965">
            <system-out>
SessionManager: No app storage found, checking for legacy chat history...
SessionManager: No legacy data found, creating default storage
SessionContext: Loading initial session data...
SessionContext: Loaded [33m0[39m sessions, current: [90mundefined[39m
SessionContext: Creating new session with options: {}
SessionManager: Created new session: session_1751689627579_5g5n2l6tc
SessionContext: Created and switched to new session: session_1751689627579_5g5n2l6tc

            </system-out>
        </testcase>
    </testsuite>
    <testsuite name="tests/main/config/ConfigManager.test.ts" timestamp="2025-07-05T04:27:07.922Z" hostname="DESKTOP-HR2BSFJ" tests="38" failures="0" errors="0" skipped="0" time="0.016639338">
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Constructor and Initialization &gt; should initialize with default settings when no config file exists" time="0.002670772">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Constructor and Initialization &gt; should load existing configuration when config file exists" time="0.000487662">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Constructor and Initialization &gt; should handle config file read errors gracefully" time="0.000327349">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Constructor and Initialization &gt; should handle invalid JSON gracefully" time="0.000239929">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Constructor and Initialization &gt; should use fallback path when userData path fails" time="0.000887258">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Settings Management &gt; should update general settings" time="0.00030469">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Settings Management &gt; should update LLM providers" time="0.000211165">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Settings Management &gt; should update MCP servers" time="0.000412704">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Settings Management &gt; should handle update errors" time="0.00061451">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Settings Management &gt; should return deep copy of settings" time="0.000807669">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Provider Management &gt; should add LLM provider" time="0.000272008">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Provider Management &gt; should update LLM provider by ID" time="0.000179411">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Provider Management &gt; should remove LLM provider" time="0.000246672">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Provider Management &gt; should clear default provider when removing it" time="0.000174515">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Provider Management &gt; should find best default provider model" time="0.000217489">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Provider Management &gt; should return undefined when no enabled provider with model exists" time="0.000101355">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Provider Management &gt; should set and get default provider model" time="0.000114978">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; MCP Server Management &gt; should add MCP server" time="0.000508322">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; MCP Server Management &gt; should update existing MCP server when adding with same ID" time="0.00020346">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; MCP Server Management &gt; should remove MCP server" time="0.000197566">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; MCP Server Management &gt; should handle removing non-existent MCP server" time="0.000108413">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; MCP Server Management &gt; should update MCP server" time="0.000148001">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; MCP Server Management &gt; should throw error when updating non-existent MCP server" time="0.000131435">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Settings Validation &gt; should validate valid settings" time="0.000199531">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Settings Validation &gt; should reject invalid theme" time="0.000172924">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Settings Validation &gt; should reject invalid provider type" time="0.000333393">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Settings Validation &gt; should reject invalid MCP server structure" time="0.000133938">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Settings Validation &gt; should reject non-object settings" time="0.00011302">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Import/Export &gt; should export settings as JSON string" time="0.000209998">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Import/Export &gt; should import valid settings" time="0.000194679">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Import/Export &gt; should reject invalid JSON during import" time="0.000142053">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Import/Export &gt; should reject invalid settings during import" time="0.00013342">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Provider Deduplication &gt; should deduplicate providers by type" time="0.002674227">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Provider Deduplication &gt; should ensure required default providers exist" time="0.000266431">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Reset to Defaults &gt; should reset all settings to defaults" time="0.000213454">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Migration and Merging &gt; should merge partial user settings with defaults" time="0.000277592">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Migration and Merging &gt; should handle migration of LLM settings" time="0.000274509">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Migration and Merging &gt; should use defaults when LLM providers are invalid" time="0.000203883">
        </testcase>
    </testsuite>
    <testsuite name="tests/main/llm/LlmManager.test.ts" timestamp="2025-07-05T04:27:07.928Z" hostname="DESKTOP-HR2BSFJ" tests="49" failures="0" errors="0" skipped="0" time="0.031066786">
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Initialization &gt; should initialize successfully" time="0.002192262">
            <system-out>
Initializing LLM Manager
LLM Manager initialized successfully

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Initialization &gt; should set max listeners to 50" time="0.000481782">
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Provider Management &gt; should add Ollama provider" time="0.000672731">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Provider Management &gt; should add OpenRouter provider" time="0.000256622">
            <system-out>
LLM provider added: Test Provider (openrouter)

Health check for test-provider: unhealthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Provider Management &gt; should reject unsupported provider type" time="0.000682289">
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Provider Management &gt; should remove provider" time="0.001327145">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

LLM provider removed: test-provider

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Provider Management &gt; should handle removing non-existent provider" time="0.000281085">
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Provider Management &gt; should update provider config" time="0.002387401">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

LLM provider updated: test-provider

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Provider Management &gt; should throw error when updating non-existent provider" time="0.000684889">
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Provider Management &gt; should check health when provider is enabled" time="0.000757698">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

LLM provider updated: test-provider

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Provider Management &gt; should mark as unhealthy when provider is disabled" time="0.000590382">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

LLM provider updated: test-provider

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Provider Management &gt; should get all providers" time="0.000174997">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Provider Management &gt; should emit events for provider operations" time="0.001086198">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

LLM provider updated: test-provider

LLM provider removed: test-provider

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Health Management &gt; should check provider health" time="0.000490526">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Health Management &gt; should return false for non-existent provider health check" time="0.00032813">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Health Management &gt; should handle health check failures" time="0.000399245">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Health Management &gt; should implement exponential backoff for retries" time="0.000212927">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

Health check for test-provider: unhealthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Health Management &gt; should reset retry count on successful health check" time="0.00017238">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

Health check for test-provider: unhealthy

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Health Management &gt; should check all providers health" time="0.000263871">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

LLM provider added: Test Provider (openrouter)

Health check for openrouter-provider: healthy

Health check for test-provider: healthy
Health check for openrouter-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Health Management &gt; should skip health check for disabled providers" time="0.000170471">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Health Management &gt; should skip health check if retry time not reached" time="0.000270359">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Health Management &gt; should get all provider health" time="0.0002311">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Health Management &gt; should emit health change events" time="0.000527908">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Message Processing &gt; should send message successfully" time="0.00220546">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Message Processing &gt; should merge provider config with options" time="0.001457217">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Message Processing &gt; should throw error for non-existent provider" time="0.000706087">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Message Processing &gt; should throw error for disabled provider" time="0.000530128">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Message Processing &gt; should attempt recovery for unhealthy provider" time="0.000279379">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Message Processing &gt; should throw error if recovery fails" time="0.000264436">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

Health check for test-provider: unhealthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Message Processing &gt; should handle message processing errors" time="0.000364682">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Message Processing &gt; should emit events for message processing" time="0.001320973">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Message Processing &gt; should reset retry count on successful message" time="0.000470706">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Model Management &gt; should get available models" time="0.000540426">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Model Management &gt; should return empty array for non-existent provider" time="0.000265118">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Model Management &gt; should handle model fetching errors" time="0.000284452">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Status and Validation &gt; should get status with enabled providers" time="0.000905553">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

[LlmManager] getStatus: Gathering status for providers...
  → Provider test-provider: name=&quot;Test Provider&quot; type=ollama enabled=true
[LlmManager] getStatus: Processing enabled provider test-provider

    • test-provider health=true models=1
[LlmManager] getStatus: Returning 1 enabled providers

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Status and Validation &gt; should exclude disabled providers from status" time="0.000579976">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

[LlmManager] getStatus: Gathering status for providers...
  → Provider test-provider: name=&quot;Test Provider&quot; type=ollama enabled=false
[LlmManager] getStatus: Returning 0 enabled providers

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Status and Validation &gt; should validate provider model - valid case" time="0.000512896">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Status and Validation &gt; should validate provider model - removed provider" time="0.000324649">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Status and Validation &gt; should validate provider model - disabled provider" time="0.000305044">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Status and Validation &gt; should validate provider model - unhealthy provider" time="0.000309705">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Shutdown &gt; should shutdown cleanly" time="0.000416657">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

Shutting down LLM Manager
LLM Manager shutdown complete

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Shutdown &gt; should remove all listeners on shutdown" time="0.000292094">
            <system-out>
Shutting down LLM Manager
LLM Manager shutdown complete

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Provider ID Generation &gt; should use provided ID" time="0.000232191">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for custom-id: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Provider ID Generation &gt; should generate ID from type and name when not provided" time="0.000288319">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for ollama-test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Provider ID Generation &gt; should handle names with spaces and special characters" time="0.000252426">
            <system-out>
LLM provider added: Test Provider With Spaces (ollama)

Health check for ollama-test-provider-with-spaces: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Edge Cases &gt; should handle multiple providers of same type" time="0.000357598">
            <system-out>
LLM provider added: Ollama 1 (ollama)

Health check for ollama-1: healthy

LLM provider added: Ollama 2 (ollama)

Health check for ollama-2: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Edge Cases &gt; should handle provider config updates with undefined values" time="0.000698759">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

LLM provider updated: test-provider

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Edge Cases &gt; should handle health check with no initial health status" time="0.000359909">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
    </testsuite>
    <testsuite name="tests/main/mcp/ConnectionManager.test.ts" timestamp="2025-07-05T04:27:07.946Z" hostname="DESKTOP-HR2BSFJ" tests="57" failures="0" errors="0" skipped="0" time="0.171055923">
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Server Lifecycle Management &gt; startServer &gt; should successfully start a STDIO server" time="0.008043061">
            <system-out>
🔍 Race condition check for startServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mfalse[39m,
  currentState: [1mnull[22m,
  totalServers: [33m0[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🚀 Starting MCP server: Test Server (test-server)

MCP server ready: Test Server {
  tools: [ { name: [32m&apos;test-tool&apos;[39m, description: [32m&apos;Test tool&apos;[39m, inputSchema: {} } ]
}

Discovered tools for test-server: [33m1[39m [ [32m&apos;test-tool&apos;[39m ]

Discovered resources for test-server: [33m0[39m

Discovered prompts for test-server: [33m0[39m

✅ Successfully started MCP server: Test Server
🔓 Released operation lock for server test-server

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Server Lifecycle Management &gt; startServer &gt; should successfully start an HTTP server" time="0.002433484">
            <system-out>
🔍 Race condition check for startServer on test-http-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mfalse[39m,
  currentState: [1mnull[22m,
  totalServers: [33m0[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-http-server

🚀 Starting MCP server: Test HTTP Server (test-http-server)

MCP server ready: Test HTTP Server { tools: [] }

Discovered tools for test-http-server: [33m0[39m []

Discovered resources for test-http-server: [33m0[39m

Discovered prompts for test-http-server: [33m0[39m

✅ Successfully started MCP server: Test HTTP Server
🔓 Released operation lock for server test-http-server

🔍 Race condition check for stopServer on test-http-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-http-server

🛑 Stopping MCP server: Test HTTP Server (test-http-server)

✅ Successfully stopped MCP server: Test HTTP Server
🔓 Released operation lock for server test-http-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Server Lifecycle Management &gt; startServer &gt; should handle Windows command resolution" time="0.003740808">
            <system-out>
🔍 Race condition check for startServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mfalse[39m,
  currentState: [1mnull[22m,
  totalServers: [33m0[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🚀 Starting MCP server: Test Server (test-server)

MCP server ready: Test Server { tools: [] }

Discovered tools for test-server: [33m0[39m []

Discovered resources for test-server: [33m0[39m

Discovered prompts for test-server: [33m0[39m

✅ Successfully started MCP server: Test Server
🔓 Released operation lock for server test-server

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Server Lifecycle Management &gt; startServer &gt; should handle command with spaces and quotes" time="0.003743612">
            <system-out>
🔍 Race condition check for startServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mfalse[39m,
  currentState: [1mnull[22m,
  totalServers: [33m0[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🚀 Starting MCP server: Test Server (test-server)

MCP server ready: Test Server { tools: [] }

Discovered tools for test-server: [33m0[39m []

Discovered resources for test-server: [33m0[39m

Discovered prompts for test-server: [33m0[39m

✅ Successfully started MCP server: Test Server
🔓 Released operation lock for server test-server

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Server Lifecycle Management &gt; startServer &gt; should handle maximum server limit" time="0.006113821">
            <system-out>
🔍 Race condition check for startServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mfalse[39m,
  currentState: [1mnull[22m,
  totalServers: [33m8[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🔓 Released operation lock for server test-server

🔍 Race condition check for stopServer on server-0: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m8[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server server-0
🔍 Race condition check for stopServer on server-1: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m8[39m,
  activeLocks: [33m1[39m
}
🔒 Acquired operation lock for server server-1
🔍 Race condition check for stopServer on server-2: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m8[39m,
  activeLocks: [33m2[39m
}
🔒 Acquired operation lock for server server-2
🔍 Race condition check for stopServer on server-3: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m8[39m,
  activeLocks: [33m3[39m
}
🔒 Acquired operation lock for server server-3
🔍 Race condition check for stopServer on server-4: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m8[39m,
  activeLocks: [33m4[39m
}
🔒 Acquired operation lock for server server-4
🔍 Race condition check for stopServer on server-5: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m8[39m,
  activeLocks: [33m5[39m
}
🔒 Acquired operation lock for server server-5
🔍 Race condition check for stopServer on server-6: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m8[39m,
  activeLocks: [33m6[39m
}
🔒 Acquired operation lock for server server-6
🔍 Race condition check for stopServer on server-7: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m8[39m,
  activeLocks: [33m7[39m
}
🔒 Acquired operation lock for server server-7
🛑 Stopping MCP server: Server 0 (server-0)
🛑 Stopping MCP server: Server 1 (server-1)
🛑 Stopping MCP server: Server 2 (server-2)
🛑 Stopping MCP server: Server 3 (server-3)
🛑 Stopping MCP server: Server 4 (server-4)
🛑 Stopping MCP server: Server 5 (server-5)
🛑 Stopping MCP server: Server 6 (server-6)
🛑 Stopping MCP server: Server 7 (server-7)

✅ Successfully stopped MCP server: Server 0
🔓 Released operation lock for server server-0

✅ Successfully stopped MCP server: Server 1
🔓 Released operation lock for server server-1

✅ Successfully stopped MCP server: Server 2
🔓 Released operation lock for server server-2

✅ Successfully stopped MCP server: Server 3
🔓 Released operation lock for server server-3

✅ Successfully stopped MCP server: Server 4
🔓 Released operation lock for server server-4

✅ Successfully stopped MCP server: Server 5
🔓 Released operation lock for server server-5

✅ Successfully stopped MCP server: Server 6
🔓 Released operation lock for server server-6

✅ Successfully stopped MCP server: Server 7
🔓 Released operation lock for server server-7

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Server Lifecycle Management &gt; startServer &gt; should handle server already running" time="0.001077687">
            <system-out>
🔍 Race condition check for startServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🔓 Released operation lock for server test-server

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Server Lifecycle Management &gt; startServer &gt; should handle MCP SDK loading failure" time="0.000998628">
            <system-out>
🔍 Race condition check for startServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mfalse[39m,
  currentState: [1mnull[22m,
  totalServers: [33m0[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🚀 Starting MCP server: Test Server (test-server)

🔓 Released operation lock for server test-server

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;failed&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)
✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Server Lifecycle Management &gt; startServer &gt; should handle client connection failure" time="0.001378842">
            <system-out>
🔍 Race condition check for startServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mfalse[39m,
  currentState: [1mnull[22m,
  totalServers: [33m0[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🚀 Starting MCP server: Test Server (test-server)

🔓 Released operation lock for server test-server

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;failed&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)
✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Server Lifecycle Management &gt; startServer &gt; should handle missing command for STDIO transport" time="0.001267939">
            <system-out>
🔍 Race condition check for startServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mfalse[39m,
  currentState: [1mnull[22m,
  totalServers: [33m0[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🚀 Starting MCP server: Test Server (test-server)

🔓 Released operation lock for server test-server

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;failed&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)
✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Server Lifecycle Management &gt; startServer &gt; should set up environment variables correctly" time="0.003474528">
            <system-out>
🔍 Race condition check for startServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mfalse[39m,
  currentState: [1mnull[22m,
  totalServers: [33m0[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🚀 Starting MCP server: Test Server (test-server)

MCP server ready: Test Server { tools: [] }

Discovered tools for test-server: [33m0[39m []

Discovered resources for test-server: [33m0[39m

Discovered prompts for test-server: [33m0[39m

✅ Successfully started MCP server: Test Server
🔓 Released operation lock for server test-server

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Server Lifecycle Management &gt; stopServer &gt; should successfully stop a running server" time="0.003389381">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Server Lifecycle Management &gt; stopServer &gt; should handle stopping non-existent server gracefully" time="0.001152162">
            <system-out>
🔍 Race condition check for stopServer on non-existent: {
  hasLock: [33mfalse[39m,
  serverExists: [33mfalse[39m,
  currentState: [1mnull[22m,
  totalServers: [33m0[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server non-existent

🔓 Released operation lock for server non-existent

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Server Lifecycle Management &gt; stopServer &gt; should handle client close failure" time="0.002140995">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Server Lifecycle Management &gt; stopServer &gt; should kill process if client close fails" time="0.002539211">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Server Lifecycle Management &gt; stopAllServers &gt; should stop all running servers" time="0.002705653">
            <system-out>
🔍 Race condition check for stopServer on server1: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m3[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server server1
🔍 Race condition check for stopServer on server2: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m3[39m,
  activeLocks: [33m1[39m
}
🔒 Acquired operation lock for server server2
🔍 Race condition check for stopServer on server3: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m3[39m,
  activeLocks: [33m2[39m
}
🔒 Acquired operation lock for server server3
🛑 Stopping MCP server: Test Server (server1)
🛑 Stopping MCP server: Test Server (server2)
🛑 Stopping MCP server: Test Server (server3)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server server1

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server server2

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server server3

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Tool Management &gt; executeTool &gt; should execute a tool with permission" time="0.006313128">
            <system-out>
Executing tool test-tool on server test-server { args: { arg1: [32m&apos;value1&apos;[39m } }

Tool execution completed for test-tool { result: { result: [32m&apos;success&apos;[39m } }

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Tool Management &gt; executeTool &gt; should reject when server not found" time="0.00285413">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Tool Management &gt; executeTool &gt; should reject when server not ready" time="0.0026646">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;starting&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Tool Management &gt; executeTool &gt; should reject when tool not found" time="0.004214027">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Tool Management &gt; executeTool &gt; should reject when permission denied" time="0.002083597">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Tool Management &gt; executeTool &gt; should handle tool execution errors" time="0.0026116">
            <system-out>
Executing tool test-tool on server test-server { args: {} }

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Tool Management &gt; getAvailableTools &gt; should return tools for a specific server" time="0.002079241">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Tool Management &gt; getAvailableTools &gt; should return empty array for non-existent server" time="0.002168273">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Tool Management &gt; getAvailableTools &gt; should return empty array for server without tools" time="0.002775857">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Tool Management &gt; getAllAvailableTools &gt; should return tools from all servers" time="0.002398808">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m2[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server
🔍 Race condition check for stopServer on server2: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m2[39m,
  activeLocks: [33m1[39m
}
🔒 Acquired operation lock for server server2
🛑 Stopping MCP server: Test Server (test-server)
🛑 Stopping MCP server: Test Server (server2)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server server2

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Resource Management &gt; readResource &gt; should read a resource successfully" time="0.002273756">
            <system-out>
Reading resource file://test.txt from server test-server

Resource read completed for file://test.txt

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Resource Management &gt; readResource &gt; should reject when server not found" time="0.003126567">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Resource Management &gt; readResource &gt; should reject when server not ready" time="0.002204924">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;starting&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Resource Management &gt; readResource &gt; should handle read errors" time="0.002824419">
            <system-out>
Reading resource file://test.txt from server test-server

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Resource Management &gt; subscribeToResource &gt; should subscribe to a resource successfully" time="0.002381328">
            <system-out>
Subscribed to resource file://test.txt on test-server

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Resource Management &gt; subscribeToResource &gt; should handle already subscribed resources" time="0.003545916">
            <system-out>
Already subscribed to resource file://test.txt on test-server

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Resource Management &gt; subscribeToResource &gt; should handle subscription errors" time="0.003971159">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Resource Management &gt; unsubscribeFromResource &gt; should unsubscribe from a resource successfully" time="0.005553906">
            <system-out>
Unsubscribed from resource file://test.txt on test-server

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Resource Management &gt; unsubscribeFromResource &gt; should handle not subscribed resources" time="0.004163244">
            <system-out>
Unsubscribed from resource file://test.txt on test-server

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Resource Management &gt; getAvailableResources &gt; should return resources for a specific server" time="0.003496396">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Resource Management &gt; getAvailableResources &gt; should return empty array for non-existent server" time="0.006256013">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Resource Management &gt; getAllAvailableResources &gt; should return resources from all servers" time="0.004812315">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m2[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server
🔍 Race condition check for stopServer on server2: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m2[39m,
  activeLocks: [33m1[39m
}
🔒 Acquired operation lock for server server2
🛑 Stopping MCP server: Test Server (test-server)
🛑 Stopping MCP server: Test Server (server2)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server server2

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Prompt Management &gt; executePrompt &gt; should execute a prompt successfully" time="0.004136904">
            <system-out>
Executing prompt test-prompt on server test-server { args: { arg1: [32m&apos;value1&apos;[39m } }

Prompt execution completed for test-prompt

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Prompt Management &gt; executePrompt &gt; should execute prompt without arguments" time="0.004051957">
            <system-out>
Executing prompt test-prompt on server test-server { args: [90mundefined[39m }

Prompt execution completed for test-prompt

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Prompt Management &gt; executePrompt &gt; should reject when server not found" time="0.0028306">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Prompt Management &gt; executePrompt &gt; should reject when prompt not found" time="0.002328636">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Prompt Management &gt; executePrompt &gt; should handle prompt execution errors" time="0.003465417">
            <system-out>
Executing prompt test-prompt on server test-server { args: [90mundefined[39m }

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Prompt Management &gt; getAvailablePrompts &gt; should return prompts for a specific server" time="0.002558473">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Prompt Management &gt; getAvailablePrompts &gt; should return empty array for non-existent server" time="0.002789927">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Prompt Management &gt; getAllAvailablePrompts &gt; should return prompts from all servers" time="0.002787696">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m2[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server
🔍 Race condition check for stopServer on server2: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m2[39m,
  activeLocks: [33m1[39m
}
🔒 Acquired operation lock for server server2
🛑 Stopping MCP server: Test Server (test-server)
🛑 Stopping MCP server: Test Server (server2)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server server2

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; State Management &gt; should get server state" time="0.00397946">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; State Management &gt; should return null for non-existent server state" time="0.001971043">
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; State Management &gt; should get all server states" time="0.003392857">
            <system-out>
🔍 Race condition check for stopServer on server1: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m2[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server server1
🔍 Race condition check for stopServer on server2: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;starting&apos;[39m,
  totalServers: [33m2[39m,
  activeLocks: [33m1[39m
}
🔒 Acquired operation lock for server server2
🛑 Stopping MCP server: Test Server (server1)
🛑 Stopping MCP server: Test Server (server2)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server server1

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server server2

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Advanced Features &gt; sampleLLM &gt; should handle LLM sampling requests" time="0.00309674">
            <system-out>
Warning: sampleLLM called directly - this should go through normal tool execution

Executing tool sampleLLM on server test-server {
  args: {
    messages: [ [36m[Object][39m ],
    maxTokens: [33m100[39m,
    temperature: [33m0.7[39m,
    stopSequences: [90mundefined[39m,
    modelPreferences: [90mundefined[39m
  }
}

Tool execution completed for sampleLLM { result: { content: [32m&apos;LLM response&apos;[39m } }

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Advanced Features &gt; sampleLLM &gt; should reject when server not found" time="0.001103078">
            <system-out>
Warning: sampleLLM called directly - this should go through normal tool execution

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Advanced Features &gt; sampleLLM &gt; should handle sampling errors gracefully" time="0.003311628">
            <system-out>
Warning: sampleLLM called directly - this should go through normal tool execution

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Advanced Features &gt; Discovery Methods &gt; should discover tools correctly" time="0.001041301">
            <system-out>
Discovered tools for test-server: [33m2[39m [ [32m&apos;tool1&apos;[39m, [32m&apos;tool2&apos;[39m ]

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Advanced Features &gt; Discovery Methods &gt; should discover resources correctly" time="0.000883037">
            <system-out>
Discovered resources for test-server: [33m2[39m

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Advanced Features &gt; Discovery Methods &gt; should discover prompts correctly" time="0.000753428">
            <system-out>
Discovered prompts for test-server: [33m2[39m

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Advanced Features &gt; Discovery Methods &gt; should handle discovery errors gracefully" time="0.000712401">
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Advanced Features &gt; Resource Refresh &gt; should refresh server resources" time="0.001378657">
            <system-out>
Discovered resources for test-server: [33m1[39m

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Advanced Features &gt; Resource Refresh &gt; should handle refresh errors gracefully" time="0.002839433">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
    </testsuite>
    <testsuite name="tests/main/permissions/PermissionManager.test.ts" timestamp="2025-07-05T04:27:07.972Z" hostname="DESKTOP-HR2BSFJ" tests="18" failures="0" errors="0" skipped="0" time="0.013923617">
        <testcase classname="tests/main/permissions/PermissionManager.test.ts" name="PermissionManager &gt; Initialization &gt; should initialize with default settings" time="0.00219288">
        </testcase>
        <testcase classname="tests/main/permissions/PermissionManager.test.ts" name="PermissionManager &gt; Initialization &gt; should set max listeners to 50" time="0.000364464">
        </testcase>
        <testcase classname="tests/main/permissions/PermissionManager.test.ts" name="PermissionManager &gt; Auto-Approval &gt; should auto-approve for trusted servers" time="0.000512969">
        </testcase>
        <testcase classname="tests/main/permissions/PermissionManager.test.ts" name="PermissionManager &gt; Auto-Approval &gt; should auto-approve based on risk level settings" time="0.00031041">
        </testcase>
        <testcase classname="tests/main/permissions/PermissionManager.test.ts" name="PermissionManager &gt; Permission Management API &gt; should revoke permissions" time="0.000570204">
        </testcase>
        <testcase classname="tests/main/permissions/PermissionManager.test.ts" name="PermissionManager &gt; Permission Management API &gt; should handle revoking non-existent permissions" time="0.00043578">
        </testcase>
        <testcase classname="tests/main/permissions/PermissionManager.test.ts" name="PermissionManager &gt; Permission Management API &gt; should clear all permissions" time="0.000367399">
        </testcase>
        <testcase classname="tests/main/permissions/PermissionManager.test.ts" name="PermissionManager &gt; Permission Management API &gt; should update settings" time="0.000400409">
        </testcase>
        <testcase classname="tests/main/permissions/PermissionManager.test.ts" name="PermissionManager &gt; Permission Management API &gt; should manage trusted servers" time="0.001494582">
        </testcase>
        <testcase classname="tests/main/permissions/PermissionManager.test.ts" name="PermissionManager &gt; Session Management &gt; should clear session permissions" time="0.000541931">
        </testcase>
        <testcase classname="tests/main/permissions/PermissionManager.test.ts" name="PermissionManager &gt; Approval Request Handling &gt; should timeout approval requests" time="0.001326001">
        </testcase>
        <testcase classname="tests/main/permissions/PermissionManager.test.ts" name="PermissionManager &gt; Approval Request Handling &gt; should handle invalid approval responses" time="0.000606369">
        </testcase>
        <testcase classname="tests/main/permissions/PermissionManager.test.ts" name="PermissionManager &gt; Approval Request Handling &gt; should emit permission request events" time="0.00099498">
        </testcase>
        <testcase classname="tests/main/permissions/PermissionManager.test.ts" name="PermissionManager &gt; Shutdown &gt; should clean up all resources on shutdown" time="0.00047659">
        </testcase>
        <testcase classname="tests/main/permissions/PermissionManager.test.ts" name="PermissionManager &gt; Edge Cases &gt; should handle empty permission key generation" time="0.000473506">
        </testcase>
        <testcase classname="tests/main/permissions/PermissionManager.test.ts" name="PermissionManager &gt; Edge Cases &gt; should handle session key generation with various inputs" time="0.000374114">
        </testcase>
        <testcase classname="tests/main/permissions/PermissionManager.test.ts" name="PermissionManager &gt; Edge Cases &gt; should handle argument hashing with special characters" time="0.000396821">
        </testcase>
        <testcase classname="tests/main/permissions/PermissionManager.test.ts" name="PermissionManager &gt; Edge Cases &gt; should handle argument hashing with undefined/null values" time="0.000484923">
        </testcase>
    </testsuite>
    <testsuite name="tests/main/security/SecureStorage.test.ts" timestamp="2025-07-05T04:27:07.975Z" hostname="DESKTOP-HR2BSFJ" tests="22" failures="0" errors="0" skipped="0" time="0.008102671">
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; Initialization &gt; should create singleton instance" time="0.001306072">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; Initialization &gt; should check encryption availability" time="0.000438482">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; Initialization &gt; should handle encryption not available" time="0.000131604">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; Encryption and Decryption &gt; should encrypt string successfully" time="0.000762195">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; Encryption and Decryption &gt; should decrypt string successfully" time="0.000724018">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; Encryption and Decryption &gt; should return plain text when encryption is not available" time="0.000272562">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; Encryption and Decryption &gt; should return plain text when decrypting non-encrypted data" time="0.000087241">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; Encryption and Decryption &gt; should handle encryption errors gracefully" time="0.000168459">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; Encryption and Decryption &gt; should handle decryption errors gracefully" time="0.000396149">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; API Key Management Methods &gt; should migrate plain text to encrypted format" time="0.000282579">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; API Key Management Methods &gt; should return original value if already encrypted" time="0.000178873">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; API Key Management Methods &gt; should get plain text value from encrypted storage" time="0.00022446">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; API Key Management Methods &gt; should return plain text value as-is" time="0.000096379">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; API Key Management Methods &gt; should return empty string for empty input" time="0.000073514">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; API Key Management Methods &gt; should detect encrypted values correctly" time="0.000123203">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; Validation &gt; should validate encryption successfully" time="0.000202014">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; Validation &gt; should fail validation when encryption is not available" time="0.000118329">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; Validation &gt; should fail validation on encryption error" time="0.00011534">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; Validation &gt; should fail validation on data mismatch" time="0.000108854">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; Edge Cases &gt; should handle empty strings in getPlainTextValue" time="0.000087621">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; Edge Cases &gt; should handle decryption failure gracefully in getPlainTextValue" time="0.000118563">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; Edge Cases &gt; should return plain text on failed encryption during migration" time="0.000111471">
        </testcase>
    </testsuite>
    <testsuite name="tests/renderer/components/MCP/McpIntegration.test.tsx" timestamp="2025-07-05T04:27:07.978Z" hostname="DESKTOP-HR2BSFJ" tests="27" failures="0" errors="0" skipped="0" time="0.332119519">
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Initial Rendering and Loading &gt; renders without crashing" time="0.035406302">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Initial Rendering and Loading &gt; shows loading state initially" time="0.003235769">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Initial Rendering and Loading &gt; loads and displays servers successfully" time="0.01606401">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Initial Rendering and Loading &gt; displays empty state when no servers configured" time="0.039292353">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Initial Rendering and Loading &gt; displays error state when loading fails" time="0.004666563">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Initial Rendering and Loading &gt; handles network errors during loading" time="0.005130412">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Server Display and Status &gt; displays server status badges correctly" time="0.008087508">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Server Display and Status &gt; displays transport information correctly" time="0.014506088">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Server Display and Status &gt; displays status icons correctly" time="0.008950793">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Server Management Actions &gt; toggles server enabled state successfully" time="0.014750099">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Server Management Actions &gt; handles server toggle errors" time="0.009195194">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Server Management Actions &gt; removes server with confirmation" time="0.016146951">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Server Management Actions &gt; cancels server removal when user declines confirmation" time="0.010650181">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Server Management Actions &gt; handles server removal errors" time="0.018661011">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Server Wizard Integration &gt; opens server wizard when add server button is clicked" time="0.018544439">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Server Wizard Integration &gt; opens wizard from empty state" time="0.017417315">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Server Wizard Integration &gt; refreshes server list when server is added via wizard" time="0.015584347">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Error Handling and Edge Cases &gt; handles undefined server data gracefully" time="0.00279178">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Error Handling and Edge Cases &gt; handles malformed server data" time="0.002100894">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Error Handling and Edge Cases &gt; retries loading on initial failure with user action" time="0.00400777">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Error Handling and Edge Cases &gt; handles rapid server state changes" time="0.017880876">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Accessibility and UX &gt; has proper ARIA labels and roles" time="0.010142408">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Accessibility and UX &gt; supports keyboard navigation" time="0.008141876">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Accessibility and UX &gt; provides clear loading states" time="0.00905475">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Accessibility and UX &gt; provides clear error messages" time="0.008569963">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Integration with Settings &gt; calls onSettingsUpdate when servers change" time="0.007904494">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Integration with Settings &gt; reloads servers when settings prop changes" time="0.003667123">
        </testcase>
    </testsuite>
    <testsuite name="tests/renderer/components/MCP/McpServerWizard.test.tsx" timestamp="2025-07-05T04:27:07.981Z" hostname="DESKTOP-HR2BSFJ" tests="13" failures="0" errors="0" skipped="0" time="0.198537737">
        <testcase classname="tests/renderer/components/MCP/McpServerWizard.test.tsx" name="McpServerWizard &gt; Basic Rendering &gt; renders without crashing when open" time="0.037594543">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpServerWizard.test.tsx" name="McpServerWizard &gt; Basic Rendering &gt; does not render when closed" time="0.001451489">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpServerWizard.test.tsx" name="McpServerWizard &gt; Basic Rendering &gt; displays wizard steps" time="0.01021518">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpServerWizard.test.tsx" name="McpServerWizard &gt; Form Validation &gt; validates server name is required" time="0.05030649">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpServerWizard.test.tsx" name="McpServerWizard &gt; Form Validation &gt; validates command for STDIO transport" time="0.04198036">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpServerWizard.test.tsx" name="McpServerWizard &gt; Connection Testing &gt; tests connection successfully" time="0.006838861">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpServerWizard.test.tsx" name="McpServerWizard &gt; Connection Testing &gt; handles connection test failure" time="0.005511215">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpServerWizard.test.tsx" name="McpServerWizard &gt; Server Creation &gt; creates server successfully" time="0.007482267">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpServerWizard.test.tsx" name="McpServerWizard &gt; Server Creation &gt; handles server creation error" time="0.009561738">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpServerWizard.test.tsx" name="McpServerWizard &gt; User Interactions &gt; closes when close button is clicked" time="0.007318837">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpServerWizard.test.tsx" name="McpServerWizard &gt; User Interactions &gt; calls onServerAdded when server is created" time="0.007109412">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpServerWizard.test.tsx" name="McpServerWizard &gt; Accessibility &gt; has proper ARIA labels" time="0.006099032">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpServerWizard.test.tsx" name="McpServerWizard &gt; Accessibility &gt; supports keyboard navigation" time="0.005076129">
        </testcase>
    </testsuite>
    <testsuite name="tests/main/llm/providers/OllamaProvider.test.ts" timestamp="2025-07-05T04:27:07.983Z" hostname="DESKTOP-HR2BSFJ" tests="45" failures="0" errors="0" skipped="0" time="0.026389886">
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Constructor &gt; should initialize with provided config" time="0.00219814">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Constructor &gt; should use default URL when none provided" time="0.000208623">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Connection Testing &gt; should test connection successfully" time="0.003482243">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Connection Testing &gt; should handle connection refused error" time="0.000596429">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Connection Testing &gt; should handle connection error with cause" time="0.000478831">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Connection Testing &gt; should handle HTTP errors" time="0.000342357">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Connection Testing &gt; should handle timeout errors" time="0.000381269">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Model Management &gt; should get available models successfully" time="0.001144622">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Model Management &gt; should handle empty model list" time="0.000647837">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Model Management &gt; should handle missing models property" time="0.000230987">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Model Management &gt; should handle connection error when getting models" time="0.001058099">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Model Management &gt; should handle HTTP error when getting models" time="0.000361314">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Model Management &gt; should format sizes correctly" time="0.000194297">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Message Sending &gt; should send message successfully" time="0.000861253">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Message Sending &gt; should send message with custom options" time="0.000456174">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Message Sending &gt; should send message with tools" time="0.000509197">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Message Sending &gt; should handle HTTP error when sending message" time="0.000246159">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Message Sending &gt; should handle network error when sending message" time="0.000358681">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Message Sending &gt; should handle finish reason based on done status" time="0.000178265">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Message Streaming &gt; should stream message successfully" time="0.000902916">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Message Streaming &gt; should handle streaming with custom options" time="0.000351021">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Message Streaming &gt; should handle HTTP error when streaming" time="0.000238101">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Message Streaming &gt; should handle missing response body when streaming" time="0.000182422">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Message Streaming &gt; should handle invalid JSON in streaming response" time="0.000298124">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Message Streaming &gt; should handle incomplete streaming data" time="0.000531067">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Message Streaming &gt; should release reader lock even on error" time="0.000329145">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Model Download &gt; should download model successfully" time="0.000887979">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Model Download &gt; should download model without progress callback" time="0.00061288">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Model Download &gt; should handle HTTP error when downloading" time="0.000434452">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Model Download &gt; should handle missing response body when downloading" time="0.000368548">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Model Download &gt; should handle invalid JSON in download response" time="0.000558033">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Model Download &gt; should release reader lock even on download error" time="0.000590638">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Model Deletion &gt; should delete model successfully" time="0.000805496">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Model Deletion &gt; should handle HTTP error when deleting model" time="0.000405644">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Model Deletion &gt; should handle network error when deleting model" time="0.000313985">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Message Formatting &gt; should format regular messages correctly" time="0.000383715">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Message Formatting &gt; should format tool response messages correctly" time="0.00021514">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Message Formatting &gt; should format messages with tool calls correctly" time="0.000288905">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Error Handling &gt; should handle timeout errors properly" time="0.00020272">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Error Handling &gt; should handle connection refused errors" time="0.000334608">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Error Handling &gt; should handle authentication errors" time="0.00017612">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Error Handling &gt; should handle rate limit errors" time="0.00020551">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Error Handling &gt; should handle server errors" time="0.000285522">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Error Handling &gt; should handle unknown errors" time="0.000186583">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Error Handling &gt; should handle non-Error objects" time="0.000179569">
        </testcase>
    </testsuite>
    <testsuite name="tests/main/llm/providers/OpenRouterProvider.test.ts" timestamp="2025-07-05T04:27:07.991Z" hostname="DESKTOP-HR2BSFJ" tests="46" failures="0" errors="0" skipped="0" time="0.024469299">
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Constructor &gt; should initialize with provided config" time="0.001227984">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Connection Testing &gt; should test connection successfully with valid API key" time="0.002428265">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Connection Testing &gt; should fail connection test without API key" time="0.001506427">
            <system-out>
Provider config updated: Test OpenRouter

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Connection Testing &gt; should handle HTTP errors during connection test" time="0.000295836">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Connection Testing &gt; should handle network errors during connection test" time="0.00037622">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Connection Testing &gt; should handle timeout during connection test" time="0.000357633">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Model Management &gt; should get available models successfully" time="0.001361209">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Model Management &gt; should handle models without description" time="0.000490121">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Model Management &gt; should handle error when API key is missing" time="0.001854835">
            <system-out>
Provider config updated: Test OpenRouter

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Model Management &gt; should handle HTTP error when getting models" time="0.000525906">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Model Management &gt; should handle network error when getting models" time="0.000362414">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Message Sending &gt; should send message successfully" time="0.001403254">
            <system-out>
OpenRouter: Response received: {
  hasContent: [33mtrue[39m,
  hasToolCalls: [33mfalse[39m,
  toolCallsCount: [33m0[39m,
  toolCalls: [90mundefined[39m,
  finishReason: [32m&apos;stop&apos;[39m
}

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Message Sending &gt; should send message with custom options" time="0.000636669">
            <system-out>
OpenRouter: Response received: {
  hasContent: [33mtrue[39m,
  hasToolCalls: [33mfalse[39m,
  toolCallsCount: [33m0[39m,
  toolCalls: [90mundefined[39m,
  finishReason: [32m&apos;stop&apos;[39m
}

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Message Sending &gt; should send message with tools" time="0.001118814">
            <system-out>
OpenRouter: Sending tools: { count: [33m1[39m, toolNames: [ [32m&apos;get_weather&apos;[39m ] }

OpenRouter: Response received: {
  hasContent: [33mtrue[39m,
  hasToolCalls: [33mtrue[39m,
  toolCallsCount: [33m1[39m,
  toolCalls: [ { id: [32m&apos;call_123&apos;[39m, type: [32m&apos;function&apos;[39m, function: [36m[Object][39m } ],
  finishReason: [32m&apos;tool_calls&apos;[39m
}

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Message Sending &gt; should handle missing API key" time="0.000267">
            <system-out>
Provider config updated: Test OpenRouter

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Message Sending &gt; should handle HTTP error response" time="0.00020361">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Message Sending &gt; should handle missing choices in response" time="0.000246702">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Message Sending &gt; should handle response with empty content" time="0.000239668">
            <system-out>
OpenRouter: Response received: {
  hasContent: [33mfalse[39m,
  hasToolCalls: [33mfalse[39m,
  toolCallsCount: [33m0[39m,
  toolCalls: [90mundefined[39m,
  finishReason: [32m&apos;stop&apos;[39m
}

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Message Sending &gt; should handle network error" time="0.000164389">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Message Streaming &gt; should stream message successfully" time="0.000601428">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Message Streaming &gt; should handle streaming with custom options" time="0.000323982">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Message Streaming &gt; should handle missing API key during streaming" time="0.001542851">
            <system-out>
Provider config updated: Test OpenRouter

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Message Streaming &gt; should handle HTTP error during streaming" time="0.000783864">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Message Streaming &gt; should handle missing response body during streaming" time="0.000291171">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Message Streaming &gt; should handle invalid JSON in streaming response" time="0.000724872">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Message Streaming &gt; should handle incomplete streaming data" time="0.000327275">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Message Streaming &gt; should release reader lock even on error" time="0.000346453">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Model Info &gt; should get model info successfully" time="0.000334195">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Model Info &gt; should return null for non-existent model" time="0.000151644">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Model Info &gt; should handle missing API key" time="0.000245653">
            <system-out>
Provider config updated: Test OpenRouter

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Model Info &gt; should handle HTTP errors other than 404" time="0.000095471">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Model Info &gt; should handle network errors" time="0.000084585">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Credit Balance &gt; should get credit balance successfully" time="0.000453676">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Credit Balance &gt; should return null when no API key configured" time="0.000194251">
            <system-out>
Provider config updated: Test OpenRouter

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Credit Balance &gt; should return null on HTTP error" time="0.000088546">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Credit Balance &gt; should return null when credit_balance is missing" time="0.000078791">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Credit Balance &gt; should handle network errors" time="0.000084917">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Message Formatting &gt; should format regular messages correctly" time="0.000084966">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Message Formatting &gt; should format tool response messages correctly" time="0.000080204">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Message Formatting &gt; should format messages with tool calls correctly" time="0.000069422">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Error Handling &gt; should handle insufficient credits error" time="0.000123758">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Error Handling &gt; should handle rate limit error" time="0.000058947">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Error Handling &gt; should handle model validation error" time="0.000091141">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Error Handling &gt; should handle timeout errors" time="0.000065267">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Error Handling &gt; should handle timeout message errors" time="0.000067698">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Error Handling &gt; should fall back to base error handling" time="0.000060614">
        </testcase>
    </testsuite>
</testsuites>
