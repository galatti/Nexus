<?xml version="1.0" encoding="UTF-8" ?>
<testsuites name="vitest tests" tests="371" failures="0" errors="0" time="1.273220746">
    <testsuite name="tests/integration/main-ipc.test.ts" timestamp="2025-07-05T04:45:08.435Z" hostname="DESKTOP-HR2BSFJ" tests="31" failures="0" errors="0" skipped="0" time="0.020150469">
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; Settings IPC Handlers &gt; should handle settings:get" time="0.002045206">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; Settings IPC Handlers &gt; should handle settings:update" time="0.000617371">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; Settings IPC Handlers &gt; should handle settings:reset" time="0.000624481">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; Settings IPC Handlers &gt; should handle settings:export" time="0.001256069">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; Settings IPC Handlers &gt; should handle settings:import" time="0.001105618">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; Settings IPC Handlers &gt; should handle invalid JSON in settings:import" time="0.000925344">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; LLM Provider IPC Handlers &gt; should handle llm:test-provider with healthy provider" time="0.000740503">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; LLM Provider IPC Handlers &gt; should handle llm:test-provider with unhealthy provider" time="0.000456643">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; LLM Provider IPC Handlers &gt; should handle llm:test-provider with missing provider" time="0.000488133">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; LLM Provider IPC Handlers &gt; should handle llm:get-models successfully" time="0.000719301">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; LLM Provider IPC Handlers &gt; should handle llm:get-models with error" time="0.000419597">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; LLM Provider IPC Handlers &gt; should handle llm:send-message successfully" time="0.000392774">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; LLM Provider IPC Handlers &gt; should handle llm:send-message with error" time="0.000317067">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; LLM Provider IPC Handlers &gt; should handle llm:get-status successfully" time="0.000354695">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; MCP Server IPC Handlers &gt; should handle mcp:add-server successfully" time="0.001365671">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; MCP Server IPC Handlers &gt; should handle mcp:add-server with error" time="0.000371857">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; MCP Server IPC Handlers &gt; should handle mcp:remove-server successfully" time="0.000595669">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; MCP Server IPC Handlers &gt; should handle mcp:update-server successfully" time="0.000622191">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; MCP Server IPC Handlers &gt; should handle mcp:get-servers successfully" time="0.000296006">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; Permission IPC Handlers &gt; should handle permissions:get-pending" time="0.000284095">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; Permission IPC Handlers &gt; should handle permissions:respond successfully" time="0.000221881">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; Permission IPC Handlers &gt; should handle permissions:respond with failure" time="0.000207172">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; Permission IPC Handlers &gt; should handle permissions:get-all" time="0.000249162">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; Permission IPC Handlers &gt; should handle permissions:revoke successfully" time="0.000388234">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; Permission IPC Handlers &gt; should handle permissions:clear-session" time="0.000313589">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; Permission IPC Handlers &gt; should handle permissions:update-settings" time="0.000317294">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; Permission IPC Handlers &gt; should handle permissions:get-settings" time="0.00024726">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; Error Handling &gt; should handle unexpected errors in handlers" time="0.000540051">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; Error Handling &gt; should handle non-Error objects thrown" time="0.000200076">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; Cross-Module Integration &gt; should handle full workflow: add provider, test, and send message" time="0.000444895">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; Cross-Module Integration &gt; should handle MCP server and permissions workflow" time="0.000730074">
        </testcase>
    </testsuite>
    <testsuite name="tests/integration/mcp-integration.test.ts" timestamp="2025-07-05T04:45:08.444Z" hostname="DESKTOP-HR2BSFJ" tests="7" failures="0" errors="0" skipped="0" time="0.048216878">
        <testcase classname="tests/integration/mcp-integration.test.ts" name="MCP Integration Tests &gt; Complete Server Lifecycle &gt; should handle complete server lifecycle from creation to destruction" time="0.01569302">
            <system-out>
🔍 Race condition check for startServer on integration-test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mfalse[39m,
  currentState: [1mnull[22m,
  totalServers: [33m0[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server integration-test-server

🚀 Starting MCP server: Integration Test Server (integration-test-server)

MCP server ready: Integration Test Server {
  tools: [
    {
      name: [32m&apos;test-tool&apos;[39m,
      description: [32m&apos;A test tool&apos;[39m,
      inputSchema: [36m[Object][39m
    }
  ]
}

Discovered tools for integration-test-server: [33m1[39m [ [32m&apos;test-tool&apos;[39m ]

Discovered resources for integration-test-server: [33m1[39m

Discovered prompts for integration-test-server: [33m1[39m

✅ Successfully started MCP server: Integration Test Server
🔓 Released operation lock for server integration-test-server

Executing tool test-tool on server integration-test-server { args: { testParam: [32m&apos;value&apos;[39m } }

Tool execution completed for test-tool { result: { result: [32m&apos;Tool executed successfully&apos;[39m } }

Reading resource file://test.txt from server integration-test-server

Resource read completed for file://test.txt

Executing prompt test-prompt on server integration-test-server { args: { context: [32m&apos;test&apos;[39m } }

Prompt execution completed for test-prompt

Subscribed to resource file://test.txt on integration-test-server

🔍 Race condition check for stopServer on integration-test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server integration-test-server

🛑 Stopping MCP server: Integration Test Server (integration-test-server)

✅ Successfully stopped MCP server: Integration Test Server
🔓 Released operation lock for server integration-test-server

            </system-out>
        </testcase>
        <testcase classname="tests/integration/mcp-integration.test.ts" name="MCP Integration Tests &gt; Complete Server Lifecycle &gt; should handle server failure and recovery" time="0.005682659">
            <system-out>
🔍 Race condition check for startServer on integration-test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mfalse[39m,
  currentState: [1mnull[22m,
  totalServers: [33m0[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server integration-test-server

🚀 Starting MCP server: Integration Test Server (integration-test-server)

🔓 Released operation lock for server integration-test-server

🔍 Race condition check for stopServer on integration-test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;failed&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server integration-test-server

🛑 Stopping MCP server: Integration Test Server (integration-test-server)
✅ Successfully stopped MCP server: Integration Test Server
🔓 Released operation lock for server integration-test-server

🔍 Race condition check for startServer on integration-test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mfalse[39m,
  currentState: [1mnull[22m,
  totalServers: [33m0[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server integration-test-server

🚀 Starting MCP server: Integration Test Server (integration-test-server)

MCP server ready: Integration Test Server {
  tools: [
    {
      name: [32m&apos;test-tool&apos;[39m,
      description: [32m&apos;A test tool&apos;[39m,
      inputSchema: [36m[Object][39m
    }
  ]
}

Discovered tools for integration-test-server: [33m1[39m [ [32m&apos;test-tool&apos;[39m ]

Discovered resources for integration-test-server: [33m1[39m

Discovered prompts for integration-test-server: [33m1[39m

✅ Successfully started MCP server: Integration Test Server
🔓 Released operation lock for server integration-test-server

🔍 Race condition check for stopServer on integration-test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server integration-test-server

🛑 Stopping MCP server: Integration Test Server (integration-test-server)

✅ Successfully stopped MCP server: Integration Test Server
🔓 Released operation lock for server integration-test-server

            </system-out>
        </testcase>
        <testcase classname="tests/integration/mcp-integration.test.ts" name="MCP Integration Tests &gt; Error Handling and Edge Cases &gt; should handle tool execution errors gracefully" time="0.005458262">
            <system-out>
🔍 Race condition check for startServer on integration-test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mfalse[39m,
  currentState: [1mnull[22m,
  totalServers: [33m0[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server integration-test-server

🚀 Starting MCP server: Integration Test Server (integration-test-server)

MCP server ready: Integration Test Server {
  tools: [
    {
      name: [32m&apos;test-tool&apos;[39m,
      description: [32m&apos;A test tool&apos;[39m,
      inputSchema: [36m[Object][39m
    }
  ]
}

Discovered tools for integration-test-server: [33m1[39m [ [32m&apos;test-tool&apos;[39m ]

Discovered resources for integration-test-server: [33m1[39m

Discovered prompts for integration-test-server: [33m1[39m

✅ Successfully started MCP server: Integration Test Server
🔓 Released operation lock for server integration-test-server

Executing tool test-tool on server integration-test-server { args: {} }

🔍 Race condition check for stopServer on integration-test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server integration-test-server

🛑 Stopping MCP server: Integration Test Server (integration-test-server)

✅ Successfully stopped MCP server: Integration Test Server
🔓 Released operation lock for server integration-test-server

            </system-out>
        </testcase>
        <testcase classname="tests/integration/mcp-integration.test.ts" name="MCP Integration Tests &gt; Error Handling and Edge Cases &gt; should handle resource reading errors" time="0.004574927">
            <system-out>
🔍 Race condition check for startServer on integration-test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mfalse[39m,
  currentState: [1mnull[22m,
  totalServers: [33m0[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server integration-test-server

🚀 Starting MCP server: Integration Test Server (integration-test-server)

MCP server ready: Integration Test Server {
  tools: [
    {
      name: [32m&apos;test-tool&apos;[39m,
      description: [32m&apos;A test tool&apos;[39m,
      inputSchema: [36m[Object][39m
    }
  ]
}

Discovered tools for integration-test-server: [33m1[39m [ [32m&apos;test-tool&apos;[39m ]

Discovered resources for integration-test-server: [33m1[39m

Discovered prompts for integration-test-server: [33m1[39m

✅ Successfully started MCP server: Integration Test Server
🔓 Released operation lock for server integration-test-server

Reading resource file://nonexistent.txt from server integration-test-server

🔍 Race condition check for stopServer on integration-test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server integration-test-server

🛑 Stopping MCP server: Integration Test Server (integration-test-server)

✅ Successfully stopped MCP server: Integration Test Server
🔓 Released operation lock for server integration-test-server

            </system-out>
        </testcase>
        <testcase classname="tests/integration/mcp-integration.test.ts" name="MCP Integration Tests &gt; Error Handling and Edge Cases &gt; should handle server process crashes" time="0.004123994">
            <system-out>
🔍 Race condition check for startServer on integration-test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mfalse[39m,
  currentState: [1mnull[22m,
  totalServers: [33m0[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server integration-test-server

🚀 Starting MCP server: Integration Test Server (integration-test-server)

MCP server ready: Integration Test Server {
  tools: [
    {
      name: [32m&apos;test-tool&apos;[39m,
      description: [32m&apos;A test tool&apos;[39m,
      inputSchema: [36m[Object][39m
    }
  ]
}

Discovered tools for integration-test-server: [33m1[39m [ [32m&apos;test-tool&apos;[39m ]

Discovered resources for integration-test-server: [33m1[39m

Discovered prompts for integration-test-server: [33m1[39m

✅ Successfully started MCP server: Integration Test Server
🔓 Released operation lock for server integration-test-server

🔍 Race condition check for stopServer on integration-test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server integration-test-server

🛑 Stopping MCP server: Integration Test Server (integration-test-server)

✅ Successfully stopped MCP server: Integration Test Server
🔓 Released operation lock for server integration-test-server

            </system-out>
        </testcase>
        <testcase classname="tests/integration/mcp-integration.test.ts" name="MCP Integration Tests &gt; Resource Subscription Management &gt; should handle resource subscription lifecycle" time="0.004985393">
            <system-out>
🔍 Race condition check for startServer on integration-test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mfalse[39m,
  currentState: [1mnull[22m,
  totalServers: [33m0[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server integration-test-server

🚀 Starting MCP server: Integration Test Server (integration-test-server)

MCP server ready: Integration Test Server {
  tools: [
    {
      name: [32m&apos;test-tool&apos;[39m,
      description: [32m&apos;A test tool&apos;[39m,
      inputSchema: [36m[Object][39m
    }
  ]
}

Discovered tools for integration-test-server: [33m1[39m [ [32m&apos;test-tool&apos;[39m ]

Discovered resources for integration-test-server: [33m1[39m

Discovered prompts for integration-test-server: [33m1[39m

✅ Successfully started MCP server: Integration Test Server
🔓 Released operation lock for server integration-test-server

Subscribed to resource file://dynamic-resource.txt on integration-test-server

Unsubscribed from resource file://dynamic-resource.txt on integration-test-server

🔍 Race condition check for stopServer on integration-test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server integration-test-server

🛑 Stopping MCP server: Integration Test Server (integration-test-server)

✅ Successfully stopped MCP server: Integration Test Server
🔓 Released operation lock for server integration-test-server

            </system-out>
        </testcase>
        <testcase classname="tests/integration/mcp-integration.test.ts" name="MCP Integration Tests &gt; Performance and Concurrency &gt; should handle concurrent tool executions" time="0.006007923">
            <system-out>
🔍 Race condition check for startServer on integration-test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mfalse[39m,
  currentState: [1mnull[22m,
  totalServers: [33m0[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server integration-test-server

🚀 Starting MCP server: Integration Test Server (integration-test-server)

MCP server ready: Integration Test Server {
  tools: [
    {
      name: [32m&apos;test-tool&apos;[39m,
      description: [32m&apos;A test tool&apos;[39m,
      inputSchema: [36m[Object][39m
    }
  ]
}

Discovered tools for integration-test-server: [33m1[39m [ [32m&apos;test-tool&apos;[39m ]

Discovered resources for integration-test-server: [33m1[39m

Discovered prompts for integration-test-server: [33m1[39m

✅ Successfully started MCP server: Integration Test Server
🔓 Released operation lock for server integration-test-server

Executing tool test-tool on server integration-test-server { args: { index: [33m0[39m } }

Tool execution completed for test-tool { result: { result: [32m&apos;Tool executed successfully&apos;[39m } }

Executing tool test-tool on server integration-test-server { args: { index: [33m1[39m } }

Tool execution completed for test-tool { result: { result: [32m&apos;Tool executed successfully&apos;[39m } }

Executing tool test-tool on server integration-test-server { args: { index: [33m2[39m } }

Tool execution completed for test-tool { result: { result: [32m&apos;Tool executed successfully&apos;[39m } }

🔍 Race condition check for stopServer on integration-test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server integration-test-server

🛑 Stopping MCP server: Integration Test Server (integration-test-server)

✅ Successfully stopped MCP server: Integration Test Server
🔓 Released operation lock for server integration-test-server

            </system-out>
        </testcase>
    </testsuite>
    <testsuite name="tests/utils/SessionManager.test.ts" timestamp="2025-07-05T04:45:08.454Z" hostname="DESKTOP-HR2BSFJ" tests="4" failures="0" errors="0" skipped="0" time="0.011933982">
        <testcase classname="tests/utils/SessionManager.test.ts" name="SessionManager basics &gt; creates a new session and sets it as current" time="0.004248166">
            <system-out>
SessionManager: No app storage found, checking for legacy chat history...
SessionManager: No legacy data found, creating default storage
SessionManager: Cleared all sessions

SessionManager: Created new session: session_1751690707852_flr2h7u72

            </system-out>
        </testcase>
        <testcase classname="tests/utils/SessionManager.test.ts" name="SessionManager basics &gt; renames an existing session" time="0.002331487">
            <system-out>
SessionManager: Cleared all sessions

SessionManager: Created new session: session_1751690707855_5fwr92utl
SessionManager: Updated session: session_1751690707855_5fwr92utl

            </system-out>
        </testcase>
        <testcase classname="tests/utils/SessionManager.test.ts" name="SessionManager basics &gt; prunes old sessions beyond max cap" time="0.002977782">
            <system-out>
SessionManager: Cleared all sessions

SessionManager: Created new session: session_1751690707856_cjyh1w3tb
SessionManager: Created new session: session_1751690707857_v4fywt1ne
SessionManager: Created new session: session_1751690707857_653s4s3tb
SessionManager: Created new session: session_1751690707857_j8e8lc9yf
SessionManager: Created new session: session_1751690707857_3yfbc4dwe
SessionManager: Created new session: session_1751690707857_mk0vllr0b
SessionManager: Created new session: session_1751690707857_1yaoak04s
SessionManager: Created new session: session_1751690707857_4yi3u1d3d
SessionManager: Created new session: session_1751690707857_gyc2etgcz
SessionManager: Created new session: session_1751690707857_3qr0tijjr
SessionManager: Deleted session: session_1751690707856_cjyh1w3tb
SessionManager: Deleted session: session_1751690707857_v4fywt1ne
SessionManager: Deleted session: session_1751690707857_653s4s3tb
SessionManager: Deleted session: session_1751690707857_j8e8lc9yf
SessionManager: Deleted session: session_1751690707857_3yfbc4dwe

            </system-out>
        </testcase>
        <testcase classname="tests/utils/SessionManager.test.ts" name="SessionManager basics &gt; clears all sessions" time="0.001023661">
            <system-out>
SessionManager: Cleared all sessions

SessionManager: Created new session: session_1751690707859_njs7l0dov
SessionManager: Created new session: session_1751690707859_wgv1fhk1s
SessionManager: Created new session: session_1751690707859_4zpf5pva6
SessionManager: Cleared all sessions

            </system-out>
        </testcase>
    </testsuite>
    <testsuite name="tests/main/config/ConfigManager.test.ts" timestamp="2025-07-05T04:45:08.456Z" hostname="DESKTOP-HR2BSFJ" tests="38" failures="0" errors="0" skipped="0" time="0.024053574">
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Constructor and Initialization &gt; should initialize with default settings when no config file exists" time="0.003737387">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Constructor and Initialization &gt; should load existing configuration when config file exists" time="0.000921554">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Constructor and Initialization &gt; should handle config file read errors gracefully" time="0.000695408">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Constructor and Initialization &gt; should handle invalid JSON gracefully" time="0.000263565">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Constructor and Initialization &gt; should use fallback path when userData path fails" time="0.001242836">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Settings Management &gt; should update general settings" time="0.000694483">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Settings Management &gt; should update LLM providers" time="0.000449846">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Settings Management &gt; should update MCP servers" time="0.000425001">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Settings Management &gt; should handle update errors" time="0.000937997">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Settings Management &gt; should return deep copy of settings" time="0.001097239">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Provider Management &gt; should add LLM provider" time="0.000539536">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Provider Management &gt; should update LLM provider by ID" time="0.000297723">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Provider Management &gt; should remove LLM provider" time="0.000329576">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Provider Management &gt; should clear default provider when removing it" time="0.000179961">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Provider Management &gt; should find best default provider model" time="0.000181279">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Provider Management &gt; should return undefined when no enabled provider with model exists" time="0.000197868">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Provider Management &gt; should set and get default provider model" time="0.000196958">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; MCP Server Management &gt; should add MCP server" time="0.000472674">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; MCP Server Management &gt; should update existing MCP server when adding with same ID" time="0.000751695">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; MCP Server Management &gt; should remove MCP server" time="0.00045028">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; MCP Server Management &gt; should handle removing non-existent MCP server" time="0.000134841">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; MCP Server Management &gt; should update MCP server" time="0.000250447">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; MCP Server Management &gt; should throw error when updating non-existent MCP server" time="0.000237404">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Settings Validation &gt; should validate valid settings" time="0.000299769">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Settings Validation &gt; should reject invalid theme" time="0.000158888">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Settings Validation &gt; should reject invalid provider type" time="0.000216877">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Settings Validation &gt; should reject invalid MCP server structure" time="0.000112062">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Settings Validation &gt; should reject non-object settings" time="0.000103737">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Import/Export &gt; should export settings as JSON string" time="0.000225795">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Import/Export &gt; should import valid settings" time="0.000228432">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Import/Export &gt; should reject invalid JSON during import" time="0.000160057">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Import/Export &gt; should reject invalid settings during import" time="0.000151397">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Provider Deduplication &gt; should deduplicate providers by type" time="0.000646474">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Provider Deduplication &gt; should ensure required default providers exist" time="0.000403463">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Reset to Defaults &gt; should reset all settings to defaults" time="0.000356481">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Migration and Merging &gt; should merge partial user settings with defaults" time="0.00351867">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Migration and Merging &gt; should handle migration of LLM settings" time="0.000454363">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Migration and Merging &gt; should use defaults when LLM providers are invalid" time="0.000249165">
        </testcase>
    </testsuite>
    <testsuite name="tests/main/llm/LlmManager.test.ts" timestamp="2025-07-05T04:45:08.462Z" hostname="DESKTOP-HR2BSFJ" tests="49" failures="0" errors="0" skipped="0" time="0.047708562">
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Initialization &gt; should initialize successfully" time="0.001688059">
            <system-out>
Initializing LLM Manager
LLM Manager initialized successfully

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Initialization &gt; should set max listeners to 50" time="0.000231621">
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Provider Management &gt; should add Ollama provider" time="0.000744895">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Provider Management &gt; should add OpenRouter provider" time="0.000277745">
            <system-out>
LLM provider added: Test Provider (openrouter)

Health check for test-provider: unhealthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Provider Management &gt; should reject unsupported provider type" time="0.000531126">
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Provider Management &gt; should remove provider" time="0.000828275">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

LLM provider removed: test-provider

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Provider Management &gt; should handle removing non-existent provider" time="0.000199559">
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Provider Management &gt; should update provider config" time="0.001670125">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

LLM provider updated: test-provider

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Provider Management &gt; should throw error when updating non-existent provider" time="0.000497282">
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Provider Management &gt; should check health when provider is enabled" time="0.000511187">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

LLM provider updated: test-provider

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Provider Management &gt; should mark as unhealthy when provider is disabled" time="0.000415928">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

LLM provider updated: test-provider

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Provider Management &gt; should get all providers" time="0.000244202">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Provider Management &gt; should emit events for provider operations" time="0.000828964">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

LLM provider updated: test-provider

LLM provider removed: test-provider

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Health Management &gt; should check provider health" time="0.000208721">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Health Management &gt; should return false for non-existent provider health check" time="0.000163012">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Health Management &gt; should handle health check failures" time="0.000260973">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Health Management &gt; should implement exponential backoff for retries" time="0.000173221">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

Health check for test-provider: unhealthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Health Management &gt; should reset retry count on successful health check" time="0.000161414">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

Health check for test-provider: unhealthy

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Health Management &gt; should check all providers health" time="0.000270009">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

LLM provider added: Test Provider (openrouter)

Health check for openrouter-provider: healthy

Health check for test-provider: healthy
Health check for openrouter-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Health Management &gt; should skip health check for disabled providers" time="0.000248568">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Health Management &gt; should skip health check if retry time not reached" time="0.000201584">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Health Management &gt; should get all provider health" time="0.000143712">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Health Management &gt; should emit health change events" time="0.000452845">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Message Processing &gt; should send message successfully" time="0.001635793">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Message Processing &gt; should merge provider config with options" time="0.001055578">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Message Processing &gt; should throw error for non-existent provider" time="0.001051206">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Message Processing &gt; should throw error for disabled provider" time="0.000781692">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Message Processing &gt; should attempt recovery for unhealthy provider" time="0.000809269">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Message Processing &gt; should throw error if recovery fails" time="0.001780412">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

Health check for test-provider: unhealthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Message Processing &gt; should handle message processing errors" time="0.000913998">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Message Processing &gt; should emit events for message processing" time="0.001102388">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Message Processing &gt; should reset retry count on successful message" time="0.000425193">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Model Management &gt; should get available models" time="0.001491514">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Model Management &gt; should return empty array for non-existent provider" time="0.000491513">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Model Management &gt; should handle model fetching errors" time="0.000487507">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Status and Validation &gt; should get status with enabled providers" time="0.002740234">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

[LlmManager] getStatus: Gathering status for providers...
  → Provider test-provider: name=&quot;Test Provider&quot; type=ollama enabled=true
[LlmManager] getStatus: Processing enabled provider test-provider

    • test-provider health=true models=1
[LlmManager] getStatus: Returning 1 enabled providers

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Status and Validation &gt; should exclude disabled providers from status" time="0.003519169">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

[LlmManager] getStatus: Gathering status for providers...
  → Provider test-provider: name=&quot;Test Provider&quot; type=ollama enabled=false
[LlmManager] getStatus: Returning 0 enabled providers

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Status and Validation &gt; should validate provider model - valid case" time="0.003222507">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Status and Validation &gt; should validate provider model - removed provider" time="0.007460814">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Status and Validation &gt; should validate provider model - disabled provider" time="0.00089501">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Status and Validation &gt; should validate provider model - unhealthy provider" time="0.000499967">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Shutdown &gt; should shutdown cleanly" time="0.00053428">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

Shutting down LLM Manager
LLM Manager shutdown complete

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Shutdown &gt; should remove all listeners on shutdown" time="0.000328708">
            <system-out>
Shutting down LLM Manager
LLM Manager shutdown complete

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Provider ID Generation &gt; should use provided ID" time="0.000272358">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for custom-id: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Provider ID Generation &gt; should generate ID from type and name when not provided" time="0.00031207">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for ollama-test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Provider ID Generation &gt; should handle names with spaces and special characters" time="0.000228757">
            <system-out>
LLM provider added: Test Provider With Spaces (ollama)

Health check for ollama-test-provider-with-spaces: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Edge Cases &gt; should handle multiple providers of same type" time="0.000339282">
            <system-out>
LLM provider added: Ollama 1 (ollama)

Health check for ollama-1: healthy

LLM provider added: Ollama 2 (ollama)

Health check for ollama-2: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Edge Cases &gt; should handle provider config updates with undefined values" time="0.000703675">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

LLM provider updated: test-provider

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Edge Cases &gt; should handle health check with no initial health status" time="0.00038408">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
    </testsuite>
    <testsuite name="tests/main/mcp/ConnectionManager.test.ts" timestamp="2025-07-05T04:45:08.487Z" hostname="DESKTOP-HR2BSFJ" tests="57" failures="0" errors="0" skipped="0" time="0.199396555">
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Server Lifecycle Management &gt; startServer &gt; should successfully start a STDIO server" time="0.01022946">
            <system-out>
🔍 Race condition check for startServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mfalse[39m,
  currentState: [1mnull[22m,
  totalServers: [33m0[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🚀 Starting MCP server: Test Server (test-server)

MCP server ready: Test Server {
  tools: [ { name: [32m&apos;test-tool&apos;[39m, description: [32m&apos;Test tool&apos;[39m, inputSchema: {} } ]
}

Discovered tools for test-server: [33m1[39m [ [32m&apos;test-tool&apos;[39m ]

Discovered resources for test-server: [33m0[39m

Discovered prompts for test-server: [33m0[39m

✅ Successfully started MCP server: Test Server
🔓 Released operation lock for server test-server

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Server Lifecycle Management &gt; startServer &gt; should successfully start an HTTP server" time="0.004439256">
            <system-out>
🔍 Race condition check for startServer on test-http-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mfalse[39m,
  currentState: [1mnull[22m,
  totalServers: [33m0[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-http-server

🚀 Starting MCP server: Test HTTP Server (test-http-server)

MCP server ready: Test HTTP Server { tools: [] }

Discovered tools for test-http-server: [33m0[39m []

Discovered resources for test-http-server: [33m0[39m

Discovered prompts for test-http-server: [33m0[39m

✅ Successfully started MCP server: Test HTTP Server
🔓 Released operation lock for server test-http-server

🔍 Race condition check for stopServer on test-http-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-http-server

🛑 Stopping MCP server: Test HTTP Server (test-http-server)

✅ Successfully stopped MCP server: Test HTTP Server
🔓 Released operation lock for server test-http-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Server Lifecycle Management &gt; startServer &gt; should handle Windows command resolution" time="0.003786138">
            <system-out>
🔍 Race condition check for startServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mfalse[39m,
  currentState: [1mnull[22m,
  totalServers: [33m0[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🚀 Starting MCP server: Test Server (test-server)

MCP server ready: Test Server { tools: [] }

Discovered tools for test-server: [33m0[39m []

Discovered resources for test-server: [33m0[39m

Discovered prompts for test-server: [33m0[39m

✅ Successfully started MCP server: Test Server
🔓 Released operation lock for server test-server

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Server Lifecycle Management &gt; startServer &gt; should handle command with spaces and quotes" time="0.003245643">
            <system-out>
🔍 Race condition check for startServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mfalse[39m,
  currentState: [1mnull[22m,
  totalServers: [33m0[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🚀 Starting MCP server: Test Server (test-server)

MCP server ready: Test Server { tools: [] }

Discovered tools for test-server: [33m0[39m []

Discovered resources for test-server: [33m0[39m

Discovered prompts for test-server: [33m0[39m

✅ Successfully started MCP server: Test Server
🔓 Released operation lock for server test-server

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Server Lifecycle Management &gt; startServer &gt; should handle maximum server limit" time="0.008511418">
            <system-out>
🔍 Race condition check for startServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mfalse[39m,
  currentState: [1mnull[22m,
  totalServers: [33m8[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🔓 Released operation lock for server test-server

🔍 Race condition check for stopServer on server-0: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m8[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server server-0
🔍 Race condition check for stopServer on server-1: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m8[39m,
  activeLocks: [33m1[39m
}
🔒 Acquired operation lock for server server-1
🔍 Race condition check for stopServer on server-2: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m8[39m,
  activeLocks: [33m2[39m
}
🔒 Acquired operation lock for server server-2
🔍 Race condition check for stopServer on server-3: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m8[39m,
  activeLocks: [33m3[39m
}
🔒 Acquired operation lock for server server-3
🔍 Race condition check for stopServer on server-4: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m8[39m,
  activeLocks: [33m4[39m
}
🔒 Acquired operation lock for server server-4
🔍 Race condition check for stopServer on server-5: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m8[39m,
  activeLocks: [33m5[39m
}
🔒 Acquired operation lock for server server-5
🔍 Race condition check for stopServer on server-6: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m8[39m,
  activeLocks: [33m6[39m
}
🔒 Acquired operation lock for server server-6
🔍 Race condition check for stopServer on server-7: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m8[39m,
  activeLocks: [33m7[39m
}
🔒 Acquired operation lock for server server-7
🛑 Stopping MCP server: Server 0 (server-0)
🛑 Stopping MCP server: Server 1 (server-1)
🛑 Stopping MCP server: Server 2 (server-2)
🛑 Stopping MCP server: Server 3 (server-3)
🛑 Stopping MCP server: Server 4 (server-4)
🛑 Stopping MCP server: Server 5 (server-5)
🛑 Stopping MCP server: Server 6 (server-6)
🛑 Stopping MCP server: Server 7 (server-7)

✅ Successfully stopped MCP server: Server 0
🔓 Released operation lock for server server-0

✅ Successfully stopped MCP server: Server 1
🔓 Released operation lock for server server-1

✅ Successfully stopped MCP server: Server 2
🔓 Released operation lock for server server-2

✅ Successfully stopped MCP server: Server 3
🔓 Released operation lock for server server-3

✅ Successfully stopped MCP server: Server 4
🔓 Released operation lock for server server-4

✅ Successfully stopped MCP server: Server 5
🔓 Released operation lock for server server-5

✅ Successfully stopped MCP server: Server 6
🔓 Released operation lock for server server-6

✅ Successfully stopped MCP server: Server 7
🔓 Released operation lock for server server-7

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Server Lifecycle Management &gt; startServer &gt; should handle server already running" time="0.004298733">
            <system-out>
🔍 Race condition check for startServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🔓 Released operation lock for server test-server

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Server Lifecycle Management &gt; startServer &gt; should handle MCP SDK loading failure" time="0.002477696">
            <system-out>
🔍 Race condition check for startServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mfalse[39m,
  currentState: [1mnull[22m,
  totalServers: [33m0[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🚀 Starting MCP server: Test Server (test-server)

🔓 Released operation lock for server test-server

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;failed&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)
✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Server Lifecycle Management &gt; startServer &gt; should handle client connection failure" time="0.003389539">
            <system-out>
🔍 Race condition check for startServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mfalse[39m,
  currentState: [1mnull[22m,
  totalServers: [33m0[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🚀 Starting MCP server: Test Server (test-server)

🔓 Released operation lock for server test-server

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;failed&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)
✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Server Lifecycle Management &gt; startServer &gt; should handle missing command for STDIO transport" time="0.002006277">
            <system-out>
🔍 Race condition check for startServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mfalse[39m,
  currentState: [1mnull[22m,
  totalServers: [33m0[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🚀 Starting MCP server: Test Server (test-server)

🔓 Released operation lock for server test-server

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;failed&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)
✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Server Lifecycle Management &gt; startServer &gt; should set up environment variables correctly" time="0.005854064">
            <system-out>
🔍 Race condition check for startServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mfalse[39m,
  currentState: [1mnull[22m,
  totalServers: [33m0[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🚀 Starting MCP server: Test Server (test-server)

MCP server ready: Test Server { tools: [] }

Discovered tools for test-server: [33m0[39m []

Discovered resources for test-server: [33m0[39m

Discovered prompts for test-server: [33m0[39m

✅ Successfully started MCP server: Test Server
🔓 Released operation lock for server test-server

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Server Lifecycle Management &gt; stopServer &gt; should successfully stop a running server" time="0.003220747">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Server Lifecycle Management &gt; stopServer &gt; should handle stopping non-existent server gracefully" time="0.001851605">
            <system-out>
🔍 Race condition check for stopServer on non-existent: {
  hasLock: [33mfalse[39m,
  serverExists: [33mfalse[39m,
  currentState: [1mnull[22m,
  totalServers: [33m0[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server non-existent

🔓 Released operation lock for server non-existent

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Server Lifecycle Management &gt; stopServer &gt; should handle client close failure" time="0.002808137">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Server Lifecycle Management &gt; stopServer &gt; should kill process if client close fails" time="0.003497502">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Server Lifecycle Management &gt; stopAllServers &gt; should stop all running servers" time="0.004571447">
            <system-out>
🔍 Race condition check for stopServer on server1: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m3[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server server1
🔍 Race condition check for stopServer on server2: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m3[39m,
  activeLocks: [33m1[39m
}
🔒 Acquired operation lock for server server2
🔍 Race condition check for stopServer on server3: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m3[39m,
  activeLocks: [33m2[39m
}
🔒 Acquired operation lock for server server3
🛑 Stopping MCP server: Test Server (server1)
🛑 Stopping MCP server: Test Server (server2)
🛑 Stopping MCP server: Test Server (server3)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server server1

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server server2

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server server3

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Tool Management &gt; executeTool &gt; should execute a tool with permission" time="0.007121552">
            <system-out>
Executing tool test-tool on server test-server { args: { arg1: [32m&apos;value1&apos;[39m } }

Tool execution completed for test-tool { result: { result: [32m&apos;success&apos;[39m } }

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Tool Management &gt; executeTool &gt; should reject when server not found" time="0.004249635">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Tool Management &gt; executeTool &gt; should reject when server not ready" time="0.004641495">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;starting&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Tool Management &gt; executeTool &gt; should reject when tool not found" time="0.005319304">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Tool Management &gt; executeTool &gt; should reject when permission denied" time="0.00297185">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Tool Management &gt; executeTool &gt; should handle tool execution errors" time="0.004010033">
            <system-out>
Executing tool test-tool on server test-server { args: {} }

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Tool Management &gt; getAvailableTools &gt; should return tools for a specific server" time="0.003008433">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Tool Management &gt; getAvailableTools &gt; should return empty array for non-existent server" time="0.003217398">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Tool Management &gt; getAvailableTools &gt; should return empty array for server without tools" time="0.003534667">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Tool Management &gt; getAllAvailableTools &gt; should return tools from all servers" time="0.005379856">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m2[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server
🔍 Race condition check for stopServer on server2: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m2[39m,
  activeLocks: [33m1[39m
}
🔒 Acquired operation lock for server server2
🛑 Stopping MCP server: Test Server (test-server)
🛑 Stopping MCP server: Test Server (server2)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server server2

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Resource Management &gt; readResource &gt; should read a resource successfully" time="0.003694854">
            <system-out>
Reading resource file://test.txt from server test-server

Resource read completed for file://test.txt

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Resource Management &gt; readResource &gt; should reject when server not found" time="0.001982395">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Resource Management &gt; readResource &gt; should reject when server not ready" time="0.003782383">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;starting&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Resource Management &gt; readResource &gt; should handle read errors" time="0.003446381">
            <system-out>
Reading resource file://test.txt from server test-server

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Resource Management &gt; subscribeToResource &gt; should subscribe to a resource successfully" time="0.002804413">
            <system-out>
Subscribed to resource file://test.txt on test-server

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Resource Management &gt; subscribeToResource &gt; should handle already subscribed resources" time="0.002326453">
            <system-out>
Already subscribed to resource file://test.txt on test-server

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Resource Management &gt; subscribeToResource &gt; should handle subscription errors" time="0.003140938">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Resource Management &gt; unsubscribeFromResource &gt; should unsubscribe from a resource successfully" time="0.003026452">
            <system-out>
Unsubscribed from resource file://test.txt on test-server

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Resource Management &gt; unsubscribeFromResource &gt; should handle not subscribed resources" time="0.003187049">
            <system-out>
Unsubscribed from resource file://test.txt on test-server

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Resource Management &gt; getAvailableResources &gt; should return resources for a specific server" time="0.002013483">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Resource Management &gt; getAvailableResources &gt; should return empty array for non-existent server" time="0.004712141">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Resource Management &gt; getAllAvailableResources &gt; should return resources from all servers" time="0.003045027">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m2[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server
🔍 Race condition check for stopServer on server2: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m2[39m,
  activeLocks: [33m1[39m
}
🔒 Acquired operation lock for server server2
🛑 Stopping MCP server: Test Server (test-server)
🛑 Stopping MCP server: Test Server (server2)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server server2

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Prompt Management &gt; executePrompt &gt; should execute a prompt successfully" time="0.002445333">
            <system-out>
Executing prompt test-prompt on server test-server { args: { arg1: [32m&apos;value1&apos;[39m } }

Prompt execution completed for test-prompt

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Prompt Management &gt; executePrompt &gt; should execute prompt without arguments" time="0.002311876">
            <system-out>
Executing prompt test-prompt on server test-server { args: [90mundefined[39m }

Prompt execution completed for test-prompt

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Prompt Management &gt; executePrompt &gt; should reject when server not found" time="0.002188444">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Prompt Management &gt; executePrompt &gt; should reject when prompt not found" time="0.002945142">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Prompt Management &gt; executePrompt &gt; should handle prompt execution errors" time="0.004632823">
            <system-out>
Executing prompt test-prompt on server test-server { args: [90mundefined[39m }

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Prompt Management &gt; getAvailablePrompts &gt; should return prompts for a specific server" time="0.002709636">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Prompt Management &gt; getAvailablePrompts &gt; should return empty array for non-existent server" time="0.0042536">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Prompt Management &gt; getAllAvailablePrompts &gt; should return prompts from all servers" time="0.005342942">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m2[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server
🔍 Race condition check for stopServer on server2: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m2[39m,
  activeLocks: [33m1[39m
}
🔒 Acquired operation lock for server server2
🛑 Stopping MCP server: Test Server (test-server)
🛑 Stopping MCP server: Test Server (server2)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server server2

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; State Management &gt; should get server state" time="0.003108761">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; State Management &gt; should return null for non-existent server state" time="0.000737217">
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; State Management &gt; should get all server states" time="0.002814297">
            <system-out>
🔍 Race condition check for stopServer on server1: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m2[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server server1
🔍 Race condition check for stopServer on server2: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;starting&apos;[39m,
  totalServers: [33m2[39m,
  activeLocks: [33m1[39m
}
🔒 Acquired operation lock for server server2
🛑 Stopping MCP server: Test Server (server1)
🛑 Stopping MCP server: Test Server (server2)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server server1

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server server2

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Advanced Features &gt; sampleLLM &gt; should handle LLM sampling requests" time="0.003044635">
            <system-out>
Warning: sampleLLM called directly - this should go through normal tool execution

Executing tool sampleLLM on server test-server {
  args: {
    messages: [ [36m[Object][39m ],
    maxTokens: [33m100[39m,
    temperature: [33m0.7[39m,
    stopSequences: [90mundefined[39m,
    modelPreferences: [90mundefined[39m
  }
}

Tool execution completed for sampleLLM { result: { content: [32m&apos;LLM response&apos;[39m } }

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Advanced Features &gt; sampleLLM &gt; should reject when server not found" time="0.000873178">
            <system-out>
Warning: sampleLLM called directly - this should go through normal tool execution

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Advanced Features &gt; sampleLLM &gt; should handle sampling errors gracefully" time="0.003568253">
            <system-out>
Warning: sampleLLM called directly - this should go through normal tool execution

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Advanced Features &gt; Discovery Methods &gt; should discover tools correctly" time="0.001352535">
            <system-out>
Discovered tools for test-server: [33m2[39m [ [32m&apos;tool1&apos;[39m, [32m&apos;tool2&apos;[39m ]

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Advanced Features &gt; Discovery Methods &gt; should discover resources correctly" time="0.000867381">
            <system-out>
Discovered resources for test-server: [33m2[39m

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Advanced Features &gt; Discovery Methods &gt; should discover prompts correctly" time="0.000717407">
            <system-out>
Discovered prompts for test-server: [33m2[39m

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Advanced Features &gt; Discovery Methods &gt; should handle discovery errors gracefully" time="0.000774608">
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Advanced Features &gt; Resource Refresh &gt; should refresh server resources" time="0.003695242">
            <system-out>
Discovered resources for test-server: [33m1[39m

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Advanced Features &gt; Resource Refresh &gt; should handle refresh errors gracefully" time="0.002962363">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
    </testsuite>
    <testsuite name="tests/main/permissions/PermissionManager.test.ts" timestamp="2025-07-05T04:45:08.517Z" hostname="DESKTOP-HR2BSFJ" tests="18" failures="0" errors="0" skipped="0" time="0.024894923">
        <testcase classname="tests/main/permissions/PermissionManager.test.ts" name="PermissionManager &gt; Initialization &gt; should initialize with default settings" time="0.006856899">
        </testcase>
        <testcase classname="tests/main/permissions/PermissionManager.test.ts" name="PermissionManager &gt; Initialization &gt; should set max listeners to 50" time="0.00094893">
        </testcase>
        <testcase classname="tests/main/permissions/PermissionManager.test.ts" name="PermissionManager &gt; Auto-Approval &gt; should auto-approve for trusted servers" time="0.00105448">
        </testcase>
        <testcase classname="tests/main/permissions/PermissionManager.test.ts" name="PermissionManager &gt; Auto-Approval &gt; should auto-approve based on risk level settings" time="0.000601665">
        </testcase>
        <testcase classname="tests/main/permissions/PermissionManager.test.ts" name="PermissionManager &gt; Permission Management API &gt; should revoke permissions" time="0.001363013">
        </testcase>
        <testcase classname="tests/main/permissions/PermissionManager.test.ts" name="PermissionManager &gt; Permission Management API &gt; should handle revoking non-existent permissions" time="0.002510461">
        </testcase>
        <testcase classname="tests/main/permissions/PermissionManager.test.ts" name="PermissionManager &gt; Permission Management API &gt; should clear all permissions" time="0.000792935">
        </testcase>
        <testcase classname="tests/main/permissions/PermissionManager.test.ts" name="PermissionManager &gt; Permission Management API &gt; should update settings" time="0.000525818">
        </testcase>
        <testcase classname="tests/main/permissions/PermissionManager.test.ts" name="PermissionManager &gt; Permission Management API &gt; should manage trusted servers" time="0.001787785">
        </testcase>
        <testcase classname="tests/main/permissions/PermissionManager.test.ts" name="PermissionManager &gt; Session Management &gt; should clear session permissions" time="0.000668056">
        </testcase>
        <testcase classname="tests/main/permissions/PermissionManager.test.ts" name="PermissionManager &gt; Approval Request Handling &gt; should timeout approval requests" time="0.001161499">
        </testcase>
        <testcase classname="tests/main/permissions/PermissionManager.test.ts" name="PermissionManager &gt; Approval Request Handling &gt; should handle invalid approval responses" time="0.000440808">
        </testcase>
        <testcase classname="tests/main/permissions/PermissionManager.test.ts" name="PermissionManager &gt; Approval Request Handling &gt; should emit permission request events" time="0.000721364">
        </testcase>
        <testcase classname="tests/main/permissions/PermissionManager.test.ts" name="PermissionManager &gt; Shutdown &gt; should clean up all resources on shutdown" time="0.00035992">
        </testcase>
        <testcase classname="tests/main/permissions/PermissionManager.test.ts" name="PermissionManager &gt; Edge Cases &gt; should handle empty permission key generation" time="0.000360728">
        </testcase>
        <testcase classname="tests/main/permissions/PermissionManager.test.ts" name="PermissionManager &gt; Edge Cases &gt; should handle session key generation with various inputs" time="0.000192199">
        </testcase>
        <testcase classname="tests/main/permissions/PermissionManager.test.ts" name="PermissionManager &gt; Edge Cases &gt; should handle argument hashing with special characters" time="0.000226952">
        </testcase>
        <testcase classname="tests/main/permissions/PermissionManager.test.ts" name="PermissionManager &gt; Edge Cases &gt; should handle argument hashing with undefined/null values" time="0.000290254">
        </testcase>
    </testsuite>
    <testsuite name="tests/main/security/SecureStorage.test.ts" timestamp="2025-07-05T04:45:08.520Z" hostname="DESKTOP-HR2BSFJ" tests="22" failures="0" errors="0" skipped="0" time="0.018778118">
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; Initialization &gt; should create singleton instance" time="0.001849666">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; Initialization &gt; should check encryption availability" time="0.00071505">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; Initialization &gt; should handle encryption not available" time="0.000327535">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; Encryption and Decryption &gt; should encrypt string successfully" time="0.001775587">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; Encryption and Decryption &gt; should decrypt string successfully" time="0.00519351">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; Encryption and Decryption &gt; should return plain text when encryption is not available" time="0.002829428">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; Encryption and Decryption &gt; should return plain text when decrypting non-encrypted data" time="0.00028687">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; Encryption and Decryption &gt; should handle encryption errors gracefully" time="0.000515704">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; Encryption and Decryption &gt; should handle decryption errors gracefully" time="0.000521738">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; API Key Management Methods &gt; should migrate plain text to encrypted format" time="0.000518814">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; API Key Management Methods &gt; should return original value if already encrypted" time="0.000168331">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; API Key Management Methods &gt; should get plain text value from encrypted storage" time="0.000199283">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; API Key Management Methods &gt; should return plain text value as-is" time="0.000193275">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; API Key Management Methods &gt; should return empty string for empty input" time="0.000113764">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; API Key Management Methods &gt; should detect encrypted values correctly" time="0.000127094">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; Validation &gt; should validate encryption successfully" time="0.00018151">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; Validation &gt; should fail validation when encryption is not available" time="0.000095934">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; Validation &gt; should fail validation on encryption error" time="0.000202152">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; Validation &gt; should fail validation on data mismatch" time="0.000285008">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; Edge Cases &gt; should handle empty strings in getPlainTextValue" time="0.000158061">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; Edge Cases &gt; should handle decryption failure gracefully in getPlainTextValue" time="0.000158437">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; Edge Cases &gt; should return plain text on failed encryption during migration" time="0.000126168">
        </testcase>
    </testsuite>
    <testsuite name="tests/renderer/components/ErrorBoundary.test.tsx" timestamp="2025-07-05T04:45:08.523Z" hostname="DESKTOP-HR2BSFJ" tests="13" failures="0" errors="0" skipped="0" time="0.116043525">
        <testcase classname="tests/renderer/components/ErrorBoundary.test.tsx" name="ErrorBoundary &gt; should render children when there is no error" time="0.018417981">
        </testcase>
        <testcase classname="tests/renderer/components/ErrorBoundary.test.tsx" name="ErrorBoundary &gt; should catch errors and display error UI" time="0.026743082">
            <system-out>
🚨 React Error Boundary: Test

📤 Reported error to main process: error_1751690708069_qbrjycl4i

            </system-out>
            <system-err>
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m

            </system-err>
        </testcase>
        <testcase classname="tests/renderer/components/ErrorBoundary.test.tsx" name="ErrorBoundary &gt; should display custom fallback when provided" time="0.005238976">
            <system-out>
🚨 React Error Boundary: Test

📤 Reported error to main process: error_1751690708084_9qeahoais

            </system-out>
            <system-err>
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m

            </system-err>
        </testcase>
        <testcase classname="tests/renderer/components/ErrorBoundary.test.tsx" name="ErrorBoundary &gt; should call onError callback when provided" time="0.006903842">
            <system-out>
🚨 React Error Boundary: Test

📤 Reported error to main process: error_1751690708089_f949cggog

            </system-out>
            <system-err>
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m

            </system-err>
        </testcase>
        <testcase classname="tests/renderer/components/ErrorBoundary.test.tsx" name="ErrorBoundary &gt; should generate unique error ID" time="0.013296102">
            <system-out>
🚨 React Error Boundary: Test1
🚨 React Error Boundary: Test2
📤 Reported error to main process: error_1751690708100_twlc3592b
📤 Reported error to main process: error_1751690708101_j282mm138

            </system-out>
            <system-err>
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m

            </system-err>
        </testcase>
        <testcase classname="tests/renderer/components/ErrorBoundary.test.tsx" name="ErrorBoundary &gt; should report error to main process" time="0.006322824">
            <system-out>
🚨 React Error Boundary: Test

📤 Reported error to main process: error_1751690708109_8wyasv0m7

            </system-out>
            <system-err>
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m

            </system-err>
        </testcase>
        <testcase classname="tests/renderer/components/ErrorBoundary.test.tsx" name="ErrorBoundary &gt; should handle error reporting failure gracefully" time="0.006179964">
            <system-out>
🚨 React Error Boundary: Test

            </system-out>
            <system-err>
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m

            </system-err>
        </testcase>
        <testcase classname="tests/renderer/components/ErrorBoundary.test.tsx" name="ErrorBoundary &gt; should show debug information in development" time="0.006067331">
            <system-out>
🚨 React Error Boundary: Test

📤 Reported error to main process: error_1751690708123_lwbc7flyd

            </system-out>
            <system-err>
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m

            </system-err>
        </testcase>
        <testcase classname="tests/renderer/components/ErrorBoundary.test.tsx" name="ErrorBoundary &gt; should hide debug information in production" time="0.004137169">
            <system-out>
🚨 React Error Boundary: Test

📤 Reported error to main process: error_1751690708127_laj4ac2mu

            </system-out>
            <system-err>
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m

            </system-err>
        </testcase>
        <testcase classname="tests/renderer/components/ErrorBoundary.test.tsx" name="ComponentErrorBoundary &gt; should render component-specific error message" time="0.004195533">
            <system-out>
🚨 React Error Boundary: TestComponent

📤 Reported error to main process: error_1751690708133_h1uphgw0u

            </system-out>
            <system-err>
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m

            </system-err>
        </testcase>
        <testcase classname="tests/renderer/components/ErrorBoundary.test.tsx" name="ComponentErrorBoundary &gt; should use custom fallback when provided" time="0.004817229">
            <system-out>
🚨 React Error Boundary: TestComponent

📤 Reported error to main process: error_1751690708137_lj77ahwzt

            </system-out>
            <system-err>
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m

            </system-err>
        </testcase>
        <testcase classname="tests/renderer/components/ErrorBoundary.test.tsx" name="LazyErrorBoundary &gt; should render lazy component-specific error message" time="0.006665417">
            <system-out>
🚨 React Error Boundary: Lazy-LazyComponent

📤 Reported error to main process: error_1751690708142_5gy3diu3s

            </system-out>
            <system-err>
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m

            </system-err>
        </testcase>
        <testcase classname="tests/renderer/components/ErrorBoundary.test.tsx" name="Error boundary retry functionality &gt; should show retry button when error occurs" time="0.005120621">
            <system-out>
🚨 React Error Boundary: Test

📤 Reported error to main process: error_1751690708149_jlagu1bxl

            </system-out>
            <system-err>
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m

            </system-err>
        </testcase>
    </testsuite>
    <testsuite name="tests/renderer/components/SessionSidebar.test.tsx" timestamp="2025-07-05T04:45:08.531Z" hostname="DESKTOP-HR2BSFJ" tests="1" failures="0" errors="0" skipped="0" time="0.035504285">
        <testcase classname="tests/renderer/components/SessionSidebar.test.tsx" name="SessionSidebar &gt; creates a new chat when clicking + New Chat" time="0.033951955">
            <system-out>
SessionManager: No app storage found, checking for legacy chat history...
SessionManager: No legacy data found, creating default storage
SessionContext: Loading initial session data...
SessionContext: Loaded [33m0[39m sessions, current: [90mundefined[39m
SessionContext: Creating new session with options: {}
SessionManager: Created new session: session_1751690708057_45zsn196l
SessionContext: Created and switched to new session: session_1751690708057_45zsn196l

            </system-out>
        </testcase>
    </testsuite>
    <testsuite name="tests/main/llm/providers/OllamaProvider.test.ts" timestamp="2025-07-05T04:45:08.531Z" hostname="DESKTOP-HR2BSFJ" tests="45" failures="0" errors="0" skipped="0" time="0.028144319">
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Constructor &gt; should initialize with provided config" time="0.001281473">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Constructor &gt; should use default URL when none provided" time="0.000213464">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Connection Testing &gt; should test connection successfully" time="0.002016329">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Connection Testing &gt; should handle connection refused error" time="0.000342718">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Connection Testing &gt; should handle connection error with cause" time="0.000308444">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Connection Testing &gt; should handle HTTP errors" time="0.000432922">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Connection Testing &gt; should handle timeout errors" time="0.00048242">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Model Management &gt; should get available models successfully" time="0.001539895">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Model Management &gt; should handle empty model list" time="0.000470152">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Model Management &gt; should handle missing models property" time="0.000389336">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Model Management &gt; should handle connection error when getting models" time="0.001366192">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Model Management &gt; should handle HTTP error when getting models" time="0.000491747">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Model Management &gt; should format sizes correctly" time="0.000259169">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Message Sending &gt; should send message successfully" time="0.001291632">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Message Sending &gt; should send message with custom options" time="0.000556923">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Message Sending &gt; should send message with tools" time="0.000657727">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Message Sending &gt; should handle HTTP error when sending message" time="0.000317878">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Message Sending &gt; should handle network error when sending message" time="0.000373127">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Message Sending &gt; should handle finish reason based on done status" time="0.00020393">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Message Streaming &gt; should stream message successfully" time="0.001273854">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Message Streaming &gt; should handle streaming with custom options" time="0.000925901">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Message Streaming &gt; should handle HTTP error when streaming" time="0.000639485">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Message Streaming &gt; should handle missing response body when streaming" time="0.000487086">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Message Streaming &gt; should handle invalid JSON in streaming response" time="0.000824014">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Message Streaming &gt; should handle incomplete streaming data" time="0.001211695">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Message Streaming &gt; should release reader lock even on error" time="0.000688561">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Model Download &gt; should download model successfully" time="0.000848462">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Model Download &gt; should download model without progress callback" time="0.000432934">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Model Download &gt; should handle HTTP error when downloading" time="0.000336393">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Model Download &gt; should handle missing response body when downloading" time="0.000439544">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Model Download &gt; should handle invalid JSON in download response" time="0.000515699">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Model Download &gt; should release reader lock even on download error" time="0.000629539">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Model Deletion &gt; should delete model successfully" time="0.000737778">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Model Deletion &gt; should handle HTTP error when deleting model" time="0.0006858">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Model Deletion &gt; should handle network error when deleting model" time="0.000502153">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Message Formatting &gt; should format regular messages correctly" time="0.000265311">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Message Formatting &gt; should format tool response messages correctly" time="0.000228147">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Message Formatting &gt; should format messages with tool calls correctly" time="0.000202784">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Error Handling &gt; should handle timeout errors properly" time="0.000203722">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Error Handling &gt; should handle connection refused errors" time="0.000173545">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Error Handling &gt; should handle authentication errors" time="0.000194315">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Error Handling &gt; should handle rate limit errors" time="0.000172142">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Error Handling &gt; should handle server errors" time="0.000174874">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Error Handling &gt; should handle unknown errors" time="0.00013531">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Error Handling &gt; should handle non-Error objects" time="0.000158585">
        </testcase>
    </testsuite>
    <testsuite name="tests/main/llm/providers/OpenRouterProvider.test.ts" timestamp="2025-07-05T04:45:08.539Z" hostname="DESKTOP-HR2BSFJ" tests="46" failures="0" errors="0" skipped="0" time="0.035886774">
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Constructor &gt; should initialize with provided config" time="0.001322925">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Connection Testing &gt; should test connection successfully with valid API key" time="0.003503904">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Connection Testing &gt; should fail connection test without API key" time="0.001468222">
            <system-out>
Provider config updated: Test OpenRouter

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Connection Testing &gt; should handle HTTP errors during connection test" time="0.000188996">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Connection Testing &gt; should handle network errors during connection test" time="0.00116425">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Connection Testing &gt; should handle timeout during connection test" time="0.000463749">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Model Management &gt; should get available models successfully" time="0.001239364">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Model Management &gt; should handle models without description" time="0.000491066">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Model Management &gt; should handle error when API key is missing" time="0.002440358">
            <system-out>
Provider config updated: Test OpenRouter

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Model Management &gt; should handle HTTP error when getting models" time="0.00049162">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Model Management &gt; should handle network error when getting models" time="0.000401244">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Message Sending &gt; should send message successfully" time="0.001827555">
            <system-out>
OpenRouter: Response received: {
  hasContent: [33mtrue[39m,
  hasToolCalls: [33mfalse[39m,
  toolCallsCount: [33m0[39m,
  toolCalls: [90mundefined[39m,
  finishReason: [32m&apos;stop&apos;[39m
}

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Message Sending &gt; should send message with custom options" time="0.001115066">
            <system-out>
OpenRouter: Response received: {
  hasContent: [33mtrue[39m,
  hasToolCalls: [33mfalse[39m,
  toolCallsCount: [33m0[39m,
  toolCalls: [90mundefined[39m,
  finishReason: [32m&apos;stop&apos;[39m
}

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Message Sending &gt; should send message with tools" time="0.001258941">
            <system-out>
OpenRouter: Sending tools: { count: [33m1[39m, toolNames: [ [32m&apos;get_weather&apos;[39m ] }

OpenRouter: Response received: {
  hasContent: [33mtrue[39m,
  hasToolCalls: [33mtrue[39m,
  toolCallsCount: [33m1[39m,
  toolCalls: [ { id: [32m&apos;call_123&apos;[39m, type: [32m&apos;function&apos;[39m, function: [36m[Object][39m } ],
  finishReason: [32m&apos;tool_calls&apos;[39m
}

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Message Sending &gt; should handle missing API key" time="0.000543171">
            <system-out>
Provider config updated: Test OpenRouter

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Message Sending &gt; should handle HTTP error response" time="0.000452649">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Message Sending &gt; should handle missing choices in response" time="0.000505761">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Message Sending &gt; should handle response with empty content" time="0.000841477">
            <system-out>
OpenRouter: Response received: {
  hasContent: [33mfalse[39m,
  hasToolCalls: [33mfalse[39m,
  toolCallsCount: [33m0[39m,
  toolCalls: [90mundefined[39m,
  finishReason: [32m&apos;stop&apos;[39m
}

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Message Sending &gt; should handle network error" time="0.000474973">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Message Streaming &gt; should stream message successfully" time="0.001588892">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Message Streaming &gt; should handle streaming with custom options" time="0.000816121">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Message Streaming &gt; should handle missing API key during streaming" time="0.000966569">
            <system-out>
Provider config updated: Test OpenRouter

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Message Streaming &gt; should handle HTTP error during streaming" time="0.000676867">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Message Streaming &gt; should handle missing response body during streaming" time="0.001018706">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Message Streaming &gt; should handle invalid JSON in streaming response" time="0.001983282">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Message Streaming &gt; should handle incomplete streaming data" time="0.000796283">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Message Streaming &gt; should release reader lock even on error" time="0.000776732">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Model Info &gt; should get model info successfully" time="0.000559773">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Model Info &gt; should return null for non-existent model" time="0.000139773">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Model Info &gt; should handle missing API key" time="0.000519167">
            <system-out>
Provider config updated: Test OpenRouter

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Model Info &gt; should handle HTTP errors other than 404" time="0.000133306">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Model Info &gt; should handle network errors" time="0.000149964">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Credit Balance &gt; should get credit balance successfully" time="0.000579293">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Credit Balance &gt; should return null when no API key configured" time="0.000313034">
            <system-out>
Provider config updated: Test OpenRouter

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Credit Balance &gt; should return null on HTTP error" time="0.000159948">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Credit Balance &gt; should return null when credit_balance is missing" time="0.000162271">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Credit Balance &gt; should handle network errors" time="0.000195043">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Message Formatting &gt; should format regular messages correctly" time="0.000293007">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Message Formatting &gt; should format tool response messages correctly" time="0.000192958">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Message Formatting &gt; should format messages with tool calls correctly" time="0.000174623">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Error Handling &gt; should handle insufficient credits error" time="0.000154361">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Error Handling &gt; should handle rate limit error" time="0.000127574">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Error Handling &gt; should handle model validation error" time="0.000129589">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Error Handling &gt; should handle timeout errors" time="0.000130488">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Error Handling &gt; should handle timeout message errors" time="0.00023026">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Error Handling &gt; should fall back to base error handling" time="0.000136595">
        </testcase>
    </testsuite>
    <testsuite name="tests/renderer/components/MCP/McpIntegration.test.tsx" timestamp="2025-07-05T04:45:08.547Z" hostname="DESKTOP-HR2BSFJ" tests="27" failures="0" errors="0" skipped="0" time="0.397397818">
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Initial Rendering and Loading &gt; renders without crashing" time="0.032237096">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Initial Rendering and Loading &gt; shows loading state initially" time="0.00366015">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Initial Rendering and Loading &gt; loads and displays servers successfully" time="0.017884323">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Initial Rendering and Loading &gt; displays empty state when no servers configured" time="0.041608391">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Initial Rendering and Loading &gt; displays error state when loading fails" time="0.008558231">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Initial Rendering and Loading &gt; handles network errors during loading" time="0.004434239">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Server Display and Status &gt; displays server status badges correctly" time="0.015181054">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Server Display and Status &gt; displays transport information correctly" time="0.011974924">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Server Display and Status &gt; displays status icons correctly" time="0.011966998">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Server Management Actions &gt; toggles server enabled state successfully" time="0.021783404">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Server Management Actions &gt; handles server toggle errors" time="0.01641069">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Server Management Actions &gt; removes server with confirmation" time="0.018373443">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Server Management Actions &gt; cancels server removal when user declines confirmation" time="0.014244967">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Server Management Actions &gt; handles server removal errors" time="0.01670023">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Server Wizard Integration &gt; opens server wizard when add server button is clicked" time="0.035735896">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Server Wizard Integration &gt; opens wizard from empty state" time="0.020237026">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Server Wizard Integration &gt; refreshes server list when server is added via wizard" time="0.020174018">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Error Handling and Edge Cases &gt; handles undefined server data gracefully" time="0.00280639">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Error Handling and Edge Cases &gt; handles malformed server data" time="0.003193014">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Error Handling and Edge Cases &gt; retries loading on initial failure with user action" time="0.004877884">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Error Handling and Edge Cases &gt; handles rapid server state changes" time="0.022088004">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Accessibility and UX &gt; has proper ARIA labels and roles" time="0.011225281">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Accessibility and UX &gt; supports keyboard navigation" time="0.008692141">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Accessibility and UX &gt; provides clear loading states" time="0.009155743">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Accessibility and UX &gt; provides clear error messages" time="0.007966226">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Integration with Settings &gt; calls onSettingsUpdate when servers change" time="0.008685009">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Integration with Settings &gt; reloads servers when settings prop changes" time="0.004983154">
        </testcase>
    </testsuite>
    <testsuite name="tests/renderer/components/MCP/McpServerWizard.test.tsx" timestamp="2025-07-05T04:45:08.551Z" hostname="DESKTOP-HR2BSFJ" tests="13" failures="0" errors="0" skipped="0" time="0.265110964">
        <testcase classname="tests/renderer/components/MCP/McpServerWizard.test.tsx" name="McpServerWizard &gt; Basic Rendering &gt; renders without crashing when open" time="0.03847859">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpServerWizard.test.tsx" name="McpServerWizard &gt; Basic Rendering &gt; does not render when closed" time="0.001034654">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpServerWizard.test.tsx" name="McpServerWizard &gt; Basic Rendering &gt; displays wizard steps" time="0.018496257">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpServerWizard.test.tsx" name="McpServerWizard &gt; Form Validation &gt; validates server name is required" time="0.046689294">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpServerWizard.test.tsx" name="McpServerWizard &gt; Form Validation &gt; validates command for STDIO transport" time="0.064211684">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpServerWizard.test.tsx" name="McpServerWizard &gt; Connection Testing &gt; tests connection successfully" time="0.015580936">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpServerWizard.test.tsx" name="McpServerWizard &gt; Connection Testing &gt; handles connection test failure" time="0.00718991">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpServerWizard.test.tsx" name="McpServerWizard &gt; Server Creation &gt; creates server successfully" time="0.008776828">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpServerWizard.test.tsx" name="McpServerWizard &gt; Server Creation &gt; handles server creation error" time="0.014598253">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpServerWizard.test.tsx" name="McpServerWizard &gt; User Interactions &gt; closes when close button is clicked" time="0.013088851">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpServerWizard.test.tsx" name="McpServerWizard &gt; User Interactions &gt; calls onServerAdded when server is created" time="0.021805533">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpServerWizard.test.tsx" name="McpServerWizard &gt; Accessibility &gt; has proper ARIA labels" time="0.006656871">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpServerWizard.test.tsx" name="McpServerWizard &gt; Accessibility &gt; supports keyboard navigation" time="0.006435775">
        </testcase>
    </testsuite>
</testsuites>
