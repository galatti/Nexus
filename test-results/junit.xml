<?xml version="1.0" encoding="UTF-8" ?>
<testsuites name="vitest tests" tests="371" failures="0" errors="0" time="1.048337222">
    <testsuite name="tests/integration/main-ipc.test.ts" timestamp="2025-07-05T13:18:14.491Z" hostname="DESKTOP-HR2BSFJ" tests="31" failures="0" errors="0" skipped="0" time="0.015411681">
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; Settings IPC Handlers &gt; should handle settings:get" time="0.001677535">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; Settings IPC Handlers &gt; should handle settings:update" time="0.000473602">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; Settings IPC Handlers &gt; should handle settings:reset" time="0.000260984">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; Settings IPC Handlers &gt; should handle settings:export" time="0.00050111">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; Settings IPC Handlers &gt; should handle settings:import" time="0.000545023">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; Settings IPC Handlers &gt; should handle invalid JSON in settings:import" time="0.00055162">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; LLM Provider IPC Handlers &gt; should handle llm:test-provider with healthy provider" time="0.000351876">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; LLM Provider IPC Handlers &gt; should handle llm:test-provider with unhealthy provider" time="0.000221891">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; LLM Provider IPC Handlers &gt; should handle llm:test-provider with missing provider" time="0.000228388">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; LLM Provider IPC Handlers &gt; should handle llm:get-models successfully" time="0.000453708">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; LLM Provider IPC Handlers &gt; should handle llm:get-models with error" time="0.000674939">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; LLM Provider IPC Handlers &gt; should handle llm:send-message successfully" time="0.000374503">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; LLM Provider IPC Handlers &gt; should handle llm:send-message with error" time="0.000319299">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; LLM Provider IPC Handlers &gt; should handle llm:get-status successfully" time="0.000335279">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; MCP Server IPC Handlers &gt; should handle mcp:add-server successfully" time="0.001029475">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; MCP Server IPC Handlers &gt; should handle mcp:add-server with error" time="0.000298459">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; MCP Server IPC Handlers &gt; should handle mcp:remove-server successfully" time="0.000347139">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; MCP Server IPC Handlers &gt; should handle mcp:update-server successfully" time="0.000445293">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; MCP Server IPC Handlers &gt; should handle mcp:get-servers successfully" time="0.00024774">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; Permission IPC Handlers &gt; should handle permissions:get-pending" time="0.000267196">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; Permission IPC Handlers &gt; should handle permissions:respond successfully" time="0.000293146">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; Permission IPC Handlers &gt; should handle permissions:respond with failure" time="0.000163847">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; Permission IPC Handlers &gt; should handle permissions:get-all" time="0.000228414">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; Permission IPC Handlers &gt; should handle permissions:revoke successfully" time="0.000378975">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; Permission IPC Handlers &gt; should handle permissions:clear-session" time="0.00044619">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; Permission IPC Handlers &gt; should handle permissions:update-settings" time="0.000311145">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; Permission IPC Handlers &gt; should handle permissions:get-settings" time="0.00022492">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; Error Handling &gt; should handle unexpected errors in handlers" time="0.00034424">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; Error Handling &gt; should handle non-Error objects thrown" time="0.000202758">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; Cross-Module Integration &gt; should handle full workflow: add provider, test, and send message" time="0.000454739">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; Cross-Module Integration &gt; should handle MCP server and permissions workflow" time="0.000697291">
        </testcase>
    </testsuite>
    <testsuite name="tests/integration/mcp-integration.test.ts" timestamp="2025-07-05T13:18:14.498Z" hostname="DESKTOP-HR2BSFJ" tests="7" failures="0" errors="0" skipped="0" time="0.045670948">
        <testcase classname="tests/integration/mcp-integration.test.ts" name="MCP Integration Tests &gt; Complete Server Lifecycle &gt; should handle complete server lifecycle from creation to destruction" time="0.016402164">
            <system-out>
🔍 Race condition check for startServer on integration-test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mfalse[39m,
  currentState: [1mnull[22m,
  totalServers: [33m0[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server integration-test-server

🚀 Starting MCP server: Integration Test Server (integration-test-server)

MCP server ready: Integration Test Server {
  tools: [
    {
      name: [32m&apos;test-tool&apos;[39m,
      description: [32m&apos;A test tool&apos;[39m,
      inputSchema: [36m[Object][39m
    }
  ]
}

Discovered tools for integration-test-server: [33m1[39m [ [32m&apos;test-tool&apos;[39m ]

Discovered resources for integration-test-server: [33m1[39m

Discovered prompts for integration-test-server: [33m1[39m

✅ Successfully started MCP server: Integration Test Server
🔓 Released operation lock for server integration-test-server

Executing tool test-tool on server integration-test-server { args: { testParam: [32m&apos;value&apos;[39m } }

Tool execution completed for test-tool { result: { result: [32m&apos;Tool executed successfully&apos;[39m } }

Reading resource file://test.txt from server integration-test-server

Resource read completed for file://test.txt

Executing prompt test-prompt on server integration-test-server { args: { context: [32m&apos;test&apos;[39m } }

Prompt execution completed for test-prompt

Subscribed to resource file://test.txt on integration-test-server

🔍 Race condition check for stopServer on integration-test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server integration-test-server

🛑 Stopping MCP server: Integration Test Server (integration-test-server)

✅ Successfully stopped MCP server: Integration Test Server
🔓 Released operation lock for server integration-test-server

            </system-out>
        </testcase>
        <testcase classname="tests/integration/mcp-integration.test.ts" name="MCP Integration Tests &gt; Complete Server Lifecycle &gt; should handle server failure and recovery" time="0.005545381">
            <system-out>
🔍 Race condition check for startServer on integration-test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mfalse[39m,
  currentState: [1mnull[22m,
  totalServers: [33m0[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server integration-test-server

🚀 Starting MCP server: Integration Test Server (integration-test-server)

🔓 Released operation lock for server integration-test-server

🔍 Race condition check for stopServer on integration-test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;failed&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server integration-test-server

🛑 Stopping MCP server: Integration Test Server (integration-test-server)
✅ Successfully stopped MCP server: Integration Test Server
🔓 Released operation lock for server integration-test-server

🔍 Race condition check for startServer on integration-test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mfalse[39m,
  currentState: [1mnull[22m,
  totalServers: [33m0[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server integration-test-server

🚀 Starting MCP server: Integration Test Server (integration-test-server)

MCP server ready: Integration Test Server {
  tools: [
    {
      name: [32m&apos;test-tool&apos;[39m,
      description: [32m&apos;A test tool&apos;[39m,
      inputSchema: [36m[Object][39m
    }
  ]
}

Discovered tools for integration-test-server: [33m1[39m [ [32m&apos;test-tool&apos;[39m ]

Discovered resources for integration-test-server: [33m1[39m

Discovered prompts for integration-test-server: [33m1[39m

✅ Successfully started MCP server: Integration Test Server
🔓 Released operation lock for server integration-test-server

🔍 Race condition check for stopServer on integration-test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server integration-test-server

🛑 Stopping MCP server: Integration Test Server (integration-test-server)

✅ Successfully stopped MCP server: Integration Test Server
🔓 Released operation lock for server integration-test-server

            </system-out>
        </testcase>
        <testcase classname="tests/integration/mcp-integration.test.ts" name="MCP Integration Tests &gt; Error Handling and Edge Cases &gt; should handle tool execution errors gracefully" time="0.004460775">
            <system-out>
🔍 Race condition check for startServer on integration-test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mfalse[39m,
  currentState: [1mnull[22m,
  totalServers: [33m0[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server integration-test-server

🚀 Starting MCP server: Integration Test Server (integration-test-server)

MCP server ready: Integration Test Server {
  tools: [
    {
      name: [32m&apos;test-tool&apos;[39m,
      description: [32m&apos;A test tool&apos;[39m,
      inputSchema: [36m[Object][39m
    }
  ]
}

Discovered tools for integration-test-server: [33m1[39m [ [32m&apos;test-tool&apos;[39m ]

Discovered resources for integration-test-server: [33m1[39m

Discovered prompts for integration-test-server: [33m1[39m

✅ Successfully started MCP server: Integration Test Server
🔓 Released operation lock for server integration-test-server

Executing tool test-tool on server integration-test-server { args: {} }

🔍 Race condition check for stopServer on integration-test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server integration-test-server

🛑 Stopping MCP server: Integration Test Server (integration-test-server)

✅ Successfully stopped MCP server: Integration Test Server
🔓 Released operation lock for server integration-test-server

            </system-out>
        </testcase>
        <testcase classname="tests/integration/mcp-integration.test.ts" name="MCP Integration Tests &gt; Error Handling and Edge Cases &gt; should handle resource reading errors" time="0.004077312">
            <system-out>
🔍 Race condition check for startServer on integration-test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mfalse[39m,
  currentState: [1mnull[22m,
  totalServers: [33m0[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server integration-test-server

🚀 Starting MCP server: Integration Test Server (integration-test-server)

MCP server ready: Integration Test Server {
  tools: [
    {
      name: [32m&apos;test-tool&apos;[39m,
      description: [32m&apos;A test tool&apos;[39m,
      inputSchema: [36m[Object][39m
    }
  ]
}

Discovered tools for integration-test-server: [33m1[39m [ [32m&apos;test-tool&apos;[39m ]

Discovered resources for integration-test-server: [33m1[39m

Discovered prompts for integration-test-server: [33m1[39m

✅ Successfully started MCP server: Integration Test Server
🔓 Released operation lock for server integration-test-server

Reading resource file://nonexistent.txt from server integration-test-server

🔍 Race condition check for stopServer on integration-test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server integration-test-server

🛑 Stopping MCP server: Integration Test Server (integration-test-server)

✅ Successfully stopped MCP server: Integration Test Server
🔓 Released operation lock for server integration-test-server

            </system-out>
        </testcase>
        <testcase classname="tests/integration/mcp-integration.test.ts" name="MCP Integration Tests &gt; Error Handling and Edge Cases &gt; should handle server process crashes" time="0.003711567">
            <system-out>
🔍 Race condition check for startServer on integration-test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mfalse[39m,
  currentState: [1mnull[22m,
  totalServers: [33m0[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server integration-test-server

🚀 Starting MCP server: Integration Test Server (integration-test-server)

MCP server ready: Integration Test Server {
  tools: [
    {
      name: [32m&apos;test-tool&apos;[39m,
      description: [32m&apos;A test tool&apos;[39m,
      inputSchema: [36m[Object][39m
    }
  ]
}

Discovered tools for integration-test-server: [33m1[39m [ [32m&apos;test-tool&apos;[39m ]

Discovered resources for integration-test-server: [33m1[39m

Discovered prompts for integration-test-server: [33m1[39m

✅ Successfully started MCP server: Integration Test Server
🔓 Released operation lock for server integration-test-server

🔍 Race condition check for stopServer on integration-test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server integration-test-server

🛑 Stopping MCP server: Integration Test Server (integration-test-server)

✅ Successfully stopped MCP server: Integration Test Server
🔓 Released operation lock for server integration-test-server

            </system-out>
        </testcase>
        <testcase classname="tests/integration/mcp-integration.test.ts" name="MCP Integration Tests &gt; Resource Subscription Management &gt; should handle resource subscription lifecycle" time="0.004030454">
            <system-out>
🔍 Race condition check for startServer on integration-test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mfalse[39m,
  currentState: [1mnull[22m,
  totalServers: [33m0[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server integration-test-server

🚀 Starting MCP server: Integration Test Server (integration-test-server)

MCP server ready: Integration Test Server {
  tools: [
    {
      name: [32m&apos;test-tool&apos;[39m,
      description: [32m&apos;A test tool&apos;[39m,
      inputSchema: [36m[Object][39m
    }
  ]
}

Discovered tools for integration-test-server: [33m1[39m [ [32m&apos;test-tool&apos;[39m ]

Discovered resources for integration-test-server: [33m1[39m

Discovered prompts for integration-test-server: [33m1[39m

✅ Successfully started MCP server: Integration Test Server
🔓 Released operation lock for server integration-test-server

Subscribed to resource file://dynamic-resource.txt on integration-test-server

Unsubscribed from resource file://dynamic-resource.txt on integration-test-server

🔍 Race condition check for stopServer on integration-test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server integration-test-server

🛑 Stopping MCP server: Integration Test Server (integration-test-server)

✅ Successfully stopped MCP server: Integration Test Server
🔓 Released operation lock for server integration-test-server

            </system-out>
        </testcase>
        <testcase classname="tests/integration/mcp-integration.test.ts" name="MCP Integration Tests &gt; Performance and Concurrency &gt; should handle concurrent tool executions" time="0.005841634">
            <system-out>
🔍 Race condition check for startServer on integration-test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mfalse[39m,
  currentState: [1mnull[22m,
  totalServers: [33m0[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server integration-test-server

🚀 Starting MCP server: Integration Test Server (integration-test-server)

MCP server ready: Integration Test Server {
  tools: [
    {
      name: [32m&apos;test-tool&apos;[39m,
      description: [32m&apos;A test tool&apos;[39m,
      inputSchema: [36m[Object][39m
    }
  ]
}

Discovered tools for integration-test-server: [33m1[39m [ [32m&apos;test-tool&apos;[39m ]

Discovered resources for integration-test-server: [33m1[39m

Discovered prompts for integration-test-server: [33m1[39m

✅ Successfully started MCP server: Integration Test Server
🔓 Released operation lock for server integration-test-server

Executing tool test-tool on server integration-test-server { args: { index: [33m0[39m } }

Tool execution completed for test-tool { result: { result: [32m&apos;Tool executed successfully&apos;[39m } }

Executing tool test-tool on server integration-test-server { args: { index: [33m1[39m } }

Tool execution completed for test-tool { result: { result: [32m&apos;Tool executed successfully&apos;[39m } }

Executing tool test-tool on server integration-test-server { args: { index: [33m2[39m } }

Tool execution completed for test-tool { result: { result: [32m&apos;Tool executed successfully&apos;[39m } }

🔍 Race condition check for stopServer on integration-test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server integration-test-server

🛑 Stopping MCP server: Integration Test Server (integration-test-server)

✅ Successfully stopped MCP server: Integration Test Server
🔓 Released operation lock for server integration-test-server

            </system-out>
        </testcase>
    </testsuite>
    <testsuite name="tests/utils/SessionManager.test.ts" timestamp="2025-07-05T13:18:14.507Z" hostname="DESKTOP-HR2BSFJ" tests="4" failures="0" errors="0" skipped="0" time="0.010054981">
        <testcase classname="tests/utils/SessionManager.test.ts" name="SessionManager basics &gt; creates a new session and sets it as current" time="0.001920267">
            <system-out>
SessionManager: No app storage found, checking for legacy chat history...
SessionManager: No legacy data found, creating default storage
SessionManager: Cleared all sessions

SessionManager: Created new session: session_1751721493936_mku3ltjlq

            </system-out>
        </testcase>
        <testcase classname="tests/utils/SessionManager.test.ts" name="SessionManager basics &gt; renames an existing session" time="0.000800243">
            <system-out>
SessionManager: Cleared all sessions

SessionManager: Created new session: session_1751721493937_ias5gr151
SessionManager: Updated session: session_1751721493937_ias5gr151

            </system-out>
        </testcase>
        <testcase classname="tests/utils/SessionManager.test.ts" name="SessionManager basics &gt; prunes old sessions beyond max cap" time="0.005660259">
            <system-out>
SessionManager: Cleared all sessions

SessionManager: Created new session: session_1751721493938_rg6uubne0
SessionManager: Created new session: session_1751721493938_tum3b5qgs
SessionManager: Created new session: session_1751721493938_8ln28roze
SessionManager: Created new session: session_1751721493938_rq091shlf
SessionManager: Created new session: session_1751721493938_bntqlsdg6
SessionManager: Created new session: session_1751721493938_uah614v63
SessionManager: Created new session: session_1751721493938_2rjf7ta35
SessionManager: Created new session: session_1751721493938_ujul3rg3g
SessionManager: Created new session: session_1751721493939_tonv459b4
SessionManager: Created new session: session_1751721493939_zqt3jzk3v
SessionManager: Deleted session: session_1751721493938_rg6uubne0
SessionManager: Deleted session: session_1751721493938_tum3b5qgs
SessionManager: Deleted session: session_1751721493938_8ln28roze
SessionManager: Deleted session: session_1751721493938_rq091shlf
SessionManager: Deleted session: session_1751721493938_bntqlsdg6

            </system-out>
        </testcase>
        <testcase classname="tests/utils/SessionManager.test.ts" name="SessionManager basics &gt; clears all sessions" time="0.00085279">
            <system-out>
SessionManager: Cleared all sessions

SessionManager: Created new session: session_1751721493944_4omoi1buc
SessionManager: Created new session: session_1751721493944_hmn705m4p
SessionManager: Created new session: session_1751721493944_mgrexxpne
SessionManager: Cleared all sessions

            </system-out>
        </testcase>
    </testsuite>
    <testsuite name="tests/main/config/ConfigManager.test.ts" timestamp="2025-07-05T13:18:14.511Z" hostname="DESKTOP-HR2BSFJ" tests="38" failures="0" errors="0" skipped="0" time="0.018924901">
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Constructor and Initialization &gt; should initialize with default settings when no config file exists" time="0.003523865">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Constructor and Initialization &gt; should load existing configuration when config file exists" time="0.000715455">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Constructor and Initialization &gt; should handle config file read errors gracefully" time="0.000303164">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Constructor and Initialization &gt; should handle invalid JSON gracefully" time="0.000213885">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Constructor and Initialization &gt; should use fallback path when userData path fails" time="0.000789461">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Settings Management &gt; should update general settings" time="0.000429502">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Settings Management &gt; should update LLM providers" time="0.000262986">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Settings Management &gt; should update MCP servers" time="0.000275979">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Settings Management &gt; should handle update errors" time="0.00119467">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Settings Management &gt; should return deep copy of settings" time="0.000716097">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Provider Management &gt; should add LLM provider" time="0.00037382">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Provider Management &gt; should update LLM provider by ID" time="0.000262729">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Provider Management &gt; should remove LLM provider" time="0.000342652">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Provider Management &gt; should clear default provider when removing it" time="0.000523984">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Provider Management &gt; should find best default provider model" time="0.000302824">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Provider Management &gt; should return undefined when no enabled provider with model exists" time="0.000197444">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Provider Management &gt; should set and get default provider model" time="0.00027851">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; MCP Server Management &gt; should add MCP server" time="0.000517161">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; MCP Server Management &gt; should update existing MCP server when adding with same ID" time="0.000328719">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; MCP Server Management &gt; should remove MCP server" time="0.000340292">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; MCP Server Management &gt; should handle removing non-existent MCP server" time="0.000130541">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; MCP Server Management &gt; should update MCP server" time="0.000183352">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; MCP Server Management &gt; should throw error when updating non-existent MCP server" time="0.000188067">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Settings Validation &gt; should validate valid settings" time="0.000203602">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Settings Validation &gt; should reject invalid theme" time="0.00014743">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Settings Validation &gt; should reject invalid provider type" time="0.000119047">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Settings Validation &gt; should reject invalid MCP server structure" time="0.000098316">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Settings Validation &gt; should reject non-object settings" time="0.000346776">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Import/Export &gt; should export settings as JSON string" time="0.00045686">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Import/Export &gt; should import valid settings" time="0.000515861">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Import/Export &gt; should reject invalid JSON during import" time="0.000312974">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Import/Export &gt; should reject invalid settings during import" time="0.000290385">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Provider Deduplication &gt; should deduplicate providers by type" time="0.00047165">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Provider Deduplication &gt; should ensure required default providers exist" time="0.000294377">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Reset to Defaults &gt; should reset all settings to defaults" time="0.000352767">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Migration and Merging &gt; should merge partial user settings with defaults" time="0.000490673">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Migration and Merging &gt; should handle migration of LLM settings" time="0.000341911">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Migration and Merging &gt; should use defaults when LLM providers are invalid" time="0.000335368">
        </testcase>
    </testsuite>
    <testsuite name="tests/main/llm/LlmManager.test.ts" timestamp="2025-07-05T13:18:14.518Z" hostname="DESKTOP-HR2BSFJ" tests="49" failures="0" errors="0" skipped="0" time="0.041575043">
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Initialization &gt; should initialize successfully" time="0.003428949">
            <system-out>
Initializing LLM Manager
LLM Manager initialized successfully

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Initialization &gt; should set max listeners to 50" time="0.000605072">
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Provider Management &gt; should add Ollama provider" time="0.00132933">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Provider Management &gt; should add OpenRouter provider" time="0.000588632">
            <system-out>
LLM provider added: Test Provider (openrouter)

Health check for test-provider: unhealthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Provider Management &gt; should reject unsupported provider type" time="0.002813569">
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Provider Management &gt; should remove provider" time="0.002260777">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

LLM provider removed: test-provider

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Provider Management &gt; should handle removing non-existent provider" time="0.000460975">
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Provider Management &gt; should update provider config" time="0.002671544">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

LLM provider updated: test-provider

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Provider Management &gt; should throw error when updating non-existent provider" time="0.000784651">
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Provider Management &gt; should check health when provider is enabled" time="0.000720626">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

LLM provider updated: test-provider

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Provider Management &gt; should mark as unhealthy when provider is disabled" time="0.000392962">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

LLM provider updated: test-provider

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Provider Management &gt; should get all providers" time="0.000281553">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Provider Management &gt; should emit events for provider operations" time="0.003739999">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

LLM provider updated: test-provider

LLM provider removed: test-provider

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Health Management &gt; should check provider health" time="0.000650737">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Health Management &gt; should return false for non-existent provider health check" time="0.000578093">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Health Management &gt; should handle health check failures" time="0.002314531">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Health Management &gt; should implement exponential backoff for retries" time="0.00171168">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

Health check for test-provider: unhealthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Health Management &gt; should reset retry count on successful health check" time="0.000411799">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

Health check for test-provider: unhealthy

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Health Management &gt; should check all providers health" time="0.000512052">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

LLM provider added: Test Provider (openrouter)

Health check for openrouter-provider: healthy

Health check for test-provider: healthy
Health check for openrouter-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Health Management &gt; should skip health check for disabled providers" time="0.000224108">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Health Management &gt; should skip health check if retry time not reached" time="0.000322684">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Health Management &gt; should get all provider health" time="0.000261711">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Health Management &gt; should emit health change events" time="0.000672735">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Message Processing &gt; should send message successfully" time="0.001587999">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Message Processing &gt; should merge provider config with options" time="0.000855486">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Message Processing &gt; should throw error for non-existent provider" time="0.000493518">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Message Processing &gt; should throw error for disabled provider" time="0.000407014">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Message Processing &gt; should attempt recovery for unhealthy provider" time="0.000327863">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Message Processing &gt; should throw error if recovery fails" time="0.00036479">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

Health check for test-provider: unhealthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Message Processing &gt; should handle message processing errors" time="0.000432091">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Message Processing &gt; should emit events for message processing" time="0.000768666">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Message Processing &gt; should reset retry count on successful message" time="0.000276414">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Model Management &gt; should get available models" time="0.000640794">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Model Management &gt; should return empty array for non-existent provider" time="0.000319549">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Model Management &gt; should handle model fetching errors" time="0.000332268">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Status and Validation &gt; should get status with enabled providers" time="0.000588607">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

[LlmManager] getStatus: Gathering status for providers...
  → Provider test-provider: name=&quot;Test Provider&quot; type=ollama enabled=true
[LlmManager] getStatus: Processing enabled provider test-provider

    • test-provider health=true models=1
[LlmManager] getStatus: Returning 1 enabled providers

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Status and Validation &gt; should exclude disabled providers from status" time="0.000376829">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

[LlmManager] getStatus: Gathering status for providers...
  → Provider test-provider: name=&quot;Test Provider&quot; type=ollama enabled=false
[LlmManager] getStatus: Returning 0 enabled providers

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Status and Validation &gt; should validate provider model - valid case" time="0.000249298">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Status and Validation &gt; should validate provider model - removed provider" time="0.000263352">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Status and Validation &gt; should validate provider model - disabled provider" time="0.000179397">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Status and Validation &gt; should validate provider model - unhealthy provider" time="0.000161279">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Shutdown &gt; should shutdown cleanly" time="0.000265872">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

Shutting down LLM Manager
LLM Manager shutdown complete

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Shutdown &gt; should remove all listeners on shutdown" time="0.000163237">
            <system-out>
Shutting down LLM Manager
LLM Manager shutdown complete

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Provider ID Generation &gt; should use provided ID" time="0.000120927">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for custom-id: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Provider ID Generation &gt; should generate ID from type and name when not provided" time="0.000203093">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for ollama-test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Provider ID Generation &gt; should handle names with spaces and special characters" time="0.000164489">
            <system-out>
LLM provider added: Test Provider With Spaces (ollama)

Health check for ollama-test-provider-with-spaces: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Edge Cases &gt; should handle multiple providers of same type" time="0.000285815">
            <system-out>
LLM provider added: Ollama 1 (ollama)

Health check for ollama-1: healthy

LLM provider added: Ollama 2 (ollama)

Health check for ollama-2: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Edge Cases &gt; should handle provider config updates with undefined values" time="0.00075633">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

LLM provider updated: test-provider

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Edge Cases &gt; should handle health check with no initial health status" time="0.00051432">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
    </testsuite>
    <testsuite name="tests/main/security/SecureStorage.test.ts" timestamp="2025-07-05T13:18:14.535Z" hostname="DESKTOP-HR2BSFJ" tests="22" failures="0" errors="0" skipped="0" time="0.01128218">
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; Initialization &gt; should create singleton instance" time="0.000804078">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; Initialization &gt; should check encryption availability" time="0.000581908">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; Initialization &gt; should handle encryption not available" time="0.000212288">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; Encryption and Decryption &gt; should encrypt string successfully" time="0.001105004">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; Encryption and Decryption &gt; should decrypt string successfully" time="0.001051204">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; Encryption and Decryption &gt; should return plain text when encryption is not available" time="0.000277046">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; Encryption and Decryption &gt; should return plain text when decrypting non-encrypted data" time="0.000149904">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; Encryption and Decryption &gt; should handle encryption errors gracefully" time="0.000256529">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; Encryption and Decryption &gt; should handle decryption errors gracefully" time="0.000397566">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; API Key Management Methods &gt; should migrate plain text to encrypted format" time="0.000265993">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; API Key Management Methods &gt; should return original value if already encrypted" time="0.000442321">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; API Key Management Methods &gt; should get plain text value from encrypted storage" time="0.002148634">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; API Key Management Methods &gt; should return plain text value as-is" time="0.000128586">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; API Key Management Methods &gt; should return empty string for empty input" time="0.000054251">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; API Key Management Methods &gt; should detect encrypted values correctly" time="0.000090687">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; Validation &gt; should validate encryption successfully" time="0.000143796">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; Validation &gt; should fail validation when encryption is not available" time="0.000072062">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; Validation &gt; should fail validation on encryption error" time="0.000091942">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; Validation &gt; should fail validation on data mismatch" time="0.000067479">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; Edge Cases &gt; should handle empty strings in getPlainTextValue" time="0.000068561">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; Edge Cases &gt; should handle decryption failure gracefully in getPlainTextValue" time="0.000081821">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; Edge Cases &gt; should return plain text on failed encryption during migration" time="0.000067972">
        </testcase>
    </testsuite>
    <testsuite name="tests/renderer/components/ErrorBoundary.test.tsx" timestamp="2025-07-05T13:18:14.538Z" hostname="DESKTOP-HR2BSFJ" tests="13" failures="0" errors="0" skipped="0" time="0.109786036">
        <testcase classname="tests/renderer/components/ErrorBoundary.test.tsx" name="ErrorBoundary &gt; should render children when there is no error" time="0.01758708">
        </testcase>
        <testcase classname="tests/renderer/components/ErrorBoundary.test.tsx" name="ErrorBoundary &gt; should catch errors and display error UI" time="0.023348319">
            <system-out>
🚨 React Error Boundary: Test

📤 Reported error to main process: error_1751721494197_rt9wxvz4a

            </system-out>
            <system-err>
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m

            </system-err>
        </testcase>
        <testcase classname="tests/renderer/components/ErrorBoundary.test.tsx" name="ErrorBoundary &gt; should display custom fallback when provided" time="0.005622639">
            <system-out>
🚨 React Error Boundary: Test

📤 Reported error to main process: error_1751721494208_6oeree9it

            </system-out>
            <system-err>
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m

            </system-err>
        </testcase>
        <testcase classname="tests/renderer/components/ErrorBoundary.test.tsx" name="ErrorBoundary &gt; should call onError callback when provided" time="0.010225377">
            <system-out>
🚨 React Error Boundary: Test

📤 Reported error to main process: error_1751721494216_ekfpgsbip

            </system-out>
            <system-err>
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m

            </system-err>
        </testcase>
        <testcase classname="tests/renderer/components/ErrorBoundary.test.tsx" name="ErrorBoundary &gt; should generate unique error ID" time="0.008809485">
            <system-out>
🚨 React Error Boundary: Test1
🚨 React Error Boundary: Test2
📤 Reported error to main process: error_1751721494225_93d9mzpcz
📤 Reported error to main process: error_1751721494226_uq7hlh070

            </system-out>
            <system-err>
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m

            </system-err>
        </testcase>
        <testcase classname="tests/renderer/components/ErrorBoundary.test.tsx" name="ErrorBoundary &gt; should report error to main process" time="0.006220239">
            <system-out>
🚨 React Error Boundary: Test

📤 Reported error to main process: error_1751721494233_9ccoavoem

            </system-out>
            <system-err>
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m

            </system-err>
        </testcase>
        <testcase classname="tests/renderer/components/ErrorBoundary.test.tsx" name="ErrorBoundary &gt; should handle error reporting failure gracefully" time="0.005193549">
            <system-out>
🚨 React Error Boundary: Test

            </system-out>
            <system-err>
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m

            </system-err>
        </testcase>
        <testcase classname="tests/renderer/components/ErrorBoundary.test.tsx" name="ErrorBoundary &gt; should show debug information in development" time="0.006315773">
            <system-out>
🚨 React Error Boundary: Test

📤 Reported error to main process: error_1751721494244_dfxnjqwen

            </system-out>
            <system-err>
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m

            </system-err>
        </testcase>
        <testcase classname="tests/renderer/components/ErrorBoundary.test.tsx" name="ErrorBoundary &gt; should hide debug information in production" time="0.004234955">
            <system-out>
🚨 React Error Boundary: Test

📤 Reported error to main process: error_1751721494250_k0iautgmr

            </system-out>
            <system-err>
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m

            </system-err>
        </testcase>
        <testcase classname="tests/renderer/components/ErrorBoundary.test.tsx" name="ComponentErrorBoundary &gt; should render component-specific error message" time="0.002949841">
            <system-out>
🚨 React Error Boundary: TestComponent

📤 Reported error to main process: error_1751721494254_es5dcxwst

            </system-out>
            <system-err>
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m

            </system-err>
        </testcase>
        <testcase classname="tests/renderer/components/ErrorBoundary.test.tsx" name="ComponentErrorBoundary &gt; should use custom fallback when provided" time="0.007846871">
            <system-out>
🚨 React Error Boundary: TestComponent

📤 Reported error to main process: error_1751721494257_j5urorf7s

            </system-out>
            <system-err>
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m

            </system-err>
        </testcase>
        <testcase classname="tests/renderer/components/ErrorBoundary.test.tsx" name="LazyErrorBoundary &gt; should render lazy component-specific error message" time="0.004084937">
            <system-out>
🚨 React Error Boundary: Lazy-LazyComponent

📤 Reported error to main process: error_1751721494265_r4lr53hoi

            </system-out>
            <system-err>
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m

            </system-err>
        </testcase>
        <testcase classname="tests/renderer/components/ErrorBoundary.test.tsx" name="Error boundary retry functionality &gt; should show retry button when error occurs" time="0.005588081">
            <system-out>
🚨 React Error Boundary: Test

📤 Reported error to main process: error_1751721494269_atxwoulse

            </system-out>
            <system-err>
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m

            </system-err>
        </testcase>
    </testsuite>
    <testsuite name="tests/renderer/components/SessionSidebar.test.tsx" timestamp="2025-07-05T13:18:14.545Z" hostname="DESKTOP-HR2BSFJ" tests="1" failures="0" errors="0" skipped="0" time="0.030245627">
        <testcase classname="tests/renderer/components/SessionSidebar.test.tsx" name="SessionSidebar &gt; creates a new chat when clicking + New Chat" time="0.028996624">
            <system-out>
SessionManager: No app storage found, checking for legacy chat history...
SessionManager: No legacy data found, creating default storage
SessionContext: Loading initial session data...
SessionContext: Loaded [33m0[39m sessions, current: [90mundefined[39m
SessionContext: Creating new session with options: {}
SessionManager: Created new session: session_1751721494191_fjvwah48a
SessionContext: Created and switched to new session: session_1751721494191_fjvwah48a

            </system-out>
        </testcase>
    </testsuite>
    <testsuite name="tests/main/permissions/PermissionManager.test.ts" timestamp="2025-07-05T13:18:14.546Z" hostname="DESKTOP-HR2BSFJ" tests="18" failures="0" errors="0" skipped="0" time="0.021771369">
        <testcase classname="tests/main/permissions/PermissionManager.test.ts" name="PermissionManager &gt; Initialization &gt; should initialize with default settings" time="0.003620506">
        </testcase>
        <testcase classname="tests/main/permissions/PermissionManager.test.ts" name="PermissionManager &gt; Initialization &gt; should set max listeners to 50" time="0.000710952">
        </testcase>
        <testcase classname="tests/main/permissions/PermissionManager.test.ts" name="PermissionManager &gt; Auto-Approval &gt; should auto-approve for trusted servers" time="0.001184901">
        </testcase>
        <testcase classname="tests/main/permissions/PermissionManager.test.ts" name="PermissionManager &gt; Auto-Approval &gt; should auto-approve based on risk level settings" time="0.000501345">
        </testcase>
        <testcase classname="tests/main/permissions/PermissionManager.test.ts" name="PermissionManager &gt; Permission Management API &gt; should revoke permissions" time="0.000935308">
        </testcase>
        <testcase classname="tests/main/permissions/PermissionManager.test.ts" name="PermissionManager &gt; Permission Management API &gt; should handle revoking non-existent permissions" time="0.000550897">
        </testcase>
        <testcase classname="tests/main/permissions/PermissionManager.test.ts" name="PermissionManager &gt; Permission Management API &gt; should clear all permissions" time="0.00042642">
        </testcase>
        <testcase classname="tests/main/permissions/PermissionManager.test.ts" name="PermissionManager &gt; Permission Management API &gt; should update settings" time="0.00044776">
        </testcase>
        <testcase classname="tests/main/permissions/PermissionManager.test.ts" name="PermissionManager &gt; Permission Management API &gt; should manage trusted servers" time="0.002093644">
        </testcase>
        <testcase classname="tests/main/permissions/PermissionManager.test.ts" name="PermissionManager &gt; Session Management &gt; should clear session permissions" time="0.000957525">
        </testcase>
        <testcase classname="tests/main/permissions/PermissionManager.test.ts" name="PermissionManager &gt; Approval Request Handling &gt; should timeout approval requests" time="0.001818139">
        </testcase>
        <testcase classname="tests/main/permissions/PermissionManager.test.ts" name="PermissionManager &gt; Approval Request Handling &gt; should handle invalid approval responses" time="0.000889952">
        </testcase>
        <testcase classname="tests/main/permissions/PermissionManager.test.ts" name="PermissionManager &gt; Approval Request Handling &gt; should emit permission request events" time="0.001223202">
        </testcase>
        <testcase classname="tests/main/permissions/PermissionManager.test.ts" name="PermissionManager &gt; Shutdown &gt; should clean up all resources on shutdown" time="0.000686587">
        </testcase>
        <testcase classname="tests/main/permissions/PermissionManager.test.ts" name="PermissionManager &gt; Edge Cases &gt; should handle empty permission key generation" time="0.000403991">
        </testcase>
        <testcase classname="tests/main/permissions/PermissionManager.test.ts" name="PermissionManager &gt; Edge Cases &gt; should handle session key generation with various inputs" time="0.000405921">
        </testcase>
        <testcase classname="tests/main/permissions/PermissionManager.test.ts" name="PermissionManager &gt; Edge Cases &gt; should handle argument hashing with special characters" time="0.00040373">
        </testcase>
        <testcase classname="tests/main/permissions/PermissionManager.test.ts" name="PermissionManager &gt; Edge Cases &gt; should handle argument hashing with undefined/null values" time="0.002423974">
        </testcase>
    </testsuite>
    <testsuite name="tests/main/mcp/ConnectionManager.test.ts" timestamp="2025-07-05T13:18:14.549Z" hostname="DESKTOP-HR2BSFJ" tests="57" failures="0" errors="0" skipped="0" time="0.206287896">
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Server Lifecycle Management &gt; startServer &gt; should successfully start a STDIO server" time="0.008963077">
            <system-out>
🔍 Race condition check for startServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mfalse[39m,
  currentState: [1mnull[22m,
  totalServers: [33m0[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🚀 Starting MCP server: Test Server (test-server)

MCP server ready: Test Server {
  tools: [ { name: [32m&apos;test-tool&apos;[39m, description: [32m&apos;Test tool&apos;[39m, inputSchema: {} } ]
}

Discovered tools for test-server: [33m1[39m [ [32m&apos;test-tool&apos;[39m ]

Discovered resources for test-server: [33m0[39m

Discovered prompts for test-server: [33m0[39m

✅ Successfully started MCP server: Test Server
🔓 Released operation lock for server test-server

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Server Lifecycle Management &gt; startServer &gt; should successfully start an HTTP server" time="0.003750407">
            <system-out>
🔍 Race condition check for startServer on test-http-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mfalse[39m,
  currentState: [1mnull[22m,
  totalServers: [33m0[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-http-server

🚀 Starting MCP server: Test HTTP Server (test-http-server)

MCP server ready: Test HTTP Server { tools: [] }

Discovered tools for test-http-server: [33m0[39m []

Discovered resources for test-http-server: [33m0[39m

Discovered prompts for test-http-server: [33m0[39m

✅ Successfully started MCP server: Test HTTP Server
🔓 Released operation lock for server test-http-server

🔍 Race condition check for stopServer on test-http-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-http-server

🛑 Stopping MCP server: Test HTTP Server (test-http-server)

✅ Successfully stopped MCP server: Test HTTP Server
🔓 Released operation lock for server test-http-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Server Lifecycle Management &gt; startServer &gt; should handle Windows command resolution" time="0.003387455">
            <system-out>
🔍 Race condition check for startServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mfalse[39m,
  currentState: [1mnull[22m,
  totalServers: [33m0[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🚀 Starting MCP server: Test Server (test-server)

MCP server ready: Test Server { tools: [] }

Discovered tools for test-server: [33m0[39m []

Discovered resources for test-server: [33m0[39m

Discovered prompts for test-server: [33m0[39m

✅ Successfully started MCP server: Test Server
🔓 Released operation lock for server test-server

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Server Lifecycle Management &gt; startServer &gt; should handle command with spaces and quotes" time="0.003568189">
            <system-out>
🔍 Race condition check for startServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mfalse[39m,
  currentState: [1mnull[22m,
  totalServers: [33m0[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🚀 Starting MCP server: Test Server (test-server)

MCP server ready: Test Server { tools: [] }

Discovered tools for test-server: [33m0[39m []

Discovered resources for test-server: [33m0[39m

Discovered prompts for test-server: [33m0[39m

✅ Successfully started MCP server: Test Server
🔓 Released operation lock for server test-server

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Server Lifecycle Management &gt; startServer &gt; should handle maximum server limit" time="0.005937761">
            <system-out>
🔍 Race condition check for startServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mfalse[39m,
  currentState: [1mnull[22m,
  totalServers: [33m8[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🔓 Released operation lock for server test-server

🔍 Race condition check for stopServer on server-0: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m8[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server server-0
🔍 Race condition check for stopServer on server-1: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m8[39m,
  activeLocks: [33m1[39m
}
🔒 Acquired operation lock for server server-1
🔍 Race condition check for stopServer on server-2: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m8[39m,
  activeLocks: [33m2[39m
}
🔒 Acquired operation lock for server server-2
🔍 Race condition check for stopServer on server-3: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m8[39m,
  activeLocks: [33m3[39m
}
🔒 Acquired operation lock for server server-3
🔍 Race condition check for stopServer on server-4: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m8[39m,
  activeLocks: [33m4[39m
}
🔒 Acquired operation lock for server server-4
🔍 Race condition check for stopServer on server-5: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m8[39m,
  activeLocks: [33m5[39m
}
🔒 Acquired operation lock for server server-5
🔍 Race condition check for stopServer on server-6: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m8[39m,
  activeLocks: [33m6[39m
}
🔒 Acquired operation lock for server server-6
🔍 Race condition check for stopServer on server-7: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m8[39m,
  activeLocks: [33m7[39m
}
🔒 Acquired operation lock for server server-7
🛑 Stopping MCP server: Server 0 (server-0)
🛑 Stopping MCP server: Server 1 (server-1)
🛑 Stopping MCP server: Server 2 (server-2)
🛑 Stopping MCP server: Server 3 (server-3)
🛑 Stopping MCP server: Server 4 (server-4)
🛑 Stopping MCP server: Server 5 (server-5)
🛑 Stopping MCP server: Server 6 (server-6)
🛑 Stopping MCP server: Server 7 (server-7)

✅ Successfully stopped MCP server: Server 0
🔓 Released operation lock for server server-0

✅ Successfully stopped MCP server: Server 1
🔓 Released operation lock for server server-1

✅ Successfully stopped MCP server: Server 2
🔓 Released operation lock for server server-2

✅ Successfully stopped MCP server: Server 3
🔓 Released operation lock for server server-3

✅ Successfully stopped MCP server: Server 4
🔓 Released operation lock for server server-4

✅ Successfully stopped MCP server: Server 5
🔓 Released operation lock for server server-5

✅ Successfully stopped MCP server: Server 6
🔓 Released operation lock for server server-6

✅ Successfully stopped MCP server: Server 7
🔓 Released operation lock for server server-7

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Server Lifecycle Management &gt; startServer &gt; should handle server already running" time="0.002904909">
            <system-out>
🔍 Race condition check for startServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🔓 Released operation lock for server test-server

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Server Lifecycle Management &gt; startServer &gt; should handle MCP SDK loading failure" time="0.00185733">
            <system-out>
🔍 Race condition check for startServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mfalse[39m,
  currentState: [1mnull[22m,
  totalServers: [33m0[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🚀 Starting MCP server: Test Server (test-server)

🔓 Released operation lock for server test-server

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;failed&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)
✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Server Lifecycle Management &gt; startServer &gt; should handle client connection failure" time="0.001608086">
            <system-out>
🔍 Race condition check for startServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mfalse[39m,
  currentState: [1mnull[22m,
  totalServers: [33m0[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🚀 Starting MCP server: Test Server (test-server)

🔓 Released operation lock for server test-server

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;failed&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)
✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Server Lifecycle Management &gt; startServer &gt; should handle missing command for STDIO transport" time="0.001525715">
            <system-out>
🔍 Race condition check for startServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mfalse[39m,
  currentState: [1mnull[22m,
  totalServers: [33m0[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🚀 Starting MCP server: Test Server (test-server)

🔓 Released operation lock for server test-server

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;failed&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)
✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Server Lifecycle Management &gt; startServer &gt; should set up environment variables correctly" time="0.004200346">
            <system-out>
🔍 Race condition check for startServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mfalse[39m,
  currentState: [1mnull[22m,
  totalServers: [33m0[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🚀 Starting MCP server: Test Server (test-server)

MCP server ready: Test Server { tools: [] }

Discovered tools for test-server: [33m0[39m []

Discovered resources for test-server: [33m0[39m

Discovered prompts for test-server: [33m0[39m

✅ Successfully started MCP server: Test Server
🔓 Released operation lock for server test-server

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Server Lifecycle Management &gt; stopServer &gt; should successfully stop a running server" time="0.003398198">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Server Lifecycle Management &gt; stopServer &gt; should handle stopping non-existent server gracefully" time="0.001386562">
            <system-out>
🔍 Race condition check for stopServer on non-existent: {
  hasLock: [33mfalse[39m,
  serverExists: [33mfalse[39m,
  currentState: [1mnull[22m,
  totalServers: [33m0[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server non-existent

🔓 Released operation lock for server non-existent

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Server Lifecycle Management &gt; stopServer &gt; should handle client close failure" time="0.003005723">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Server Lifecycle Management &gt; stopServer &gt; should kill process if client close fails" time="0.002929203">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Server Lifecycle Management &gt; stopAllServers &gt; should stop all running servers" time="0.003771507">
            <system-out>
🔍 Race condition check for stopServer on server1: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m3[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server server1
🔍 Race condition check for stopServer on server2: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m3[39m,
  activeLocks: [33m1[39m
}
🔒 Acquired operation lock for server server2
🔍 Race condition check for stopServer on server3: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m3[39m,
  activeLocks: [33m2[39m
}
🔒 Acquired operation lock for server server3
🛑 Stopping MCP server: Test Server (server1)
🛑 Stopping MCP server: Test Server (server2)
🛑 Stopping MCP server: Test Server (server3)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server server1

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server server2

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server server3

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Tool Management &gt; executeTool &gt; should execute a tool with permission" time="0.00572053">
            <system-out>
Executing tool test-tool on server test-server { args: { arg1: [32m&apos;value1&apos;[39m } }

Tool execution completed for test-tool { result: { result: [32m&apos;success&apos;[39m } }

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Tool Management &gt; executeTool &gt; should reject when server not found" time="0.004361184">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Tool Management &gt; executeTool &gt; should reject when server not ready" time="0.003787169">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;starting&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Tool Management &gt; executeTool &gt; should reject when tool not found" time="0.003786094">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Tool Management &gt; executeTool &gt; should reject when permission denied" time="0.006514386">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Tool Management &gt; executeTool &gt; should handle tool execution errors" time="0.004578124">
            <system-out>
Executing tool test-tool on server test-server { args: {} }

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Tool Management &gt; getAvailableTools &gt; should return tools for a specific server" time="0.003653917">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Tool Management &gt; getAvailableTools &gt; should return empty array for non-existent server" time="0.003477883">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Tool Management &gt; getAvailableTools &gt; should return empty array for server without tools" time="0.005018042">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Tool Management &gt; getAllAvailableTools &gt; should return tools from all servers" time="0.003827716">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m2[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server
🔍 Race condition check for stopServer on server2: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m2[39m,
  activeLocks: [33m1[39m
}
🔒 Acquired operation lock for server server2
🛑 Stopping MCP server: Test Server (test-server)
🛑 Stopping MCP server: Test Server (server2)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server server2

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Resource Management &gt; readResource &gt; should read a resource successfully" time="0.003586014">
            <system-out>
Reading resource file://test.txt from server test-server

Resource read completed for file://test.txt

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Resource Management &gt; readResource &gt; should reject when server not found" time="0.002881569">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Resource Management &gt; readResource &gt; should reject when server not ready" time="0.002881041">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;starting&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Resource Management &gt; readResource &gt; should handle read errors" time="0.004594275">
            <system-out>
Reading resource file://test.txt from server test-server

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Resource Management &gt; subscribeToResource &gt; should subscribe to a resource successfully" time="0.004207357">
            <system-out>
Subscribed to resource file://test.txt on test-server

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Resource Management &gt; subscribeToResource &gt; should handle already subscribed resources" time="0.004101397">
            <system-out>
Already subscribed to resource file://test.txt on test-server

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Resource Management &gt; subscribeToResource &gt; should handle subscription errors" time="0.004226705">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Resource Management &gt; unsubscribeFromResource &gt; should unsubscribe from a resource successfully" time="0.004333338">
            <system-out>
Unsubscribed from resource file://test.txt on test-server

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Resource Management &gt; unsubscribeFromResource &gt; should handle not subscribed resources" time="0.002910613">
            <system-out>
Unsubscribed from resource file://test.txt on test-server

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Resource Management &gt; getAvailableResources &gt; should return resources for a specific server" time="0.003551059">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Resource Management &gt; getAvailableResources &gt; should return empty array for non-existent server" time="0.003941858">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Resource Management &gt; getAllAvailableResources &gt; should return resources from all servers" time="0.005767201">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m2[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server
🔍 Race condition check for stopServer on server2: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m2[39m,
  activeLocks: [33m1[39m
}
🔒 Acquired operation lock for server server2
🛑 Stopping MCP server: Test Server (test-server)
🛑 Stopping MCP server: Test Server (server2)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server server2

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Prompt Management &gt; executePrompt &gt; should execute a prompt successfully" time="0.003618505">
            <system-out>
Executing prompt test-prompt on server test-server { args: { arg1: [32m&apos;value1&apos;[39m } }

Prompt execution completed for test-prompt

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Prompt Management &gt; executePrompt &gt; should execute prompt without arguments" time="0.002792025">
            <system-out>
Executing prompt test-prompt on server test-server { args: [90mundefined[39m }

Prompt execution completed for test-prompt

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Prompt Management &gt; executePrompt &gt; should reject when server not found" time="0.002433522">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Prompt Management &gt; executePrompt &gt; should reject when prompt not found" time="0.002770139">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Prompt Management &gt; executePrompt &gt; should handle prompt execution errors" time="0.006187834">
            <system-out>
Executing prompt test-prompt on server test-server { args: [90mundefined[39m }

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Prompt Management &gt; getAvailablePrompts &gt; should return prompts for a specific server" time="0.003363034">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Prompt Management &gt; getAvailablePrompts &gt; should return empty array for non-existent server" time="0.004765753">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Prompt Management &gt; getAllAvailablePrompts &gt; should return prompts from all servers" time="0.003217453">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m2[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server
🔍 Race condition check for stopServer on server2: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m2[39m,
  activeLocks: [33m1[39m
}
🔒 Acquired operation lock for server server2
🛑 Stopping MCP server: Test Server (test-server)
🛑 Stopping MCP server: Test Server (server2)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server server2

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; State Management &gt; should get server state" time="0.004060308">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; State Management &gt; should return null for non-existent server state" time="0.001437744">
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; State Management &gt; should get all server states" time="0.004149523">
            <system-out>
🔍 Race condition check for stopServer on server1: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m2[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server server1
🔍 Race condition check for stopServer on server2: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;starting&apos;[39m,
  totalServers: [33m2[39m,
  activeLocks: [33m1[39m
}
🔒 Acquired operation lock for server server2
🛑 Stopping MCP server: Test Server (server1)
🛑 Stopping MCP server: Test Server (server2)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server server1

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server server2

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Advanced Features &gt; sampleLLM &gt; should handle LLM sampling requests" time="0.002661251">
            <system-out>
Warning: sampleLLM called directly - this should go through normal tool execution

Executing tool sampleLLM on server test-server {
  args: {
    messages: [ [36m[Object][39m ],
    maxTokens: [33m100[39m,
    temperature: [33m0.7[39m,
    stopSequences: [90mundefined[39m,
    modelPreferences: [90mundefined[39m
  }
}

Tool execution completed for sampleLLM { result: { content: [32m&apos;LLM response&apos;[39m } }

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Advanced Features &gt; sampleLLM &gt; should reject when server not found" time="0.001208118">
            <system-out>
Warning: sampleLLM called directly - this should go through normal tool execution

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Advanced Features &gt; sampleLLM &gt; should handle sampling errors gracefully" time="0.004841912">
            <system-out>
Warning: sampleLLM called directly - this should go through normal tool execution

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Advanced Features &gt; Discovery Methods &gt; should discover tools correctly" time="0.00232851">
            <system-out>
Discovered tools for test-server: [33m2[39m [ [32m&apos;tool1&apos;[39m, [32m&apos;tool2&apos;[39m ]

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Advanced Features &gt; Discovery Methods &gt; should discover resources correctly" time="0.00097129">
            <system-out>
Discovered resources for test-server: [33m2[39m

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Advanced Features &gt; Discovery Methods &gt; should discover prompts correctly" time="0.000905266">
            <system-out>
Discovered prompts for test-server: [33m2[39m

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Advanced Features &gt; Discovery Methods &gt; should handle discovery errors gracefully" time="0.00056726">
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Advanced Features &gt; Resource Refresh &gt; should refresh server resources" time="0.004533386">
            <system-out>
Discovered resources for test-server: [33m1[39m

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Advanced Features &gt; Resource Refresh &gt; should handle refresh errors gracefully" time="0.002240867">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
    </testsuite>
    <testsuite name="tests/main/llm/providers/OllamaProvider.test.ts" timestamp="2025-07-05T13:18:14.573Z" hostname="DESKTOP-HR2BSFJ" tests="45" failures="0" errors="0" skipped="0" time="0.02415549">
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Constructor &gt; should initialize with provided config" time="0.001302331">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Constructor &gt; should use default URL when none provided" time="0.000153451">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Connection Testing &gt; should test connection successfully" time="0.001745617">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Connection Testing &gt; should handle connection refused error" time="0.000257284">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Connection Testing &gt; should handle connection error with cause" time="0.000171123">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Connection Testing &gt; should handle HTTP errors" time="0.000147242">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Connection Testing &gt; should handle timeout errors" time="0.000175532">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Model Management &gt; should get available models successfully" time="0.001004096">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Model Management &gt; should handle empty model list" time="0.00060674">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Model Management &gt; should handle missing models property" time="0.000424991">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Model Management &gt; should handle connection error when getting models" time="0.001069311">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Model Management &gt; should handle HTTP error when getting models" time="0.000387658">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Model Management &gt; should format sizes correctly" time="0.000207269">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Message Sending &gt; should send message successfully" time="0.000900033">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Message Sending &gt; should send message with custom options" time="0.000459716">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Message Sending &gt; should send message with tools" time="0.000503051">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Message Sending &gt; should handle HTTP error when sending message" time="0.000283255">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Message Sending &gt; should handle network error when sending message" time="0.000297101">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Message Sending &gt; should handle finish reason based on done status" time="0.000161807">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Message Streaming &gt; should stream message successfully" time="0.002303801">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Message Streaming &gt; should handle streaming with custom options" time="0.000958258">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Message Streaming &gt; should handle HTTP error when streaming" time="0.000837999">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Message Streaming &gt; should handle missing response body when streaming" time="0.00042412">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Message Streaming &gt; should handle invalid JSON in streaming response" time="0.000518082">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Message Streaming &gt; should handle incomplete streaming data" time="0.001081915">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Message Streaming &gt; should release reader lock even on error" time="0.000810899">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Model Download &gt; should download model successfully" time="0.001074135">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Model Download &gt; should download model without progress callback" time="0.000706626">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Model Download &gt; should handle HTTP error when downloading" time="0.000487998">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Model Download &gt; should handle missing response body when downloading" time="0.00046869">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Model Download &gt; should handle invalid JSON in download response" time="0.000571407">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Model Download &gt; should release reader lock even on download error" time="0.000440166">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Model Deletion &gt; should delete model successfully" time="0.000398407">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Model Deletion &gt; should handle HTTP error when deleting model" time="0.000165618">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Model Deletion &gt; should handle network error when deleting model" time="0.000138833">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Message Formatting &gt; should format regular messages correctly" time="0.00010088">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Message Formatting &gt; should format tool response messages correctly" time="0.000120933">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Message Formatting &gt; should format messages with tool calls correctly" time="0.000088031">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Error Handling &gt; should handle timeout errors properly" time="0.000078125">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Error Handling &gt; should handle connection refused errors" time="0.00006834">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Error Handling &gt; should handle authentication errors" time="0.000060703">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Error Handling &gt; should handle rate limit errors" time="0.000157777">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Error Handling &gt; should handle server errors" time="0.000106187">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Error Handling &gt; should handle unknown errors" time="0.000056358">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Error Handling &gt; should handle non-Error objects" time="0.000081759">
        </testcase>
    </testsuite>
    <testsuite name="tests/main/llm/providers/OpenRouterProvider.test.ts" timestamp="2025-07-05T13:18:14.579Z" hostname="DESKTOP-HR2BSFJ" tests="46" failures="0" errors="0" skipped="0" time="0.027424311">
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Constructor &gt; should initialize with provided config" time="0.001768444">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Connection Testing &gt; should test connection successfully with valid API key" time="0.003863592">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Connection Testing &gt; should fail connection test without API key" time="0.001531792">
            <system-out>
Provider config updated: Test OpenRouter

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Connection Testing &gt; should handle HTTP errors during connection test" time="0.000283205">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Connection Testing &gt; should handle network errors during connection test" time="0.000448252">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Connection Testing &gt; should handle timeout during connection test" time="0.000273189">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Model Management &gt; should get available models successfully" time="0.001009861">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Model Management &gt; should handle models without description" time="0.000334262">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Model Management &gt; should handle error when API key is missing" time="0.001635536">
            <system-out>
Provider config updated: Test OpenRouter

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Model Management &gt; should handle HTTP error when getting models" time="0.00155993">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Model Management &gt; should handle network error when getting models" time="0.000496853">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Message Sending &gt; should send message successfully" time="0.001349833">
            <system-out>
OpenRouter: Response received: {
  hasContent: [33mtrue[39m,
  hasToolCalls: [33mfalse[39m,
  toolCallsCount: [33m0[39m,
  toolCalls: [90mundefined[39m,
  finishReason: [32m&apos;stop&apos;[39m
}

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Message Sending &gt; should send message with custom options" time="0.000792693">
            <system-out>
OpenRouter: Response received: {
  hasContent: [33mtrue[39m,
  hasToolCalls: [33mfalse[39m,
  toolCallsCount: [33m0[39m,
  toolCalls: [90mundefined[39m,
  finishReason: [32m&apos;stop&apos;[39m
}

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Message Sending &gt; should send message with tools" time="0.001138097">
            <system-out>
OpenRouter: Sending tools: { count: [33m1[39m, toolNames: [ [32m&apos;get_weather&apos;[39m ] }

OpenRouter: Response received: {
  hasContent: [33mtrue[39m,
  hasToolCalls: [33mtrue[39m,
  toolCallsCount: [33m1[39m,
  toolCalls: [ { id: [32m&apos;call_123&apos;[39m, type: [32m&apos;function&apos;[39m, function: [36m[Object][39m } ],
  finishReason: [32m&apos;tool_calls&apos;[39m
}

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Message Sending &gt; should handle missing API key" time="0.00049783">
            <system-out>
Provider config updated: Test OpenRouter

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Message Sending &gt; should handle HTTP error response" time="0.000427601">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Message Sending &gt; should handle missing choices in response" time="0.000365753">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Message Sending &gt; should handle response with empty content" time="0.000377371">
            <system-out>
OpenRouter: Response received: {
  hasContent: [33mfalse[39m,
  hasToolCalls: [33mfalse[39m,
  toolCallsCount: [33m0[39m,
  toolCalls: [90mundefined[39m,
  finishReason: [32m&apos;stop&apos;[39m
}

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Message Sending &gt; should handle network error" time="0.000252042">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Message Streaming &gt; should stream message successfully" time="0.000901711">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Message Streaming &gt; should handle streaming with custom options" time="0.000545864">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Message Streaming &gt; should handle missing API key during streaming" time="0.000724658">
            <system-out>
Provider config updated: Test OpenRouter

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Message Streaming &gt; should handle HTTP error during streaming" time="0.000504876">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Message Streaming &gt; should handle missing response body during streaming" time="0.000221833">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Message Streaming &gt; should handle invalid JSON in streaming response" time="0.00052156">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Message Streaming &gt; should handle incomplete streaming data" time="0.000291325">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Message Streaming &gt; should release reader lock even on error" time="0.000335062">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Model Info &gt; should get model info successfully" time="0.000302584">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Model Info &gt; should return null for non-existent model" time="0.000144377">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Model Info &gt; should handle missing API key" time="0.000247028">
            <system-out>
Provider config updated: Test OpenRouter

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Model Info &gt; should handle HTTP errors other than 404" time="0.000174352">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Model Info &gt; should handle network errors" time="0.000178198">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Credit Balance &gt; should get credit balance successfully" time="0.000594212">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Credit Balance &gt; should return null when no API key configured" time="0.000267258">
            <system-out>
Provider config updated: Test OpenRouter

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Credit Balance &gt; should return null on HTTP error" time="0.000141874">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Credit Balance &gt; should return null when credit_balance is missing" time="0.000116474">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Credit Balance &gt; should handle network errors" time="0.000140118">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Message Formatting &gt; should format regular messages correctly" time="0.000102991">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Message Formatting &gt; should format tool response messages correctly" time="0.000076993">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Message Formatting &gt; should format messages with tool calls correctly" time="0.000078263">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Error Handling &gt; should handle insufficient credits error" time="0.00008891">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Error Handling &gt; should handle rate limit error" time="0.00007122">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Error Handling &gt; should handle model validation error" time="0.00007023">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Error Handling &gt; should handle timeout errors" time="0.000053992">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Error Handling &gt; should handle timeout message errors" time="0.000050836">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Error Handling &gt; should fall back to base error handling" time="0.000056202">
        </testcase>
    </testsuite>
    <testsuite name="tests/renderer/components/MCP/McpIntegration.test.tsx" timestamp="2025-07-05T13:18:14.590Z" hostname="DESKTOP-HR2BSFJ" tests="27" failures="0" errors="0" skipped="0" time="0.302416642">
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Initial Rendering and Loading &gt; renders without crashing" time="0.027991619">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Initial Rendering and Loading &gt; shows loading state initially" time="0.003071208">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Initial Rendering and Loading &gt; loads and displays servers successfully" time="0.012048217">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Initial Rendering and Loading &gt; displays empty state when no servers configured" time="0.036075751">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Initial Rendering and Loading &gt; displays error state when loading fails" time="0.006673696">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Initial Rendering and Loading &gt; handles network errors during loading" time="0.004913323">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Server Display and Status &gt; displays server status badges correctly" time="0.01075497">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Server Display and Status &gt; displays transport information correctly" time="0.012761395">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Server Display and Status &gt; displays status icons correctly" time="0.006472681">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Server Management Actions &gt; toggles server enabled state successfully" time="0.014367534">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Server Management Actions &gt; handles server toggle errors" time="0.008834489">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Server Management Actions &gt; removes server with confirmation" time="0.012906802">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Server Management Actions &gt; cancels server removal when user declines confirmation" time="0.007988612">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Server Management Actions &gt; handles server removal errors" time="0.012771164">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Server Wizard Integration &gt; opens server wizard when add server button is clicked" time="0.014617517">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Server Wizard Integration &gt; opens wizard from empty state" time="0.018779257">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Server Wizard Integration &gt; refreshes server list when server is added via wizard" time="0.014986295">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Error Handling and Edge Cases &gt; handles undefined server data gracefully" time="0.002666777">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Error Handling and Edge Cases &gt; handles malformed server data" time="0.002843435">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Error Handling and Edge Cases &gt; retries loading on initial failure with user action" time="0.004553805">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Error Handling and Edge Cases &gt; handles rapid server state changes" time="0.015767085">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Accessibility and UX &gt; has proper ARIA labels and roles" time="0.009640833">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Accessibility and UX &gt; supports keyboard navigation" time="0.008054953">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Accessibility and UX &gt; provides clear loading states" time="0.008114498">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Accessibility and UX &gt; provides clear error messages" time="0.007970969">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Integration with Settings &gt; calls onSettingsUpdate when servers change" time="0.008292489">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Integration with Settings &gt; reloads servers when settings prop changes" time="0.005412116">
        </testcase>
    </testsuite>
    <testsuite name="tests/renderer/components/MCP/McpServerWizard.test.tsx" timestamp="2025-07-05T13:18:14.596Z" hostname="DESKTOP-HR2BSFJ" tests="13" failures="0" errors="0" skipped="0" time="0.183330117">
        <testcase classname="tests/renderer/components/MCP/McpServerWizard.test.tsx" name="McpServerWizard &gt; Basic Rendering &gt; renders without crashing when open" time="0.034408382">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpServerWizard.test.tsx" name="McpServerWizard &gt; Basic Rendering &gt; does not render when closed" time="0.001165941">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpServerWizard.test.tsx" name="McpServerWizard &gt; Basic Rendering &gt; displays wizard steps" time="0.011110491">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpServerWizard.test.tsx" name="McpServerWizard &gt; Form Validation &gt; validates server name is required" time="0.042053527">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpServerWizard.test.tsx" name="McpServerWizard &gt; Form Validation &gt; validates command for STDIO transport" time="0.043729452">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpServerWizard.test.tsx" name="McpServerWizard &gt; Connection Testing &gt; tests connection successfully" time="0.006865374">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpServerWizard.test.tsx" name="McpServerWizard &gt; Connection Testing &gt; handles connection test failure" time="0.005391116">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpServerWizard.test.tsx" name="McpServerWizard &gt; Server Creation &gt; creates server successfully" time="0.007187701">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpServerWizard.test.tsx" name="McpServerWizard &gt; Server Creation &gt; handles server creation error" time="0.007474776">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpServerWizard.test.tsx" name="McpServerWizard &gt; User Interactions &gt; closes when close button is clicked" time="0.006992255">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpServerWizard.test.tsx" name="McpServerWizard &gt; User Interactions &gt; calls onServerAdded when server is created" time="0.007006948">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpServerWizard.test.tsx" name="McpServerWizard &gt; Accessibility &gt; has proper ARIA labels" time="0.004658038">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpServerWizard.test.tsx" name="McpServerWizard &gt; Accessibility &gt; supports keyboard navigation" time="0.003621775">
        </testcase>
    </testsuite>
</testsuites>
