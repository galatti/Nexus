<?xml version="1.0" encoding="UTF-8" ?>
<testsuites name="vitest tests" tests="371" failures="0" errors="0" time="1.059631363">
    <testsuite name="tests/integration/main-ipc.test.ts" timestamp="2025-07-05T13:33:07.597Z" hostname="DESKTOP-HR2BSFJ" tests="31" failures="0" errors="0" skipped="0" time="0.012205326">
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; Settings IPC Handlers &gt; should handle settings:get" time="0.001861737">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; Settings IPC Handlers &gt; should handle settings:update" time="0.000535215">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; Settings IPC Handlers &gt; should handle settings:reset" time="0.000287844">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; Settings IPC Handlers &gt; should handle settings:export" time="0.000692048">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; Settings IPC Handlers &gt; should handle settings:import" time="0.000883596">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; Settings IPC Handlers &gt; should handle invalid JSON in settings:import" time="0.000579806">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; LLM Provider IPC Handlers &gt; should handle llm:test-provider with healthy provider" time="0.000311881">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; LLM Provider IPC Handlers &gt; should handle llm:test-provider with unhealthy provider" time="0.000214012">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; LLM Provider IPC Handlers &gt; should handle llm:test-provider with missing provider" time="0.000510629">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; LLM Provider IPC Handlers &gt; should handle llm:get-models successfully" time="0.000480195">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; LLM Provider IPC Handlers &gt; should handle llm:get-models with error" time="0.000227238">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; LLM Provider IPC Handlers &gt; should handle llm:send-message successfully" time="0.000176145">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; LLM Provider IPC Handlers &gt; should handle llm:send-message with error" time="0.000152263">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; LLM Provider IPC Handlers &gt; should handle llm:get-status successfully" time="0.000131577">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; MCP Server IPC Handlers &gt; should handle mcp:add-server successfully" time="0.000658552">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; MCP Server IPC Handlers &gt; should handle mcp:add-server with error" time="0.000155582">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; MCP Server IPC Handlers &gt; should handle mcp:remove-server successfully" time="0.000146633">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; MCP Server IPC Handlers &gt; should handle mcp:update-server successfully" time="0.000254801">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; MCP Server IPC Handlers &gt; should handle mcp:get-servers successfully" time="0.00017139">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; Permission IPC Handlers &gt; should handle permissions:get-pending" time="0.000149683">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; Permission IPC Handlers &gt; should handle permissions:respond successfully" time="0.000149593">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; Permission IPC Handlers &gt; should handle permissions:respond with failure" time="0.000080227">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; Permission IPC Handlers &gt; should handle permissions:get-all" time="0.000130413">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; Permission IPC Handlers &gt; should handle permissions:revoke successfully" time="0.000151095">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; Permission IPC Handlers &gt; should handle permissions:clear-session" time="0.000139226">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; Permission IPC Handlers &gt; should handle permissions:update-settings" time="0.000151722">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; Permission IPC Handlers &gt; should handle permissions:get-settings" time="0.000176249">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; Error Handling &gt; should handle unexpected errors in handlers" time="0.000192418">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; Error Handling &gt; should handle non-Error objects thrown" time="0.000114335">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; Cross-Module Integration &gt; should handle full workflow: add provider, test, and send message" time="0.000413364">
        </testcase>
        <testcase classname="tests/integration/main-ipc.test.ts" name="Main Process IPC Integration Tests &gt; Cross-Module Integration &gt; should handle MCP server and permissions workflow" time="0.000401013">
        </testcase>
    </testsuite>
    <testsuite name="tests/integration/mcp-integration.test.ts" timestamp="2025-07-05T13:33:07.603Z" hostname="DESKTOP-HR2BSFJ" tests="7" failures="0" errors="0" skipped="0" time="0.031840853">
        <testcase classname="tests/integration/mcp-integration.test.ts" name="MCP Integration Tests &gt; Complete Server Lifecycle &gt; should handle complete server lifecycle from creation to destruction" time="0.008500653">
            <system-out>
🔍 Race condition check for startServer on integration-test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mfalse[39m,
  currentState: [1mnull[22m,
  totalServers: [33m0[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server integration-test-server

🚀 Starting MCP server: Integration Test Server (integration-test-server)

MCP server ready: Integration Test Server {
  tools: [
    {
      name: [32m&apos;test-tool&apos;[39m,
      description: [32m&apos;A test tool&apos;[39m,
      inputSchema: [36m[Object][39m
    }
  ]
}

Discovered tools for integration-test-server: [33m1[39m [ [32m&apos;test-tool&apos;[39m ]

Discovered resources for integration-test-server: [33m1[39m

Discovered prompts for integration-test-server: [33m1[39m

✅ Successfully started MCP server: Integration Test Server
🔓 Released operation lock for server integration-test-server

Executing tool test-tool on server integration-test-server { args: { testParam: [32m&apos;value&apos;[39m } }

Tool execution completed for test-tool { result: { result: [32m&apos;Tool executed successfully&apos;[39m } }

Reading resource file://test.txt from server integration-test-server

Resource read completed for file://test.txt

Executing prompt test-prompt on server integration-test-server { args: { context: [32m&apos;test&apos;[39m } }

Prompt execution completed for test-prompt

Subscribed to resource file://test.txt on integration-test-server

🔍 Race condition check for stopServer on integration-test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server integration-test-server

🛑 Stopping MCP server: Integration Test Server (integration-test-server)

✅ Successfully stopped MCP server: Integration Test Server
🔓 Released operation lock for server integration-test-server

            </system-out>
        </testcase>
        <testcase classname="tests/integration/mcp-integration.test.ts" name="MCP Integration Tests &gt; Complete Server Lifecycle &gt; should handle server failure and recovery" time="0.003714707">
            <system-out>
🔍 Race condition check for startServer on integration-test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mfalse[39m,
  currentState: [1mnull[22m,
  totalServers: [33m0[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server integration-test-server

🚀 Starting MCP server: Integration Test Server (integration-test-server)

🔓 Released operation lock for server integration-test-server

🔍 Race condition check for stopServer on integration-test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;failed&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server integration-test-server

🛑 Stopping MCP server: Integration Test Server (integration-test-server)
✅ Successfully stopped MCP server: Integration Test Server
🔓 Released operation lock for server integration-test-server

🔍 Race condition check for startServer on integration-test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mfalse[39m,
  currentState: [1mnull[22m,
  totalServers: [33m0[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server integration-test-server

🚀 Starting MCP server: Integration Test Server (integration-test-server)

MCP server ready: Integration Test Server {
  tools: [
    {
      name: [32m&apos;test-tool&apos;[39m,
      description: [32m&apos;A test tool&apos;[39m,
      inputSchema: [36m[Object][39m
    }
  ]
}

Discovered tools for integration-test-server: [33m1[39m [ [32m&apos;test-tool&apos;[39m ]

Discovered resources for integration-test-server: [33m1[39m

Discovered prompts for integration-test-server: [33m1[39m

✅ Successfully started MCP server: Integration Test Server
🔓 Released operation lock for server integration-test-server

🔍 Race condition check for stopServer on integration-test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server integration-test-server

🛑 Stopping MCP server: Integration Test Server (integration-test-server)

✅ Successfully stopped MCP server: Integration Test Server
🔓 Released operation lock for server integration-test-server

            </system-out>
        </testcase>
        <testcase classname="tests/integration/mcp-integration.test.ts" name="MCP Integration Tests &gt; Error Handling and Edge Cases &gt; should handle tool execution errors gracefully" time="0.002775363">
            <system-out>
🔍 Race condition check for startServer on integration-test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mfalse[39m,
  currentState: [1mnull[22m,
  totalServers: [33m0[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server integration-test-server

🚀 Starting MCP server: Integration Test Server (integration-test-server)

MCP server ready: Integration Test Server {
  tools: [
    {
      name: [32m&apos;test-tool&apos;[39m,
      description: [32m&apos;A test tool&apos;[39m,
      inputSchema: [36m[Object][39m
    }
  ]
}

Discovered tools for integration-test-server: [33m1[39m [ [32m&apos;test-tool&apos;[39m ]

Discovered resources for integration-test-server: [33m1[39m

Discovered prompts for integration-test-server: [33m1[39m

✅ Successfully started MCP server: Integration Test Server
🔓 Released operation lock for server integration-test-server

Executing tool test-tool on server integration-test-server { args: {} }

🔍 Race condition check for stopServer on integration-test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server integration-test-server

🛑 Stopping MCP server: Integration Test Server (integration-test-server)

✅ Successfully stopped MCP server: Integration Test Server
🔓 Released operation lock for server integration-test-server

            </system-out>
        </testcase>
        <testcase classname="tests/integration/mcp-integration.test.ts" name="MCP Integration Tests &gt; Error Handling and Edge Cases &gt; should handle resource reading errors" time="0.005733543">
            <system-out>
🔍 Race condition check for startServer on integration-test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mfalse[39m,
  currentState: [1mnull[22m,
  totalServers: [33m0[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server integration-test-server

🚀 Starting MCP server: Integration Test Server (integration-test-server)

MCP server ready: Integration Test Server {
  tools: [
    {
      name: [32m&apos;test-tool&apos;[39m,
      description: [32m&apos;A test tool&apos;[39m,
      inputSchema: [36m[Object][39m
    }
  ]
}

Discovered tools for integration-test-server: [33m1[39m [ [32m&apos;test-tool&apos;[39m ]

Discovered resources for integration-test-server: [33m1[39m

Discovered prompts for integration-test-server: [33m1[39m

✅ Successfully started MCP server: Integration Test Server
🔓 Released operation lock for server integration-test-server

Reading resource file://nonexistent.txt from server integration-test-server

🔍 Race condition check for stopServer on integration-test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server integration-test-server

🛑 Stopping MCP server: Integration Test Server (integration-test-server)

✅ Successfully stopped MCP server: Integration Test Server
🔓 Released operation lock for server integration-test-server

            </system-out>
        </testcase>
        <testcase classname="tests/integration/mcp-integration.test.ts" name="MCP Integration Tests &gt; Error Handling and Edge Cases &gt; should handle server process crashes" time="0.002461774">
            <system-out>
🔍 Race condition check for startServer on integration-test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mfalse[39m,
  currentState: [1mnull[22m,
  totalServers: [33m0[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server integration-test-server

🚀 Starting MCP server: Integration Test Server (integration-test-server)

MCP server ready: Integration Test Server {
  tools: [
    {
      name: [32m&apos;test-tool&apos;[39m,
      description: [32m&apos;A test tool&apos;[39m,
      inputSchema: [36m[Object][39m
    }
  ]
}

Discovered tools for integration-test-server: [33m1[39m [ [32m&apos;test-tool&apos;[39m ]

Discovered resources for integration-test-server: [33m1[39m

Discovered prompts for integration-test-server: [33m1[39m

✅ Successfully started MCP server: Integration Test Server
🔓 Released operation lock for server integration-test-server

🔍 Race condition check for stopServer on integration-test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server integration-test-server

🛑 Stopping MCP server: Integration Test Server (integration-test-server)

✅ Successfully stopped MCP server: Integration Test Server
🔓 Released operation lock for server integration-test-server

            </system-out>
        </testcase>
        <testcase classname="tests/integration/mcp-integration.test.ts" name="MCP Integration Tests &gt; Resource Subscription Management &gt; should handle resource subscription lifecycle" time="0.00271417">
            <system-out>
🔍 Race condition check for startServer on integration-test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mfalse[39m,
  currentState: [1mnull[22m,
  totalServers: [33m0[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server integration-test-server

🚀 Starting MCP server: Integration Test Server (integration-test-server)

MCP server ready: Integration Test Server {
  tools: [
    {
      name: [32m&apos;test-tool&apos;[39m,
      description: [32m&apos;A test tool&apos;[39m,
      inputSchema: [36m[Object][39m
    }
  ]
}

Discovered tools for integration-test-server: [33m1[39m [ [32m&apos;test-tool&apos;[39m ]

Discovered resources for integration-test-server: [33m1[39m

Discovered prompts for integration-test-server: [33m1[39m

✅ Successfully started MCP server: Integration Test Server
🔓 Released operation lock for server integration-test-server

Subscribed to resource file://dynamic-resource.txt on integration-test-server

Unsubscribed from resource file://dynamic-resource.txt on integration-test-server

🔍 Race condition check for stopServer on integration-test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server integration-test-server

🛑 Stopping MCP server: Integration Test Server (integration-test-server)

✅ Successfully stopped MCP server: Integration Test Server
🔓 Released operation lock for server integration-test-server

            </system-out>
        </testcase>
        <testcase classname="tests/integration/mcp-integration.test.ts" name="MCP Integration Tests &gt; Performance and Concurrency &gt; should handle concurrent tool executions" time="0.00467816">
            <system-out>
🔍 Race condition check for startServer on integration-test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mfalse[39m,
  currentState: [1mnull[22m,
  totalServers: [33m0[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server integration-test-server

🚀 Starting MCP server: Integration Test Server (integration-test-server)

MCP server ready: Integration Test Server {
  tools: [
    {
      name: [32m&apos;test-tool&apos;[39m,
      description: [32m&apos;A test tool&apos;[39m,
      inputSchema: [36m[Object][39m
    }
  ]
}

Discovered tools for integration-test-server: [33m1[39m [ [32m&apos;test-tool&apos;[39m ]

Discovered resources for integration-test-server: [33m1[39m

Discovered prompts for integration-test-server: [33m1[39m

✅ Successfully started MCP server: Integration Test Server
🔓 Released operation lock for server integration-test-server

Executing tool test-tool on server integration-test-server { args: { index: [33m0[39m } }

Tool execution completed for test-tool { result: { result: [32m&apos;Tool executed successfully&apos;[39m } }

Executing tool test-tool on server integration-test-server { args: { index: [33m1[39m } }

Tool execution completed for test-tool { result: { result: [32m&apos;Tool executed successfully&apos;[39m } }

Executing tool test-tool on server integration-test-server { args: { index: [33m2[39m } }

Tool execution completed for test-tool { result: { result: [32m&apos;Tool executed successfully&apos;[39m } }

🔍 Race condition check for stopServer on integration-test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server integration-test-server

🛑 Stopping MCP server: Integration Test Server (integration-test-server)

✅ Successfully stopped MCP server: Integration Test Server
🔓 Released operation lock for server integration-test-server

            </system-out>
        </testcase>
    </testsuite>
    <testsuite name="tests/utils/SessionManager.test.ts" timestamp="2025-07-05T13:33:07.611Z" hostname="DESKTOP-HR2BSFJ" tests="4" failures="0" errors="0" skipped="0" time="0.009480106">
        <testcase classname="tests/utils/SessionManager.test.ts" name="SessionManager basics &gt; creates a new session and sets it as current" time="0.004443644">
            <system-out>
SessionManager: No app storage found, checking for legacy chat history...
SessionManager: No legacy data found, creating default storage
SessionManager: Cleared all sessions

SessionManager: Created new session: session_1751722387148_19kgmfuqi

            </system-out>
        </testcase>
        <testcase classname="tests/utils/SessionManager.test.ts" name="SessionManager basics &gt; renames an existing session" time="0.000938793">
            <system-out>
SessionManager: Cleared all sessions

SessionManager: Created new session: session_1751722387151_czw5qei88
SessionManager: Updated session: session_1751722387151_czw5qei88

            </system-out>
        </testcase>
        <testcase classname="tests/utils/SessionManager.test.ts" name="SessionManager basics &gt; prunes old sessions beyond max cap" time="0.002069951">
            <system-out>
SessionManager: Cleared all sessions

SessionManager: Created new session: session_1751722387152_lpyt6nwp1
SessionManager: Created new session: session_1751722387152_dte2z92nb
SessionManager: Created new session: session_1751722387152_7nxyprs4b
SessionManager: Created new session: session_1751722387152_chl6zhvyp
SessionManager: Created new session: session_1751722387152_gznkhnyiz
SessionManager: Created new session: session_1751722387152_0cmx3jaeq
SessionManager: Created new session: session_1751722387152_9f93jgdl7
SessionManager: Created new session: session_1751722387152_g0pqfs768
SessionManager: Created new session: session_1751722387152_7ay2k204j
SessionManager: Created new session: session_1751722387152_2p806c8hn
SessionManager: Deleted session: session_1751722387152_lpyt6nwp1
SessionManager: Deleted session: session_1751722387152_dte2z92nb
SessionManager: Deleted session: session_1751722387152_7nxyprs4b
SessionManager: Deleted session: session_1751722387152_chl6zhvyp
SessionManager: Deleted session: session_1751722387152_gznkhnyiz

            </system-out>
        </testcase>
        <testcase classname="tests/utils/SessionManager.test.ts" name="SessionManager basics &gt; clears all sessions" time="0.000622145">
            <system-out>
SessionManager: Cleared all sessions

SessionManager: Created new session: session_1751722387154_k8uzxm7tp
SessionManager: Created new session: session_1751722387154_srtrrdkh1
SessionManager: Created new session: session_1751722387154_8nr06yfr1
SessionManager: Cleared all sessions

            </system-out>
        </testcase>
    </testsuite>
    <testsuite name="tests/main/config/ConfigManager.test.ts" timestamp="2025-07-05T13:33:07.613Z" hostname="DESKTOP-HR2BSFJ" tests="38" failures="0" errors="0" skipped="0" time="0.012344575">
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Constructor and Initialization &gt; should initialize with default settings when no config file exists" time="0.002111674">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Constructor and Initialization &gt; should load existing configuration when config file exists" time="0.000598968">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Constructor and Initialization &gt; should handle config file read errors gracefully" time="0.000489622">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Constructor and Initialization &gt; should handle invalid JSON gracefully" time="0.000300726">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Constructor and Initialization &gt; should use fallback path when userData path fails" time="0.00079648">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Settings Management &gt; should update general settings" time="0.000307864">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Settings Management &gt; should update LLM providers" time="0.000205947">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Settings Management &gt; should update MCP servers" time="0.000224828">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Settings Management &gt; should handle update errors" time="0.000552895">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Settings Management &gt; should return deep copy of settings" time="0.000563849">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Provider Management &gt; should add LLM provider" time="0.000251694">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Provider Management &gt; should update LLM provider by ID" time="0.000188663">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Provider Management &gt; should remove LLM provider" time="0.000255131">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Provider Management &gt; should clear default provider when removing it" time="0.000163689">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Provider Management &gt; should find best default provider model" time="0.000129768">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Provider Management &gt; should return undefined when no enabled provider with model exists" time="0.000083478">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Provider Management &gt; should set and get default provider model" time="0.000099938">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; MCP Server Management &gt; should add MCP server" time="0.000240851">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; MCP Server Management &gt; should update existing MCP server when adding with same ID" time="0.000164524">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; MCP Server Management &gt; should remove MCP server" time="0.000175912">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; MCP Server Management &gt; should handle removing non-existent MCP server" time="0.000100756">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; MCP Server Management &gt; should update MCP server" time="0.00014384">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; MCP Server Management &gt; should throw error when updating non-existent MCP server" time="0.000156087">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Settings Validation &gt; should validate valid settings" time="0.000181951">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Settings Validation &gt; should reject invalid theme" time="0.000086103">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Settings Validation &gt; should reject invalid provider type" time="0.000078963">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Settings Validation &gt; should reject invalid MCP server structure" time="0.000075142">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Settings Validation &gt; should reject non-object settings" time="0.00009298">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Import/Export &gt; should export settings as JSON string" time="0.000252795">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Import/Export &gt; should import valid settings" time="0.000187209">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Import/Export &gt; should reject invalid JSON during import" time="0.000129634">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Import/Export &gt; should reject invalid settings during import" time="0.000121587">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Provider Deduplication &gt; should deduplicate providers by type" time="0.0002501">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Provider Deduplication &gt; should ensure required default providers exist" time="0.000141687">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Reset to Defaults &gt; should reset all settings to defaults" time="0.000202728">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Migration and Merging &gt; should merge partial user settings with defaults" time="0.000252381">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Migration and Merging &gt; should handle migration of LLM settings" time="0.000295715">
        </testcase>
        <testcase classname="tests/main/config/ConfigManager.test.ts" name="ConfigManager &gt; Migration and Merging &gt; should use defaults when LLM providers are invalid" time="0.000196978">
        </testcase>
    </testsuite>
    <testsuite name="tests/main/llm/LlmManager.test.ts" timestamp="2025-07-05T13:33:07.619Z" hostname="DESKTOP-HR2BSFJ" tests="49" failures="0" errors="0" skipped="0" time="0.022907252">
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Initialization &gt; should initialize successfully" time="0.002604937">
            <system-out>
Initializing LLM Manager
LLM Manager initialized successfully

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Initialization &gt; should set max listeners to 50" time="0.000439654">
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Provider Management &gt; should add Ollama provider" time="0.00087187">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Provider Management &gt; should add OpenRouter provider" time="0.00029543">
            <system-out>
LLM provider added: Test Provider (openrouter)

Health check for test-provider: unhealthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Provider Management &gt; should reject unsupported provider type" time="0.000577665">
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Provider Management &gt; should remove provider" time="0.000493732">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

LLM provider removed: test-provider

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Provider Management &gt; should handle removing non-existent provider" time="0.000115769">
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Provider Management &gt; should update provider config" time="0.001057034">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

LLM provider updated: test-provider

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Provider Management &gt; should throw error when updating non-existent provider" time="0.000260977">
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Provider Management &gt; should check health when provider is enabled" time="0.000273747">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

LLM provider updated: test-provider

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Provider Management &gt; should mark as unhealthy when provider is disabled" time="0.000220927">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

LLM provider updated: test-provider

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Provider Management &gt; should get all providers" time="0.000127857">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Provider Management &gt; should emit events for provider operations" time="0.00076536">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

LLM provider updated: test-provider

LLM provider removed: test-provider

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Health Management &gt; should check provider health" time="0.000233169">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Health Management &gt; should return false for non-existent provider health check" time="0.000306343">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Health Management &gt; should handle health check failures" time="0.000343064">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Health Management &gt; should implement exponential backoff for retries" time="0.000236767">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

Health check for test-provider: unhealthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Health Management &gt; should reset retry count on successful health check" time="0.00034973">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

Health check for test-provider: unhealthy

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Health Management &gt; should check all providers health" time="0.000321443">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

LLM provider added: Test Provider (openrouter)

Health check for openrouter-provider: healthy

Health check for test-provider: healthy
Health check for openrouter-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Health Management &gt; should skip health check for disabled providers" time="0.000109745">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Health Management &gt; should skip health check if retry time not reached" time="0.000150776">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Health Management &gt; should get all provider health" time="0.000205632">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Health Management &gt; should emit health change events" time="0.00036963">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Message Processing &gt; should send message successfully" time="0.001044905">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Message Processing &gt; should merge provider config with options" time="0.000600171">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Message Processing &gt; should throw error for non-existent provider" time="0.000289799">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Message Processing &gt; should throw error for disabled provider" time="0.000223761">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Message Processing &gt; should attempt recovery for unhealthy provider" time="0.000179503">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Message Processing &gt; should throw error if recovery fails" time="0.000196564">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

Health check for test-provider: unhealthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Message Processing &gt; should handle message processing errors" time="0.000272775">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Message Processing &gt; should emit events for message processing" time="0.000475777">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Message Processing &gt; should reset retry count on successful message" time="0.0002262">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Model Management &gt; should get available models" time="0.000651011">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Model Management &gt; should return empty array for non-existent provider" time="0.000324769">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Model Management &gt; should handle model fetching errors" time="0.000392756">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Status and Validation &gt; should get status with enabled providers" time="0.000820781">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

[LlmManager] getStatus: Gathering status for providers...
  → Provider test-provider: name=&quot;Test Provider&quot; type=ollama enabled=true
[LlmManager] getStatus: Processing enabled provider test-provider

    • test-provider health=true models=1
[LlmManager] getStatus: Returning 1 enabled providers

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Status and Validation &gt; should exclude disabled providers from status" time="0.000410612">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

[LlmManager] getStatus: Gathering status for providers...
  → Provider test-provider: name=&quot;Test Provider&quot; type=ollama enabled=false
[LlmManager] getStatus: Returning 0 enabled providers

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Status and Validation &gt; should validate provider model - valid case" time="0.000292778">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Status and Validation &gt; should validate provider model - removed provider" time="0.000365259">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Status and Validation &gt; should validate provider model - disabled provider" time="0.000337427">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Status and Validation &gt; should validate provider model - unhealthy provider" time="0.000323318">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Shutdown &gt; should shutdown cleanly" time="0.000405124">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

Shutting down LLM Manager
LLM Manager shutdown complete

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Shutdown &gt; should remove all listeners on shutdown" time="0.000287071">
            <system-out>
Shutting down LLM Manager
LLM Manager shutdown complete

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Provider ID Generation &gt; should use provided ID" time="0.000244328">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for custom-id: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Provider ID Generation &gt; should generate ID from type and name when not provided" time="0.000343169">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for ollama-test-provider: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Provider ID Generation &gt; should handle names with spaces and special characters" time="0.000260642">
            <system-out>
LLM provider added: Test Provider With Spaces (ollama)

Health check for ollama-test-provider-with-spaces: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Edge Cases &gt; should handle multiple providers of same type" time="0.000407926">
            <system-out>
LLM provider added: Ollama 1 (ollama)

Health check for ollama-1: healthy

LLM provider added: Ollama 2 (ollama)

Health check for ollama-2: healthy

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Edge Cases &gt; should handle provider config updates with undefined values" time="0.000662092">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

LLM provider updated: test-provider

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/LlmManager.test.ts" name="LlmManager &gt; Edge Cases &gt; should handle health check with no initial health status" time="0.000310476">
            <system-out>
LLM provider added: Test Provider (ollama)

Health check for test-provider: healthy

            </system-out>
        </testcase>
    </testsuite>
    <testsuite name="tests/main/mcp/ConnectionManager.test.ts" timestamp="2025-07-05T13:33:07.640Z" hostname="DESKTOP-HR2BSFJ" tests="57" failures="0" errors="0" skipped="0" time="0.192349344">
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Server Lifecycle Management &gt; startServer &gt; should successfully start a STDIO server" time="0.007590186">
            <system-out>
🔍 Race condition check for startServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mfalse[39m,
  currentState: [1mnull[22m,
  totalServers: [33m0[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🚀 Starting MCP server: Test Server (test-server)

MCP server ready: Test Server {
  tools: [ { name: [32m&apos;test-tool&apos;[39m, description: [32m&apos;Test tool&apos;[39m, inputSchema: {} } ]
}

Discovered tools for test-server: [33m1[39m [ [32m&apos;test-tool&apos;[39m ]

Discovered resources for test-server: [33m0[39m

Discovered prompts for test-server: [33m0[39m

✅ Successfully started MCP server: Test Server
🔓 Released operation lock for server test-server

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Server Lifecycle Management &gt; startServer &gt; should successfully start an HTTP server" time="0.002780469">
            <system-out>
🔍 Race condition check for startServer on test-http-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mfalse[39m,
  currentState: [1mnull[22m,
  totalServers: [33m0[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-http-server

🚀 Starting MCP server: Test HTTP Server (test-http-server)

MCP server ready: Test HTTP Server { tools: [] }

Discovered tools for test-http-server: [33m0[39m []

Discovered resources for test-http-server: [33m0[39m

Discovered prompts for test-http-server: [33m0[39m

✅ Successfully started MCP server: Test HTTP Server
🔓 Released operation lock for server test-http-server

🔍 Race condition check for stopServer on test-http-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-http-server

🛑 Stopping MCP server: Test HTTP Server (test-http-server)

✅ Successfully stopped MCP server: Test HTTP Server
🔓 Released operation lock for server test-http-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Server Lifecycle Management &gt; startServer &gt; should handle Windows command resolution" time="0.002230525">
            <system-out>
🔍 Race condition check for startServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mfalse[39m,
  currentState: [1mnull[22m,
  totalServers: [33m0[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🚀 Starting MCP server: Test Server (test-server)

MCP server ready: Test Server { tools: [] }

Discovered tools for test-server: [33m0[39m []

Discovered resources for test-server: [33m0[39m

Discovered prompts for test-server: [33m0[39m

✅ Successfully started MCP server: Test Server
🔓 Released operation lock for server test-server

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Server Lifecycle Management &gt; startServer &gt; should handle command with spaces and quotes" time="0.005032479">
            <system-out>
🔍 Race condition check for startServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mfalse[39m,
  currentState: [1mnull[22m,
  totalServers: [33m0[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🚀 Starting MCP server: Test Server (test-server)

MCP server ready: Test Server { tools: [] }

Discovered tools for test-server: [33m0[39m []

Discovered resources for test-server: [33m0[39m

Discovered prompts for test-server: [33m0[39m

✅ Successfully started MCP server: Test Server
🔓 Released operation lock for server test-server

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Server Lifecycle Management &gt; startServer &gt; should handle maximum server limit" time="0.006084471">
            <system-out>
🔍 Race condition check for startServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mfalse[39m,
  currentState: [1mnull[22m,
  totalServers: [33m8[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🔓 Released operation lock for server test-server

🔍 Race condition check for stopServer on server-0: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m8[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server server-0
🔍 Race condition check for stopServer on server-1: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m8[39m,
  activeLocks: [33m1[39m
}
🔒 Acquired operation lock for server server-1
🔍 Race condition check for stopServer on server-2: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m8[39m,
  activeLocks: [33m2[39m
}
🔒 Acquired operation lock for server server-2
🔍 Race condition check for stopServer on server-3: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m8[39m,
  activeLocks: [33m3[39m
}
🔒 Acquired operation lock for server server-3
🔍 Race condition check for stopServer on server-4: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m8[39m,
  activeLocks: [33m4[39m
}
🔒 Acquired operation lock for server server-4
🔍 Race condition check for stopServer on server-5: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m8[39m,
  activeLocks: [33m5[39m
}
🔒 Acquired operation lock for server server-5
🔍 Race condition check for stopServer on server-6: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m8[39m,
  activeLocks: [33m6[39m
}
🔒 Acquired operation lock for server server-6
🔍 Race condition check for stopServer on server-7: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m8[39m,
  activeLocks: [33m7[39m
}
🔒 Acquired operation lock for server server-7
🛑 Stopping MCP server: Server 0 (server-0)
🛑 Stopping MCP server: Server 1 (server-1)
🛑 Stopping MCP server: Server 2 (server-2)
🛑 Stopping MCP server: Server 3 (server-3)
🛑 Stopping MCP server: Server 4 (server-4)
🛑 Stopping MCP server: Server 5 (server-5)
🛑 Stopping MCP server: Server 6 (server-6)
🛑 Stopping MCP server: Server 7 (server-7)

✅ Successfully stopped MCP server: Server 0
🔓 Released operation lock for server server-0

✅ Successfully stopped MCP server: Server 1
🔓 Released operation lock for server server-1

✅ Successfully stopped MCP server: Server 2
🔓 Released operation lock for server server-2

✅ Successfully stopped MCP server: Server 3
🔓 Released operation lock for server server-3

✅ Successfully stopped MCP server: Server 4
🔓 Released operation lock for server server-4

✅ Successfully stopped MCP server: Server 5
🔓 Released operation lock for server server-5

✅ Successfully stopped MCP server: Server 6
🔓 Released operation lock for server server-6

✅ Successfully stopped MCP server: Server 7
🔓 Released operation lock for server server-7

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Server Lifecycle Management &gt; startServer &gt; should handle server already running" time="0.002166749">
            <system-out>
🔍 Race condition check for startServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🔓 Released operation lock for server test-server

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Server Lifecycle Management &gt; startServer &gt; should handle MCP SDK loading failure" time="0.001640807">
            <system-out>
🔍 Race condition check for startServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mfalse[39m,
  currentState: [1mnull[22m,
  totalServers: [33m0[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🚀 Starting MCP server: Test Server (test-server)

🔓 Released operation lock for server test-server

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;failed&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)
✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Server Lifecycle Management &gt; startServer &gt; should handle client connection failure" time="0.001663165">
            <system-out>
🔍 Race condition check for startServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mfalse[39m,
  currentState: [1mnull[22m,
  totalServers: [33m0[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🚀 Starting MCP server: Test Server (test-server)

🔓 Released operation lock for server test-server

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;failed&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)
✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Server Lifecycle Management &gt; startServer &gt; should handle missing command for STDIO transport" time="0.001289457">
            <system-out>
🔍 Race condition check for startServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mfalse[39m,
  currentState: [1mnull[22m,
  totalServers: [33m0[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🚀 Starting MCP server: Test Server (test-server)

🔓 Released operation lock for server test-server

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;failed&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)
✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Server Lifecycle Management &gt; startServer &gt; should set up environment variables correctly" time="0.003043879">
            <system-out>
🔍 Race condition check for startServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mfalse[39m,
  currentState: [1mnull[22m,
  totalServers: [33m0[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🚀 Starting MCP server: Test Server (test-server)

MCP server ready: Test Server { tools: [] }

Discovered tools for test-server: [33m0[39m []

Discovered resources for test-server: [33m0[39m

Discovered prompts for test-server: [33m0[39m

✅ Successfully started MCP server: Test Server
🔓 Released operation lock for server test-server

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Server Lifecycle Management &gt; stopServer &gt; should successfully stop a running server" time="0.002610122">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Server Lifecycle Management &gt; stopServer &gt; should handle stopping non-existent server gracefully" time="0.001368737">
            <system-out>
🔍 Race condition check for stopServer on non-existent: {
  hasLock: [33mfalse[39m,
  serverExists: [33mfalse[39m,
  currentState: [1mnull[22m,
  totalServers: [33m0[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server non-existent

🔓 Released operation lock for server non-existent

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Server Lifecycle Management &gt; stopServer &gt; should handle client close failure" time="0.003278972">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Server Lifecycle Management &gt; stopServer &gt; should kill process if client close fails" time="0.00259213">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Server Lifecycle Management &gt; stopAllServers &gt; should stop all running servers" time="0.002677462">
            <system-out>
🔍 Race condition check for stopServer on server1: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m3[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server server1
🔍 Race condition check for stopServer on server2: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m3[39m,
  activeLocks: [33m1[39m
}
🔒 Acquired operation lock for server server2
🔍 Race condition check for stopServer on server3: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m3[39m,
  activeLocks: [33m2[39m
}
🔒 Acquired operation lock for server server3
🛑 Stopping MCP server: Test Server (server1)
🛑 Stopping MCP server: Test Server (server2)
🛑 Stopping MCP server: Test Server (server3)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server server1

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server server2

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server server3

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Tool Management &gt; executeTool &gt; should execute a tool with permission" time="0.005826097">
            <system-out>
Executing tool test-tool on server test-server { args: { arg1: [32m&apos;value1&apos;[39m } }

Tool execution completed for test-tool { result: { result: [32m&apos;success&apos;[39m } }

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Tool Management &gt; executeTool &gt; should reject when server not found" time="0.003585967">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Tool Management &gt; executeTool &gt; should reject when server not ready" time="0.00339624">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;starting&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Tool Management &gt; executeTool &gt; should reject when tool not found" time="0.003505624">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Tool Management &gt; executeTool &gt; should reject when permission denied" time="0.003888082">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Tool Management &gt; executeTool &gt; should handle tool execution errors" time="0.003525919">
            <system-out>
Executing tool test-tool on server test-server { args: {} }

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Tool Management &gt; getAvailableTools &gt; should return tools for a specific server" time="0.008506425">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Tool Management &gt; getAvailableTools &gt; should return empty array for non-existent server" time="0.005594008">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Tool Management &gt; getAvailableTools &gt; should return empty array for server without tools" time="0.003449904">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Tool Management &gt; getAllAvailableTools &gt; should return tools from all servers" time="0.004473773">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m2[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server
🔍 Race condition check for stopServer on server2: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m2[39m,
  activeLocks: [33m1[39m
}
🔒 Acquired operation lock for server server2
🛑 Stopping MCP server: Test Server (test-server)
🛑 Stopping MCP server: Test Server (server2)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server server2

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Resource Management &gt; readResource &gt; should read a resource successfully" time="0.003101885">
            <system-out>
Reading resource file://test.txt from server test-server

Resource read completed for file://test.txt

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Resource Management &gt; readResource &gt; should reject when server not found" time="0.002831066">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Resource Management &gt; readResource &gt; should reject when server not ready" time="0.003149596">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;starting&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Resource Management &gt; readResource &gt; should handle read errors" time="0.004871684">
            <system-out>
Reading resource file://test.txt from server test-server

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Resource Management &gt; subscribeToResource &gt; should subscribe to a resource successfully" time="0.008446769">
            <system-out>
Subscribed to resource file://test.txt on test-server

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Resource Management &gt; subscribeToResource &gt; should handle already subscribed resources" time="0.003449581">
            <system-out>
Already subscribed to resource file://test.txt on test-server

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Resource Management &gt; subscribeToResource &gt; should handle subscription errors" time="0.005105001">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Resource Management &gt; unsubscribeFromResource &gt; should unsubscribe from a resource successfully" time="0.0027502">
            <system-out>
Unsubscribed from resource file://test.txt on test-server

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Resource Management &gt; unsubscribeFromResource &gt; should handle not subscribed resources" time="0.003195145">
            <system-out>
Unsubscribed from resource file://test.txt on test-server

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Resource Management &gt; getAvailableResources &gt; should return resources for a specific server" time="0.00390671">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Resource Management &gt; getAvailableResources &gt; should return empty array for non-existent server" time="0.003875647">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Resource Management &gt; getAllAvailableResources &gt; should return resources from all servers" time="0.003266144">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m2[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server
🔍 Race condition check for stopServer on server2: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m2[39m,
  activeLocks: [33m1[39m
}
🔒 Acquired operation lock for server server2
🛑 Stopping MCP server: Test Server (test-server)
🛑 Stopping MCP server: Test Server (server2)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server server2

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Prompt Management &gt; executePrompt &gt; should execute a prompt successfully" time="0.00540908">
            <system-out>
Executing prompt test-prompt on server test-server { args: { arg1: [32m&apos;value1&apos;[39m } }

Prompt execution completed for test-prompt

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Prompt Management &gt; executePrompt &gt; should execute prompt without arguments" time="0.003307653">
            <system-out>
Executing prompt test-prompt on server test-server { args: [90mundefined[39m }

Prompt execution completed for test-prompt

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Prompt Management &gt; executePrompt &gt; should reject when server not found" time="0.002660249">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Prompt Management &gt; executePrompt &gt; should reject when prompt not found" time="0.002884478">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Prompt Management &gt; executePrompt &gt; should handle prompt execution errors" time="0.002606003">
            <system-out>
Executing prompt test-prompt on server test-server { args: [90mundefined[39m }

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Prompt Management &gt; getAvailablePrompts &gt; should return prompts for a specific server" time="0.00261995">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Prompt Management &gt; getAvailablePrompts &gt; should return empty array for non-existent server" time="0.003781558">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Prompt Management &gt; getAllAvailablePrompts &gt; should return prompts from all servers" time="0.002899535">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m2[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server
🔍 Race condition check for stopServer on server2: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m2[39m,
  activeLocks: [33m1[39m
}
🔒 Acquired operation lock for server server2
🛑 Stopping MCP server: Test Server (test-server)
🛑 Stopping MCP server: Test Server (server2)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server server2

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; State Management &gt; should get server state" time="0.002907583">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; State Management &gt; should return null for non-existent server state" time="0.000844985">
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; State Management &gt; should get all server states" time="0.00343434">
            <system-out>
🔍 Race condition check for stopServer on server1: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m2[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server server1
🔍 Race condition check for stopServer on server2: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;starting&apos;[39m,
  totalServers: [33m2[39m,
  activeLocks: [33m1[39m
}
🔒 Acquired operation lock for server server2
🛑 Stopping MCP server: Test Server (server1)
🛑 Stopping MCP server: Test Server (server2)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server server1

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server server2

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Advanced Features &gt; sampleLLM &gt; should handle LLM sampling requests" time="0.003218945">
            <system-out>
Warning: sampleLLM called directly - this should go through normal tool execution

Executing tool sampleLLM on server test-server {
  args: {
    messages: [ [36m[Object][39m ],
    maxTokens: [33m100[39m,
    temperature: [33m0.7[39m,
    stopSequences: [90mundefined[39m,
    modelPreferences: [90mundefined[39m
  }
}

Tool execution completed for sampleLLM { result: { content: [32m&apos;LLM response&apos;[39m } }

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Advanced Features &gt; sampleLLM &gt; should reject when server not found" time="0.00129807">
            <system-out>
Warning: sampleLLM called directly - this should go through normal tool execution

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Advanced Features &gt; sampleLLM &gt; should handle sampling errors gracefully" time="0.00275888">
            <system-out>
Warning: sampleLLM called directly - this should go through normal tool execution

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Advanced Features &gt; Discovery Methods &gt; should discover tools correctly" time="0.001067672">
            <system-out>
Discovered tools for test-server: [33m2[39m [ [32m&apos;tool1&apos;[39m, [32m&apos;tool2&apos;[39m ]

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Advanced Features &gt; Discovery Methods &gt; should discover resources correctly" time="0.000936431">
            <system-out>
Discovered resources for test-server: [33m2[39m

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Advanced Features &gt; Discovery Methods &gt; should discover prompts correctly" time="0.000780562">
            <system-out>
Discovered prompts for test-server: [33m2[39m

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Advanced Features &gt; Discovery Methods &gt; should handle discovery errors gracefully" time="0.000554271">
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Advanced Features &gt; Resource Refresh &gt; should refresh server resources" time="0.00323204">
            <system-out>
Discovered resources for test-server: [33m1[39m

🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
        <testcase classname="tests/main/mcp/ConnectionManager.test.ts" name="ServerManager &gt; Advanced Features &gt; Resource Refresh &gt; should handle refresh errors gracefully" time="0.002396911">
            <system-out>
🔍 Race condition check for stopServer on test-server: {
  hasLock: [33mfalse[39m,
  serverExists: [33mtrue[39m,
  currentState: [32m&apos;ready&apos;[39m,
  totalServers: [33m1[39m,
  activeLocks: [33m0[39m
}
🔒 Acquired operation lock for server test-server

🛑 Stopping MCP server: Test Server (test-server)

✅ Successfully stopped MCP server: Test Server
🔓 Released operation lock for server test-server

            </system-out>
        </testcase>
    </testsuite>
    <testsuite name="tests/main/permissions/PermissionManager.test.ts" timestamp="2025-07-05T13:33:07.665Z" hostname="DESKTOP-HR2BSFJ" tests="18" failures="0" errors="0" skipped="0" time="0.012131983">
        <testcase classname="tests/main/permissions/PermissionManager.test.ts" name="PermissionManager &gt; Initialization &gt; should initialize with default settings" time="0.004102134">
        </testcase>
        <testcase classname="tests/main/permissions/PermissionManager.test.ts" name="PermissionManager &gt; Initialization &gt; should set max listeners to 50" time="0.000931424">
        </testcase>
        <testcase classname="tests/main/permissions/PermissionManager.test.ts" name="PermissionManager &gt; Auto-Approval &gt; should auto-approve for trusted servers" time="0.00100205">
        </testcase>
        <testcase classname="tests/main/permissions/PermissionManager.test.ts" name="PermissionManager &gt; Auto-Approval &gt; should auto-approve based on risk level settings" time="0.000260787">
        </testcase>
        <testcase classname="tests/main/permissions/PermissionManager.test.ts" name="PermissionManager &gt; Permission Management API &gt; should revoke permissions" time="0.000523759">
        </testcase>
        <testcase classname="tests/main/permissions/PermissionManager.test.ts" name="PermissionManager &gt; Permission Management API &gt; should handle revoking non-existent permissions" time="0.000208522">
        </testcase>
        <testcase classname="tests/main/permissions/PermissionManager.test.ts" name="PermissionManager &gt; Permission Management API &gt; should clear all permissions" time="0.000211638">
        </testcase>
        <testcase classname="tests/main/permissions/PermissionManager.test.ts" name="PermissionManager &gt; Permission Management API &gt; should update settings" time="0.000211626">
        </testcase>
        <testcase classname="tests/main/permissions/PermissionManager.test.ts" name="PermissionManager &gt; Permission Management API &gt; should manage trusted servers" time="0.00070042">
        </testcase>
        <testcase classname="tests/main/permissions/PermissionManager.test.ts" name="PermissionManager &gt; Session Management &gt; should clear session permissions" time="0.000231282">
        </testcase>
        <testcase classname="tests/main/permissions/PermissionManager.test.ts" name="PermissionManager &gt; Approval Request Handling &gt; should timeout approval requests" time="0.000635003">
        </testcase>
        <testcase classname="tests/main/permissions/PermissionManager.test.ts" name="PermissionManager &gt; Approval Request Handling &gt; should handle invalid approval responses" time="0.000241726">
        </testcase>
        <testcase classname="tests/main/permissions/PermissionManager.test.ts" name="PermissionManager &gt; Approval Request Handling &gt; should emit permission request events" time="0.000377902">
        </testcase>
        <testcase classname="tests/main/permissions/PermissionManager.test.ts" name="PermissionManager &gt; Shutdown &gt; should clean up all resources on shutdown" time="0.000281597">
        </testcase>
        <testcase classname="tests/main/permissions/PermissionManager.test.ts" name="PermissionManager &gt; Edge Cases &gt; should handle empty permission key generation" time="0.000197014">
        </testcase>
        <testcase classname="tests/main/permissions/PermissionManager.test.ts" name="PermissionManager &gt; Edge Cases &gt; should handle session key generation with various inputs" time="0.000132914">
        </testcase>
        <testcase classname="tests/main/permissions/PermissionManager.test.ts" name="PermissionManager &gt; Edge Cases &gt; should handle argument hashing with special characters" time="0.000140639">
        </testcase>
        <testcase classname="tests/main/permissions/PermissionManager.test.ts" name="PermissionManager &gt; Edge Cases &gt; should handle argument hashing with undefined/null values" time="0.00014677">
        </testcase>
    </testsuite>
    <testsuite name="tests/main/security/SecureStorage.test.ts" timestamp="2025-07-05T13:33:07.668Z" hostname="DESKTOP-HR2BSFJ" tests="22" failures="0" errors="0" skipped="0" time="0.008361912">
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; Initialization &gt; should create singleton instance" time="0.002173636">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; Initialization &gt; should check encryption availability" time="0.000599795">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; Initialization &gt; should handle encryption not available" time="0.000157528">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; Encryption and Decryption &gt; should encrypt string successfully" time="0.000759731">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; Encryption and Decryption &gt; should decrypt string successfully" time="0.000599501">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; Encryption and Decryption &gt; should return plain text when encryption is not available" time="0.000286301">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; Encryption and Decryption &gt; should return plain text when decrypting non-encrypted data" time="0.000159532">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; Encryption and Decryption &gt; should handle encryption errors gracefully" time="0.000223789">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; Encryption and Decryption &gt; should handle decryption errors gracefully" time="0.000271115">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; API Key Management Methods &gt; should migrate plain text to encrypted format" time="0.000228725">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; API Key Management Methods &gt; should return original value if already encrypted" time="0.000142666">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; API Key Management Methods &gt; should get plain text value from encrypted storage" time="0.000155633">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; API Key Management Methods &gt; should return plain text value as-is" time="0.000083982">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; API Key Management Methods &gt; should return empty string for empty input" time="0.000059725">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; API Key Management Methods &gt; should detect encrypted values correctly" time="0.000119826">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; Validation &gt; should validate encryption successfully" time="0.000161434">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; Validation &gt; should fail validation when encryption is not available" time="0.000073747">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; Validation &gt; should fail validation on encryption error" time="0.000111885">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; Validation &gt; should fail validation on data mismatch" time="0.000092217">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; Edge Cases &gt; should handle empty strings in getPlainTextValue" time="0.000068156">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; Edge Cases &gt; should handle decryption failure gracefully in getPlainTextValue" time="0.000080643">
        </testcase>
        <testcase classname="tests/main/security/SecureStorage.test.ts" name="SecureStorage &gt; Edge Cases &gt; should return plain text on failed encryption during migration" time="0.000081013">
        </testcase>
    </testsuite>
    <testsuite name="tests/renderer/components/ErrorBoundary.test.tsx" timestamp="2025-07-05T13:33:07.671Z" hostname="DESKTOP-HR2BSFJ" tests="13" failures="0" errors="0" skipped="0" time="0.116986616">
        <testcase classname="tests/renderer/components/ErrorBoundary.test.tsx" name="ErrorBoundary &gt; should render children when there is no error" time="0.026284464">
        </testcase>
        <testcase classname="tests/renderer/components/ErrorBoundary.test.tsx" name="ErrorBoundary &gt; should catch errors and display error UI" time="0.030143269">
            <system-out>
🚨 React Error Boundary: Test

📤 Reported error to main process: error_1751722387341_8o8jdsi49

            </system-out>
            <system-err>
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m

            </system-err>
        </testcase>
        <testcase classname="tests/renderer/components/ErrorBoundary.test.tsx" name="ErrorBoundary &gt; should display custom fallback when provided" time="0.005217181">
            <system-out>
🚨 React Error Boundary: Test

📤 Reported error to main process: error_1751722387353_q20vjpaq4

            </system-out>
            <system-err>
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m

            </system-err>
        </testcase>
        <testcase classname="tests/renderer/components/ErrorBoundary.test.tsx" name="ErrorBoundary &gt; should call onError callback when provided" time="0.011001056">
            <system-out>
🚨 React Error Boundary: Test

📤 Reported error to main process: error_1751722387363_0vh6i8oct

            </system-out>
            <system-err>
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m

            </system-err>
        </testcase>
        <testcase classname="tests/renderer/components/ErrorBoundary.test.tsx" name="ErrorBoundary &gt; should generate unique error ID" time="0.007622464">
            <system-out>
🚨 React Error Boundary: Test1
🚨 React Error Boundary: Test2
📤 Reported error to main process: error_1751722387371_jpjclywlv
📤 Reported error to main process: error_1751722387372_4k622gs04

            </system-out>
            <system-err>
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m

            </system-err>
        </testcase>
        <testcase classname="tests/renderer/components/ErrorBoundary.test.tsx" name="ErrorBoundary &gt; should report error to main process" time="0.00563359">
            <system-out>
🚨 React Error Boundary: Test

📤 Reported error to main process: error_1751722387377_57iuvjafi

            </system-out>
            <system-err>
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m

            </system-err>
        </testcase>
        <testcase classname="tests/renderer/components/ErrorBoundary.test.tsx" name="ErrorBoundary &gt; should handle error reporting failure gracefully" time="0.00560611">
            <system-out>
🚨 React Error Boundary: Test

            </system-out>
            <system-err>
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m

            </system-err>
        </testcase>
        <testcase classname="tests/renderer/components/ErrorBoundary.test.tsx" name="ErrorBoundary &gt; should show debug information in development" time="0.004849712">
            <system-out>
🚨 React Error Boundary: Test

📤 Reported error to main process: error_1751722387388_bnu44f0hr

            </system-out>
            <system-err>
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m

            </system-err>
        </testcase>
        <testcase classname="tests/renderer/components/ErrorBoundary.test.tsx" name="ErrorBoundary &gt; should hide debug information in production" time="0.003896917">
            <system-out>
🚨 React Error Boundary: Test

📤 Reported error to main process: error_1751722387393_paqcgrame

            </system-out>
            <system-err>
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m

            </system-err>
        </testcase>
        <testcase classname="tests/renderer/components/ErrorBoundary.test.tsx" name="ComponentErrorBoundary &gt; should render component-specific error message" time="0.003125713">
            <system-out>
🚨 React Error Boundary: TestComponent

📤 Reported error to main process: error_1751722387397_a48uaon3e

            </system-out>
            <system-err>
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m

            </system-err>
        </testcase>
        <testcase classname="tests/renderer/components/ErrorBoundary.test.tsx" name="ComponentErrorBoundary &gt; should use custom fallback when provided" time="0.00496668">
            <system-out>
🚨 React Error Boundary: TestComponent

📤 Reported error to main process: error_1751722387399_7b2ungs9s

            </system-out>
            <system-err>
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m

            </system-err>
        </testcase>
        <testcase classname="tests/renderer/components/ErrorBoundary.test.tsx" name="LazyErrorBoundary &gt; should render lazy component-specific error message" time="0.003019663">
            <system-out>
🚨 React Error Boundary: Lazy-LazyComponent

📤 Reported error to main process: error_1751722387405_lib0dbm8h

            </system-out>
            <system-err>
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m

            </system-err>
        </testcase>
        <testcase classname="tests/renderer/components/ErrorBoundary.test.tsx" name="Error boundary retry functionality &gt; should show retry button when error occurs" time="0.004041892">
            <system-out>
🚨 React Error Boundary: Test

📤 Reported error to main process: error_1751722387407_t0073hs8w

            </system-out>
            <system-err>
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m
Error: Uncaught [Error: Test error]
    at reportException (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:66:24)
    at innerInvokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:353:9)
    at invokeEventListeners (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:286:3)
    at HTMLUnknownElementImpl._dispatch (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:233:9)
    at HTMLUnknownElementImpl.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:104:17)
    at HTMLUnknownElement.dispatchEvent (/home/galat/projects/Nexus/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:241:34)
    at Object.invokeGuardedCallbackDev (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4213:16)
    at invokeGuardedCallback (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:4277:31)
    at beginWork$1 (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:27490:7)
    at performUnitOfWork (/home/galat/projects/Nexus/node_modules/react-dom/cjs/react-dom.development.js:26599:12) Error: Test error
    at ThrowingComponent [90m(/home/galat/projects/Nexus/[39mtests/renderer/components/ErrorBoundary.test.tsx:28:11[90m)[39m
    at renderWithHooks [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:15486:18[90m)[39m
    at mountIndeterminateComponent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:20103:13[90m)[39m
    at beginWork [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:21626:16[90m)[39m
    at HTMLUnknownElement.callCallback [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14[90m)[39m
    at HTMLUnknownElement.callTheUserObjectsOperation [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30[90m)[39m
    at innerInvokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25[90m)[39m
    at invokeEventListeners [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3[90m)[39m
    at HTMLUnknownElementImpl._dispatch [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9[90m)[39m
    at HTMLUnknownElementImpl.dispatchEvent [90m(/home/galat/projects/Nexus/[39mnode_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:104:17[90m)[39m

            </system-err>
        </testcase>
    </testsuite>
    <testsuite name="tests/renderer/components/SessionSidebar.test.tsx" timestamp="2025-07-05T13:33:07.677Z" hostname="DESKTOP-HR2BSFJ" tests="1" failures="0" errors="0" skipped="0" time="0.052707717">
        <testcase classname="tests/renderer/components/SessionSidebar.test.tsx" name="SessionSidebar &gt; creates a new chat when clicking + New Chat" time="0.05146468">
            <system-out>
SessionManager: No app storage found, checking for legacy chat history...
SessionManager: No legacy data found, creating default storage
SessionContext: Loading initial session data...
SessionContext: Loaded [33m0[39m sessions, current: [90mundefined[39m
SessionContext: Creating new session with options: {}
SessionManager: Created new session: session_1751722387331_6pope4u1s
SessionContext: Created and switched to new session: session_1751722387331_6pope4u1s

            </system-out>
        </testcase>
    </testsuite>
    <testsuite name="tests/main/llm/providers/OllamaProvider.test.ts" timestamp="2025-07-05T13:33:07.677Z" hostname="DESKTOP-HR2BSFJ" tests="45" failures="0" errors="0" skipped="0" time="0.024418025">
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Constructor &gt; should initialize with provided config" time="0.001909625">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Constructor &gt; should use default URL when none provided" time="0.000320649">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Connection Testing &gt; should test connection successfully" time="0.003148159">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Connection Testing &gt; should handle connection refused error" time="0.000422461">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Connection Testing &gt; should handle connection error with cause" time="0.000361419">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Connection Testing &gt; should handle HTTP errors" time="0.000281872">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Connection Testing &gt; should handle timeout errors" time="0.000337418">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Model Management &gt; should get available models successfully" time="0.001368191">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Model Management &gt; should handle empty model list" time="0.000670772">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Model Management &gt; should handle missing models property" time="0.000460386">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Model Management &gt; should handle connection error when getting models" time="0.001277316">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Model Management &gt; should handle HTTP error when getting models" time="0.000426127">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Model Management &gt; should format sizes correctly" time="0.000258294">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Message Sending &gt; should send message successfully" time="0.000793304">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Message Sending &gt; should send message with custom options" time="0.000469008">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Message Sending &gt; should send message with tools" time="0.000573365">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Message Sending &gt; should handle HTTP error when sending message" time="0.000290977">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Message Sending &gt; should handle network error when sending message" time="0.000327642">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Message Sending &gt; should handle finish reason based on done status" time="0.000187821">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Message Streaming &gt; should stream message successfully" time="0.000862054">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Message Streaming &gt; should handle streaming with custom options" time="0.000530638">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Message Streaming &gt; should handle HTTP error when streaming" time="0.000357939">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Message Streaming &gt; should handle missing response body when streaming" time="0.000345597">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Message Streaming &gt; should handle invalid JSON in streaming response" time="0.000455761">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Message Streaming &gt; should handle incomplete streaming data" time="0.000829747">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Message Streaming &gt; should release reader lock even on error" time="0.000552625">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Model Download &gt; should download model successfully" time="0.000800397">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Model Download &gt; should download model without progress callback" time="0.000519565">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Model Download &gt; should handle HTTP error when downloading" time="0.000346294">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Model Download &gt; should handle missing response body when downloading" time="0.00045844">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Model Download &gt; should handle invalid JSON in download response" time="0.000606027">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Model Download &gt; should release reader lock even on download error" time="0.000487677">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Model Deletion &gt; should delete model successfully" time="0.000435194">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Model Deletion &gt; should handle HTTP error when deleting model" time="0.000165166">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Model Deletion &gt; should handle network error when deleting model" time="0.000129313">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Message Formatting &gt; should format regular messages correctly" time="0.00009497">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Message Formatting &gt; should format tool response messages correctly" time="0.000069719">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Message Formatting &gt; should format messages with tool calls correctly" time="0.000070239">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Error Handling &gt; should handle timeout errors properly" time="0.000064185">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Error Handling &gt; should handle connection refused errors" time="0.000052411">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Error Handling &gt; should handle authentication errors" time="0.000051174">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Error Handling &gt; should handle rate limit errors" time="0.00004567">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Error Handling &gt; should handle server errors" time="0.000045343">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Error Handling &gt; should handle unknown errors" time="0.000042885">
        </testcase>
        <testcase classname="tests/main/llm/providers/OllamaProvider.test.ts" name="OllamaProvider &gt; Error Handling &gt; should handle non-Error objects" time="0.000049361">
        </testcase>
    </testsuite>
    <testsuite name="tests/main/llm/providers/OpenRouterProvider.test.ts" timestamp="2025-07-05T13:33:07.683Z" hostname="DESKTOP-HR2BSFJ" tests="46" failures="0" errors="0" skipped="0" time="0.019173193">
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Constructor &gt; should initialize with provided config" time="0.000847828">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Connection Testing &gt; should test connection successfully with valid API key" time="0.001568947">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Connection Testing &gt; should fail connection test without API key" time="0.000723697">
            <system-out>
Provider config updated: Test OpenRouter

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Connection Testing &gt; should handle HTTP errors during connection test" time="0.000145585">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Connection Testing &gt; should handle network errors during connection test" time="0.000204833">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Connection Testing &gt; should handle timeout during connection test" time="0.00013159">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Model Management &gt; should get available models successfully" time="0.000680779">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Model Management &gt; should handle models without description" time="0.000245363">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Model Management &gt; should handle error when API key is missing" time="0.000867736">
            <system-out>
Provider config updated: Test OpenRouter

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Model Management &gt; should handle HTTP error when getting models" time="0.000231273">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Model Management &gt; should handle network error when getting models" time="0.000196288">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Message Sending &gt; should send message successfully" time="0.000868912">
            <system-out>
OpenRouter: Response received: {
  hasContent: [33mtrue[39m,
  hasToolCalls: [33mfalse[39m,
  toolCallsCount: [33m0[39m,
  toolCalls: [90mundefined[39m,
  finishReason: [32m&apos;stop&apos;[39m
}

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Message Sending &gt; should send message with custom options" time="0.000440096">
            <system-out>
OpenRouter: Response received: {
  hasContent: [33mtrue[39m,
  hasToolCalls: [33mfalse[39m,
  toolCallsCount: [33m0[39m,
  toolCalls: [90mundefined[39m,
  finishReason: [32m&apos;stop&apos;[39m
}

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Message Sending &gt; should send message with tools" time="0.000668634">
            <system-out>
OpenRouter: Sending tools: { count: [33m1[39m, toolNames: [ [32m&apos;get_weather&apos;[39m ] }

OpenRouter: Response received: {
  hasContent: [33mtrue[39m,
  hasToolCalls: [33mtrue[39m,
  toolCallsCount: [33m1[39m,
  toolCalls: [ { id: [32m&apos;call_123&apos;[39m, type: [32m&apos;function&apos;[39m, function: [36m[Object][39m } ],
  finishReason: [32m&apos;tool_calls&apos;[39m
}

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Message Sending &gt; should handle missing API key" time="0.000206266">
            <system-out>
Provider config updated: Test OpenRouter

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Message Sending &gt; should handle HTTP error response" time="0.000171805">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Message Sending &gt; should handle missing choices in response" time="0.000192459">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Message Sending &gt; should handle response with empty content" time="0.000243923">
            <system-out>
OpenRouter: Response received: {
  hasContent: [33mfalse[39m,
  hasToolCalls: [33mfalse[39m,
  toolCallsCount: [33m0[39m,
  toolCalls: [90mundefined[39m,
  finishReason: [32m&apos;stop&apos;[39m
}

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Message Sending &gt; should handle network error" time="0.000168819">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Message Streaming &gt; should stream message successfully" time="0.000854488">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Message Streaming &gt; should handle streaming with custom options" time="0.000664875">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Message Streaming &gt; should handle missing API key during streaming" time="0.000741045">
            <system-out>
Provider config updated: Test OpenRouter

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Message Streaming &gt; should handle HTTP error during streaming" time="0.000587044">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Message Streaming &gt; should handle missing response body during streaming" time="0.000351219">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Message Streaming &gt; should handle invalid JSON in streaming response" time="0.000845128">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Message Streaming &gt; should handle incomplete streaming data" time="0.000552609">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Message Streaming &gt; should release reader lock even on error" time="0.000545848">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Model Info &gt; should get model info successfully" time="0.000581576">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Model Info &gt; should return null for non-existent model" time="0.000223532">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Model Info &gt; should handle missing API key" time="0.000467806">
            <system-out>
Provider config updated: Test OpenRouter

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Model Info &gt; should handle HTTP errors other than 404" time="0.000217055">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Model Info &gt; should handle network errors" time="0.000217342">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Credit Balance &gt; should get credit balance successfully" time="0.000622669">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Credit Balance &gt; should return null when no API key configured" time="0.000330667">
            <system-out>
Provider config updated: Test OpenRouter

            </system-out>
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Credit Balance &gt; should return null on HTTP error" time="0.000179585">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Credit Balance &gt; should return null when credit_balance is missing" time="0.000217125">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Credit Balance &gt; should handle network errors" time="0.000158188">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Message Formatting &gt; should format regular messages correctly" time="0.000114221">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Message Formatting &gt; should format tool response messages correctly" time="0.000082132">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Message Formatting &gt; should format messages with tool calls correctly" time="0.000074731">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Error Handling &gt; should handle insufficient credits error" time="0.000079284">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Error Handling &gt; should handle rate limit error" time="0.000051761">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Error Handling &gt; should handle model validation error" time="0.000056893">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Error Handling &gt; should handle timeout errors" time="0.000055678">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Error Handling &gt; should handle timeout message errors" time="0.000085463">
        </testcase>
        <testcase classname="tests/main/llm/providers/OpenRouterProvider.test.ts" name="OpenRouterProvider &gt; Error Handling &gt; should fall back to base error handling" time="0.000057135">
        </testcase>
    </testsuite>
    <testsuite name="tests/renderer/components/MCP/McpIntegration.test.tsx" timestamp="2025-07-05T13:33:07.690Z" hostname="DESKTOP-HR2BSFJ" tests="27" failures="0" errors="0" skipped="0" time="0.326462672">
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Initial Rendering and Loading &gt; renders without crashing" time="0.030349723">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Initial Rendering and Loading &gt; shows loading state initially" time="0.007791654">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Initial Rendering and Loading &gt; loads and displays servers successfully" time="0.01899796">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Initial Rendering and Loading &gt; displays empty state when no servers configured" time="0.050074329">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Initial Rendering and Loading &gt; displays error state when loading fails" time="0.009461203">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Initial Rendering and Loading &gt; handles network errors during loading" time="0.004242251">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Server Display and Status &gt; displays server status badges correctly" time="0.008050571">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Server Display and Status &gt; displays transport information correctly" time="0.008477259">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Server Display and Status &gt; displays status icons correctly" time="0.008181112">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Server Management Actions &gt; toggles server enabled state successfully" time="0.013293001">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Server Management Actions &gt; handles server toggle errors" time="0.01113496">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Server Management Actions &gt; removes server with confirmation" time="0.013347268">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Server Management Actions &gt; cancels server removal when user declines confirmation" time="0.007913332">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Server Management Actions &gt; handles server removal errors" time="0.012447237">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Server Wizard Integration &gt; opens server wizard when add server button is clicked" time="0.017726455">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Server Wizard Integration &gt; opens wizard from empty state" time="0.017127126">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Server Wizard Integration &gt; refreshes server list when server is added via wizard" time="0.015523609">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Error Handling and Edge Cases &gt; handles undefined server data gracefully" time="0.002804361">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Error Handling and Edge Cases &gt; handles malformed server data" time="0.002897394">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Error Handling and Edge Cases &gt; retries loading on initial failure with user action" time="0.004069118">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Error Handling and Edge Cases &gt; handles rapid server state changes" time="0.015407512">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Accessibility and UX &gt; has proper ARIA labels and roles" time="0.010543858">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Accessibility and UX &gt; supports keyboard navigation" time="0.007962278">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Accessibility and UX &gt; provides clear loading states" time="0.008852616">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Accessibility and UX &gt; provides clear error messages" time="0.00642063">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Integration with Settings &gt; calls onSettingsUpdate when servers change" time="0.007848603">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpIntegration.test.tsx" name="McpIntegration &gt; Integration with Settings &gt; reloads servers when settings prop changes" time="0.00393383">
        </testcase>
    </testsuite>
    <testsuite name="tests/renderer/components/MCP/McpServerWizard.test.tsx" timestamp="2025-07-05T13:33:07.694Z" hostname="DESKTOP-HR2BSFJ" tests="13" failures="0" errors="0" skipped="0" time="0.218261789">
        <testcase classname="tests/renderer/components/MCP/McpServerWizard.test.tsx" name="McpServerWizard &gt; Basic Rendering &gt; renders without crashing when open" time="0.049718458">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpServerWizard.test.tsx" name="McpServerWizard &gt; Basic Rendering &gt; does not render when closed" time="0.002040851">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpServerWizard.test.tsx" name="McpServerWizard &gt; Basic Rendering &gt; displays wizard steps" time="0.02215018">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpServerWizard.test.tsx" name="McpServerWizard &gt; Form Validation &gt; validates server name is required" time="0.056182256">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpServerWizard.test.tsx" name="McpServerWizard &gt; Form Validation &gt; validates command for STDIO transport" time="0.038178347">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpServerWizard.test.tsx" name="McpServerWizard &gt; Connection Testing &gt; tests connection successfully" time="0.006318328">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpServerWizard.test.tsx" name="McpServerWizard &gt; Connection Testing &gt; handles connection test failure" time="0.004782179">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpServerWizard.test.tsx" name="McpServerWizard &gt; Server Creation &gt; creates server successfully" time="0.006655223">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpServerWizard.test.tsx" name="McpServerWizard &gt; Server Creation &gt; handles server creation error" time="0.007431633">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpServerWizard.test.tsx" name="McpServerWizard &gt; User Interactions &gt; closes when close button is clicked" time="0.008176439">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpServerWizard.test.tsx" name="McpServerWizard &gt; User Interactions &gt; calls onServerAdded when server is created" time="0.006600948">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpServerWizard.test.tsx" name="McpServerWizard &gt; Accessibility &gt; has proper ARIA labels" time="0.004389942">
        </testcase>
        <testcase classname="tests/renderer/components/MCP/McpServerWizard.test.tsx" name="McpServerWizard &gt; Accessibility &gt; supports keyboard navigation" time="0.003504395">
        </testcase>
    </testsuite>
</testsuites>
